{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import {\n  cast,\n  createContext,\n  isElement,\n  mergeRefs,\n  useSafeLayoutEffect,\n} from \"@yamada-ui/utils\"\nimport type { Provider, RefCallback } from \"react\"\nimport { useRef, useState } from \"react\"\n\nconst sortNodes = (nodes: Node[]) =>\n  nodes.sort((a, b) => {\n    const compare = a.compareDocumentPosition(b)\n\n    if (\n      compare & Node.DOCUMENT_POSITION_FOLLOWING ||\n      compare & Node.DOCUMENT_POSITION_CONTAINED_BY\n    )\n      return -1\n\n    if (\n      compare & Node.DOCUMENT_POSITION_PRECEDING ||\n      compare & Node.DOCUMENT_POSITION_CONTAINS\n    )\n      return 1\n\n    if (\n      compare & Node.DOCUMENT_POSITION_DISCONNECTED ||\n      compare & Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\n    ) {\n      throw Error(\"Cannot sort the given nodes.\")\n    } else {\n      return 0\n    }\n  })\n\nconst getNextIndex = (current: number, max: number, loop: boolean) => {\n  let next = current + 1\n\n  if (loop && next >= max) next = 0\n\n  return next\n}\n\nconst getPrevIndex = (current: number, max: number, loop: boolean) => {\n  let next = current - 1\n\n  if (loop && next < 0) next = max\n\n  return next\n}\n\nexport type DescendantOptions<\n  T extends HTMLElement = HTMLElement,\n  K = {},\n> = K & {\n  disabled?: boolean\n  id?: string\n  filter?: FilterDescendant<T, K>\n}\n\nexport type Descendant<\n  T extends HTMLElement = HTMLElement,\n  K = {},\n> = DescendantOptions<T, K> & {\n  node: T\n  index: number\n}\n\nexport type FilterDescendant<T extends HTMLElement = HTMLElement, K = {}> = (\n  value: Descendant<T, K>,\n  index: number,\n  array: Descendant<T, K>[],\n) => boolean\n\nconst descendantsManager = <T extends HTMLElement = HTMLElement, K = {}>() => {\n  const descendants = new Map<T, Descendant<T, K>>()\n\n  const assignIndex = (newDescendants: Node[]) => {\n    descendants.forEach((descendant) => {\n      const index = newDescendants.indexOf(descendant.node)\n\n      descendant.index = index\n      descendant.node.dataset.index = descendant.index.toString()\n    })\n  }\n\n  const setDescendants = (\n    node: T | null,\n    options?: DescendantOptions<T, K>,\n  ) => {\n    if (!node || descendants.has(node)) return\n\n    const keys = Array.from(descendants.keys()).concat(node)\n    const sorted = sortNodes(keys)\n\n    if (options?.disabled) options.disabled = !!options.disabled\n\n    const descendant = { node, index: -1, ...options }\n\n    descendants.set(node, descendant as Descendant<T, K>)\n\n    assignIndex(sorted)\n  }\n\n  const register = (nodeOrOptions: T | null | DescendantOptions<T, K>) => {\n    if (nodeOrOptions == null) return\n\n    if (isElement(nodeOrOptions)) return setDescendants(nodeOrOptions)\n\n    return (node: T | null) => setDescendants(node, nodeOrOptions)\n  }\n\n  const unregister = (node: T) => {\n    descendants.delete(node)\n\n    const sorted = sortNodes(Array.from(descendants.keys()))\n\n    assignIndex(sorted)\n  }\n\n  const destroy = () => descendants.clear()\n\n  const count = (filter?: FilterDescendant<T, K>) => values(filter).length\n\n  const enabledCount = (filter?: FilterDescendant<T, K>) =>\n    enabledValues(filter).length\n\n  const indexOf = (node: T | null) =>\n    !node ? -1 : descendants.get(node)?.index ?? -1\n\n  const enabledIndexOf = (node: T | null, filter?: FilterDescendant<T, K>) =>\n    node == null\n      ? -1\n      : enabledValues(filter).findIndex((i) => i.node.isSameNode(node))\n\n  const values = (filter?: FilterDescendant<T, K>) => {\n    const values = Array.from(descendants.values())\n\n    if (filter) {\n      return values.filter(filter).sort((a, b) => a.index - b.index)\n    } else {\n      return values.sort((a, b) => a.index - b.index)\n    }\n  }\n\n  const enabledValues = (filter?: FilterDescendant<T, K>) =>\n    values(filter).filter(({ disabled }) => !disabled)\n\n  const value = (index: number, filter?: FilterDescendant<T, K>) => {\n    if (count(filter) === 0) return undefined\n\n    return values(filter)[index]\n  }\n\n  const enabledValue = (index: number, filter?: FilterDescendant<T, K>) => {\n    if (enabledCount(filter) === 0) return undefined\n\n    return enabledValues(filter)[index]\n  }\n\n  const firstValue = (filter?: FilterDescendant<T, K>) => value(0, filter)\n\n  const enabledFirstValue = (filter?: FilterDescendant<T, K>) =>\n    enabledValue(0, filter)\n\n  const lastValue = (filter?: FilterDescendant<T, K>) =>\n    value(descendants.size - 1, filter)\n\n  const enabledLastValue = (filter?: FilterDescendant<T, K>) =>\n    enabledValue(enabledValues(filter).length - 1, filter)\n\n  const prevValue = (\n    index: number,\n    filter?: FilterDescendant<T, K>,\n    loop = true,\n  ) => {\n    const prev = getPrevIndex(index, count(filter) - 1, loop)\n\n    return value(prev, filter)\n  }\n\n  const enabledPrevValue = (\n    index: number,\n    filter?: FilterDescendant<T, K>,\n    loop = true,\n  ) => {\n    const target = value(index)\n\n    if (!target) return\n\n    const enabledIndex = enabledIndexOf(target.node, filter)\n    const prevEnabledIndex = getPrevIndex(\n      enabledIndex,\n      enabledCount(filter) - 1,\n      loop,\n    )\n\n    return enabledValue(prevEnabledIndex, filter)\n  }\n\n  const nextValue = (\n    index: number,\n    filter?: FilterDescendant<T, K>,\n    loop = true,\n  ) => {\n    const next = getNextIndex(index, count(filter), loop)\n\n    return value(next, filter)\n  }\n\n  const enabledNextValue = (\n    index: number,\n    filter?: FilterDescendant<T, K>,\n    loop = true,\n  ) => {\n    const target = value(index)\n\n    if (!target) return\n\n    const enabledIndex = enabledIndexOf(target.node, filter)\n    const nextEnabledIndex = getNextIndex(\n      enabledIndex,\n      enabledCount(filter),\n      loop,\n    )\n\n    return enabledValue(nextEnabledIndex, filter)\n  }\n\n  return {\n    register,\n    unregister,\n    destroy,\n    count,\n    values,\n    value,\n    indexOf,\n    firstValue,\n    lastValue,\n    prevValue,\n    nextValue,\n    enabledCount,\n    enabledValues,\n    enabledValue,\n    enabledIndexOf,\n    enabledFirstValue,\n    enabledLastValue,\n    enabledPrevValue,\n    enabledNextValue,\n  }\n}\n\nexport type DescendantsManager<\n  T extends HTMLElement,\n  K extends Record<string, any> = {},\n> = ReturnType<typeof descendantsManager<T, K>>\n\nconst useDescendants = <\n  T extends HTMLElement = HTMLElement,\n  K extends Record<string, any> = {},\n>() => {\n  const descendants = useRef(descendantsManager<T, K>())\n\n  useSafeLayoutEffect(() => {\n    return () => descendants.current.destroy()\n  })\n\n  return descendants.current\n}\n\ntype UseDescendantsReturn = ReturnType<typeof useDescendants>\n\nconst [DescendantsContextProvider, useDescendantsContext] =\n  createContext<UseDescendantsReturn>({\n    name: \"DescendantsProvider\",\n    errorMessage:\n      \"useDescendantsContext must be used within DescendantsContextProvider\",\n  })\n\nconst useDescendant = <\n  T extends HTMLElement = HTMLElement,\n  K extends Record<string, any> = {},\n>(\n  options?: DescendantOptions<T, K>,\n) => {\n  const descendants = useDescendantsContext()\n  const [index, setIndex] = useState<number>(-1)\n  const ref = useRef<T>(null)\n\n  useSafeLayoutEffect(() => {\n    return () => {\n      if (!ref.current) return\n\n      descendants.unregister(ref.current)\n    }\n  }, [])\n\n  useSafeLayoutEffect(() => {\n    if (!ref.current) return\n\n    const dataIndex = Number(ref.current.dataset.index)\n\n    if (index != dataIndex && !Number.isNaN(dataIndex)) setIndex(dataIndex)\n  })\n\n  const refCallback = options\n    ? cast<RefCallback<T>>(descendants.register(options))\n    : cast<RefCallback<T>>(descendants.register)\n\n  return {\n    descendants,\n    index,\n    enabledIndex: descendants.enabledIndexOf(\n      ref.current,\n      options?.filter as any,\n    ),\n    register: mergeRefs(refCallback, ref),\n  }\n}\n\nexport const createDescendant = <\n  T extends HTMLElement = HTMLElement,\n  K extends Record<string, any> = {},\n>() =>\n  ({\n    DescendantsContextProvider: cast<Provider<DescendantsManager<T, K>>>(\n      DescendantsContextProvider,\n    ),\n    useDescendantsContext: () =>\n      cast<DescendantsManager<T, K>>(useDescendantsContext()),\n    useDescendants: () => useDescendants<T, K>(),\n    useDescendant: (options?: DescendantOptions<T, K>) =>\n      useDescendant<T, K>(options),\n  }) as const\n"],"mappings":"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","names":["values"]}
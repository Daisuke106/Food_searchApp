{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { useCallbackRef } from \"@yamada-ui/utils\"\nimport { useEffect } from \"react\"\n\n/**\n * `useTimeout` is a custom hook that executes a function after a specified number of milliseconds.\n *\n * @see Docs https://yamada-ui.com/hooks/use-timeout\n */\nexport const useTimeout = (\n  callback: (...args: any[]) => void,\n  delay: number | null,\n) => {\n  const func = useCallbackRef(callback)\n\n  useEffect(() => {\n    if (delay == null) return undefined\n\n    let timeoutId: number | null = null\n\n    timeoutId = window.setTimeout(func, delay)\n\n    return () => {\n      if (timeoutId) window.clearTimeout(timeoutId)\n    }\n  }, [delay, func])\n}\n"],"mappings":";;;AAAA,SAAS,sBAAsB;AAC/B,SAAS,iBAAiB;AAOnB,IAAM,aAAa,CACxB,UACA,UACG;AACH,QAAM,OAAO,eAAe,QAAQ;AAEpC,YAAU,MAAM;AACd,QAAI,SAAS;AAAM,aAAO;AAE1B,QAAI,YAA2B;AAE/B,gBAAY,OAAO,WAAW,MAAM,KAAK;AAEzC,WAAO,MAAM;AACX,UAAI;AAAW,eAAO,aAAa,SAAS;AAAA,IAC9C;AAAA,EACF,GAAG,CAAC,OAAO,IAAI,CAAC;AAClB;","names":[]}
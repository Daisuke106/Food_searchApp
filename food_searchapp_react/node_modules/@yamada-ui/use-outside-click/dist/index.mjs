"use client"

// src/index.ts
import { getOwnerDocument, useCallbackRef } from "@yamada-ui/utils";
import { useEffect, useRef } from "react";
var useOutsideClick = ({
  ref,
  handler,
  enabled = true
}) => {
  const handlerRef = useCallbackRef(handler);
  const state = useRef({
    isPointerDown: false,
    ignoreEmulatedMouseEvents: false
  });
  useEffect(() => {
    if (!enabled)
      return;
    const onPointerDown = (ev) => {
      if (isValidEvent(ev, ref))
        state.current.isPointerDown = true;
    };
    const onMouseUp = (ev) => {
      if (state.current.ignoreEmulatedMouseEvents) {
        state.current.ignoreEmulatedMouseEvents = false;
        return;
      }
      if (state.current.isPointerDown && handler && isValidEvent(ev, ref)) {
        state.current.isPointerDown = false;
        handlerRef(ev);
      }
    };
    const onTouchEnd = (ev) => {
      state.current.ignoreEmulatedMouseEvents = true;
      if (handler && state.current.isPointerDown && isValidEvent(ev, ref)) {
        state.current.isPointerDown = false;
        handlerRef(ev);
      }
    };
    const doc = getOwnerDocument(ref.current);
    doc.addEventListener("mousedown", onPointerDown, true);
    doc.addEventListener("mouseup", onMouseUp, true);
    doc.addEventListener("touchstart", onPointerDown, true);
    doc.addEventListener("touchend", onTouchEnd, true);
    return () => {
      doc.removeEventListener("mousedown", onPointerDown, true);
      doc.removeEventListener("mouseup", onMouseUp, true);
      doc.removeEventListener("touchstart", onPointerDown, true);
      doc.removeEventListener("touchend", onTouchEnd, true);
    };
  }, [handler, ref, handlerRef, state, enabled]);
};
var isValidEvent = (ev, ref) => {
  var _a;
  const target = ev.target;
  if ("button" in ev && ev.button > 0)
    return false;
  if (target) {
    if (!getOwnerDocument(target).contains(target))
      return false;
  }
  return !((_a = ref.current) == null ? void 0 : _a.contains(target));
};
export {
  useOutsideClick
};
//# sourceMappingURL=index.mjs.map
"use client"
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/breadcrumb.tsx
var breadcrumb_exports = {};
__export(breadcrumb_exports, {
  Breadcrumb: () => Breadcrumb,
  BreadcrumbEllipsis: () => BreadcrumbEllipsis,
  BreadcrumbItem: () => BreadcrumbItem,
  BreadcrumbLink: () => BreadcrumbLink,
  BreadcrumbSeparator: () => BreadcrumbSeparator
});
module.exports = __toCommonJS(breadcrumb_exports);
var import_core = require("@yamada-ui/core");
var import_icon = require("@yamada-ui/icon");
var import_utils = require("@yamada-ui/utils");
var import_react = require("react");
var import_jsx_runtime = require("react/jsx-runtime");
var [BreadcrumbProvider, useBreadcrumb] = (0, import_utils.createContext)({
  name: "BreadcrumbContext",
  errorMessage: `useBreadcrumb returned is 'undefined'. Seems you forgot to wrap the components in "<Breadcrumb />" `
});
var Breadcrumb = (0, import_core.forwardRef)((props, ref) => {
  const [styles, mergedProps] = (0, import_core.useMultiComponentStyle)("Breadcrumb", props);
  const {
    className,
    children,
    separator = "/",
    gap = "fallback(2, 0.5rem)",
    listProps,
    ...rest
  } = (0, import_core.omitThemeProps)(mergedProps);
  const css = {
    display: "flex",
    alignItems: "center",
    ...styles.list
  };
  const validChildren = (0, import_utils.getValidChildren)(children);
  const count = validChildren.length;
  const cloneChildren = validChildren.map(
    (child, index) => (0, import_react.cloneElement)(child, {
      separator,
      gap,
      isLastChild: count === index + 1
    })
  );
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(BreadcrumbProvider, { value: styles, children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    import_core.ui.nav,
    {
      ref,
      className: (0, import_utils.cx)("ui-breadcrumb", className),
      __css: styles.container,
      ...rest,
      children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_core.ui.ol, { className: "ui-breadcrumb__list", ...listProps, __css: css, children: cloneChildren })
    }
  ) });
});
var BreadcrumbItem = (0, import_core.forwardRef)(
  ({
    className,
    children,
    separator,
    isCurrentPage,
    isLastChild,
    gap,
    ...rest
  }, ref) => {
    const styles = useBreadcrumb();
    const validChildren = (0, import_utils.getValidChildren)(children);
    const cloneChildren = validChildren.map((child) => {
      if (child.type === BreadcrumbLink) {
        return (0, import_react.cloneElement)(child, {
          isCurrentPage
        });
      }
      if (child.type === BreadcrumbSeparator) {
        return (0, import_react.cloneElement)(child, {
          gap,
          children: child.props.children || separator
        });
      }
      return child;
    });
    const css = {
      display: "inline-flex",
      alignItems: "center",
      ...styles.item
    };
    return /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(
      import_core.ui.li,
      {
        ref,
        className: (0, import_utils.cx)("ui-breadcrumb__item", className),
        __css: css,
        ...rest,
        children: [
          cloneChildren,
          !isLastChild ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)(BreadcrumbSeparator, { gap, children: separator }) : null
        ]
      }
    );
  }
);
var BreadcrumbLink = (0, import_core.forwardRef)(
  ({ className, children, isCurrentPage, href, ...rest }, ref) => {
    const styles = useBreadcrumb();
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      import_core.ui.a,
      {
        ref,
        as: !isCurrentPage ? "a" : "span",
        href: !isCurrentPage ? href : void 0,
        "aria-current": isCurrentPage ? "page" : void 0,
        className: (0, import_utils.cx)("ui-breadcrumb__link", className),
        __css: styles.link,
        ...rest,
        children
      }
    );
  }
);
var BreadcrumbSeparator = (0, import_core.forwardRef)(
  ({ children, gap: mx, ...rest }, ref) => {
    const styles = useBreadcrumb();
    const css = {
      mx,
      ...styles.separator
    };
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      import_core.ui.span,
      {
        ref,
        className: "ui-breadcrumb__item__separator",
        __css: css,
        ...rest,
        children
      }
    );
  }
);
var BreadcrumbEllipsis = (0, import_core.forwardRef)(
  ({ children, className, ...rest }, ref) => {
    const styles = useBreadcrumb();
    const css = {
      ...styles.ellipsis
    };
    return children != null ? children : /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(
      import_icon.Icon,
      {
        ref,
        title: "ellipsis",
        className: (0, import_utils.cx)("ui-breadcrumb__item__ellipsis", className),
        __css: css,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 36 24",
        stroke: "currentColor",
        strokeWidth: "1.5",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        ...rest,
        children: [
          /* @__PURE__ */ (0, import_jsx_runtime.jsx)("circle", { cx: "10", cy: "12", r: "2", fill: "currentColor" }),
          /* @__PURE__ */ (0, import_jsx_runtime.jsx)("circle", { cx: "20", cy: "12", r: "2", fill: "currentColor" }),
          /* @__PURE__ */ (0, import_jsx_runtime.jsx)("circle", { cx: "30", cy: "12", r: "2", fill: "currentColor" })
        ]
      }
    );
  }
);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Breadcrumb,
  BreadcrumbEllipsis,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbSeparator
});
//# sourceMappingURL=breadcrumb.js.map
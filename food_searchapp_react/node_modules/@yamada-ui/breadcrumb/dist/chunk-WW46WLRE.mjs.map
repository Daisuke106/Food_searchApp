{"version":3,"sources":["../src/breadcrumb.tsx"],"sourcesContent":["import type {\n  HTMLUIProps,\n  ThemeProps,\n  CSSUIObject,\n  CSSUIProps,\n} from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  omitThemeProps,\n  useMultiComponentStyle,\n} from \"@yamada-ui/core\"\nimport { Icon } from \"@yamada-ui/icon\"\nimport type { IconProps } from \"@yamada-ui/icon\"\nimport { cx, createContext, getValidChildren } from \"@yamada-ui/utils\"\nimport { cloneElement } from \"react\"\n\nconst [BreadcrumbProvider, useBreadcrumb] = createContext<\n  Record<string, CSSUIObject>\n>({\n  name: \"BreadcrumbContext\",\n  errorMessage: `useBreadcrumb returned is 'undefined'. Seems you forgot to wrap the components in \"<Breadcrumb />\" `,\n})\n\ntype BreadcrumbOptions = {\n  /**\n   * The visual separator between each breadcrumb item.\n   *\n   * @default '/'\n   */\n  separator?: string | JSX.Element\n  /**\n   * The left and right margin applied to the separator.\n   *\n   * @default '2'\n   */\n  gap?: CSSUIProps[\"mx\"]\n  /**\n   * Props for ol element.\n   */\n  listProps?: HTMLUIProps<\"ol\">\n}\n\nexport type BreadcrumbProps = Omit<HTMLUIProps<\"nav\">, \"gap\"> &\n  ThemeProps<\"Breadcrumb\"> &\n  BreadcrumbOptions\n\n/**\n * `Breadcrumb` is a component that helps users understand the hierarchy of a website.\n *\n * @see Docs https://yamada-ui.com/components/navigation/breadcrumb\n */\nexport const Breadcrumb = forwardRef<BreadcrumbProps, \"nav\">((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"Breadcrumb\", props)\n\n  const {\n    className,\n    children,\n    separator = \"/\",\n    gap = \"fallback(2, 0.5rem)\",\n    listProps,\n    ...rest\n  } = omitThemeProps(mergedProps)\n\n  const css: CSSUIObject = {\n    display: \"flex\",\n    alignItems: \"center\",\n    ...styles.list,\n  }\n\n  const validChildren = getValidChildren(children)\n  const count = validChildren.length\n\n  const cloneChildren = validChildren.map((child, index) =>\n    cloneElement(child, {\n      separator,\n      gap,\n      isLastChild: count === index + 1,\n    }),\n  )\n\n  return (\n    <BreadcrumbProvider value={styles}>\n      <ui.nav\n        ref={ref}\n        className={cx(\"ui-breadcrumb\", className)}\n        __css={styles.container}\n        {...rest}\n      >\n        <ui.ol className=\"ui-breadcrumb__list\" {...listProps} __css={css}>\n          {cloneChildren}\n        </ui.ol>\n      </ui.nav>\n    </BreadcrumbProvider>\n  )\n})\n\ntype BreadcrumbItemOptions = Pick<BreadcrumbProps, \"separator\" | \"gap\"> & {\n  /**\n   * If `true`, change to span element.\n   *\n   * @default false\n   */\n  isCurrentPage?: boolean\n  /**\n   * If `true`, not show separator.\n   *\n   * @default false\n   */\n  isLastChild?: boolean\n}\n\nexport type BreadcrumbItemProps = HTMLUIProps<\"li\"> & BreadcrumbItemOptions\n\nexport const BreadcrumbItem = forwardRef<BreadcrumbItemOptions, \"li\">(\n  (\n    {\n      className,\n      children,\n      separator,\n      isCurrentPage,\n      isLastChild,\n      gap,\n      ...rest\n    },\n    ref,\n  ) => {\n    const styles = useBreadcrumb()\n\n    const validChildren = getValidChildren(children)\n\n    const cloneChildren = validChildren.map((child) => {\n      if (child.type === BreadcrumbLink) {\n        return cloneElement(child, {\n          isCurrentPage,\n        })\n      }\n\n      if (child.type === BreadcrumbSeparator) {\n        return cloneElement(child, {\n          gap,\n          children: child.props.children || separator,\n        })\n      }\n\n      return child\n    })\n\n    const css: CSSUIObject = {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      ...styles.item,\n    }\n\n    return (\n      <ui.li\n        ref={ref}\n        className={cx(\"ui-breadcrumb__item\", className)}\n        __css={css}\n        {...rest}\n      >\n        {cloneChildren}\n\n        {!isLastChild ? (\n          <BreadcrumbSeparator gap={gap}>{separator}</BreadcrumbSeparator>\n        ) : null}\n      </ui.li>\n    )\n  },\n)\n\ntype BreadcrumbLinkOptions = {\n  /**\n   * If `true`, change to span element.\n   *\n   * @default false\n   */\n  isCurrentPage?: boolean\n}\n\nexport type BreadcrumbLinkProps = HTMLUIProps<\"a\"> & BreadcrumbLinkOptions\n\nexport const BreadcrumbLink = forwardRef<BreadcrumbLinkProps, \"a\">(\n  ({ className, children, isCurrentPage, href, ...rest }, ref) => {\n    const styles = useBreadcrumb()\n\n    return (\n      <ui.a\n        ref={ref}\n        as={!isCurrentPage ? \"a\" : \"span\"}\n        href={!isCurrentPage ? href : undefined}\n        aria-current={isCurrentPage ? \"page\" : undefined}\n        className={cx(\"ui-breadcrumb__link\", className)}\n        __css={styles.link}\n        {...rest}\n      >\n        {children}\n      </ui.a>\n    )\n  },\n)\n\ntype BreadcrumbSeparatorOptions = {\n  /**\n   * The CSS `margin-inline-start`, and `margin-inline-end` property.\n   */\n  gap?: CSSUIObject[\"mx\"]\n}\n\nexport type BreadcrumbSeparatorProps = HTMLUIProps<\"span\"> &\n  BreadcrumbSeparatorOptions\n\nexport const BreadcrumbSeparator = forwardRef<BreadcrumbSeparatorProps, \"span\">(\n  ({ children, gap: mx, ...rest }, ref) => {\n    const styles = useBreadcrumb()\n    const css: CSSUIObject = {\n      mx,\n      ...styles.separator,\n    }\n\n    return (\n      <ui.span\n        ref={ref}\n        className=\"ui-breadcrumb__item__separator\"\n        __css={css}\n        {...rest}\n      >\n        {children}\n      </ui.span>\n    )\n  },\n)\n\ntype BreadcrumbEllipsisOptions = {}\n\nexport type BreadcrumbEllipsisProps = IconProps & BreadcrumbEllipsisOptions\n\nexport const BreadcrumbEllipsis = forwardRef<BreadcrumbEllipsisProps, \"span\">(\n  ({ children, className, ...rest }, ref) => {\n    const styles = useBreadcrumb()\n\n    const css: CSSUIObject = {\n      ...styles.ellipsis,\n    }\n\n    return (\n      children ?? (\n        <Icon\n          ref={ref}\n          title=\"ellipsis\"\n          className={cx(\"ui-breadcrumb__item__ellipsis\", className)}\n          __css={css}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 36 24\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          {...rest}\n        >\n          <circle cx=\"10\" cy=\"12\" r=\"2\" fill=\"currentColor\" />\n          <circle cx=\"20\" cy=\"12\" r=\"2\" fill=\"currentColor\" />\n          <circle cx=\"30\" cy=\"12\" r=\"2\" fill=\"currentColor\" />\n        </Icon>\n      )\n    )\n  },\n)\n"],"mappings":"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","names":[]}
import { Transition } from 'framer-motion';
import { M as MotionTransitionProperties } from './motion-e1qwi-dM.mjs';
import '@yamada-ui/core';
import 'react';
import '@yamada-ui/utils';

declare const MOTION_TRANSITION_EASINGS: {
    readonly ease: readonly [0.25, 0.1, 0.25, 1];
    readonly easeIn: readonly [0.4, 0, 1, 1];
    readonly easeOut: readonly [0, 0, 0.2, 1];
    readonly easeInOut: readonly [0.4, 0, 0.2, 1];
};
declare const MOTION_TRANSITION_VARIANTS: {
    readonly scale: {
        readonly enter: {
            readonly scale: 1;
        };
        readonly exit: {
            readonly scale: 0.95;
        };
    };
    readonly fade: {
        readonly enter: {
            readonly opacity: 1;
        };
        readonly exit: {
            readonly opacity: 0;
        };
    };
    readonly pushLeft: {
        readonly enter: {
            readonly x: "100%";
        };
        readonly exit: {
            readonly x: "-30%";
        };
    };
    readonly pushRight: {
        readonly enter: {
            readonly x: "-100%";
        };
        readonly exit: {
            readonly x: "30%";
        };
    };
    readonly pushUp: {
        readonly enter: {
            readonly y: "100%";
        };
        readonly exit: {
            readonly y: "-30%";
        };
    };
    readonly pushDown: {
        readonly enter: {
            readonly y: "-100%";
        };
        readonly exit: {
            readonly y: "30%";
        };
    };
    readonly slideLeft: {
        readonly position: {
            readonly left: 0;
            readonly top: 0;
            readonly bottom: 0;
            readonly width: "100%";
        };
        readonly enter: {
            readonly x: 0;
            readonly y: 0;
        };
        readonly exit: {
            readonly x: "-100%";
            readonly y: 0;
        };
    };
    readonly slideRight: {
        readonly position: {
            readonly right: 0;
            readonly top: 0;
            readonly bottom: 0;
            readonly width: "100%";
        };
        readonly enter: {
            readonly x: 0;
            readonly y: 0;
        };
        readonly exit: {
            readonly x: "100%";
            readonly y: 0;
        };
    };
    readonly slideUp: {
        readonly position: {
            readonly top: 0;
            readonly left: 0;
            readonly right: 0;
            readonly maxWidth: "100vw";
        };
        readonly enter: {
            readonly x: 0;
            readonly y: 0;
        };
        readonly exit: {
            readonly x: 0;
            readonly y: "-100%";
        };
    };
    readonly slideDown: {
        readonly position: {
            readonly bottom: 0;
            readonly left: 0;
            readonly right: 0;
            readonly maxWidth: "100vw";
        };
        readonly enter: {
            readonly x: 0;
            readonly y: 0;
        };
        readonly exit: {
            readonly x: 0;
            readonly y: "100%";
        };
    };
};
declare const MOTION_TRANSITION_DEFAULTS: {
    readonly enter: {
        readonly duration: 0.25;
        readonly ease: readonly [0, 0, 0.2, 1];
    };
    readonly exit: {
        readonly duration: 0.2;
        readonly ease: readonly [0.4, 0, 1, 1];
    };
};
declare const transitionEnter: (transition?: Transition) => (delay?: MotionTransitionProperties["delay"], duration?: MotionTransitionProperties["duration"]) => Transition;
declare const transitionExit: (transition?: Transition) => (delay?: MotionTransitionProperties["delay"], duration?: MotionTransitionProperties["duration"]) => Transition;

export { MOTION_TRANSITION_DEFAULTS, MOTION_TRANSITION_EASINGS, MOTION_TRANSITION_VARIANTS, transitionEnter, transitionExit };

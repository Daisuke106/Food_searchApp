{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\n\n/**\n * `useBoolean` is a custom hook used to manage boolean values using `on`, `off`, and `toggle` functions.\n *\n * @see Docs https://yamada-ui.com/hooks/use-boolean\n */\nexport const useBoolean = (init: boolean = false): UseBooleanReturn => {\n  const [flg, setFlg] = useState<boolean>(init)\n\n  const on = useCallback(() => setFlg(true), [])\n\n  const off = useCallback(() => setFlg(false), [])\n\n  const toggle = useCallback(() => setFlg((prev) => !prev), [])\n\n  return [flg, { on, off, toggle }]\n}\n\nexport type UseBooleanReturn = [\n  flg: boolean,\n  setFlg: { on: () => void; off: () => void; toggle: () => void },\n]\n"],"mappings":";;;AAAA,SAAS,aAAa,gBAAgB;AAO/B,IAAM,aAAa,CAAC,OAAgB,UAA4B;AACrE,QAAM,CAAC,KAAK,MAAM,IAAI,SAAkB,IAAI;AAE5C,QAAM,KAAK,YAAY,MAAM,OAAO,IAAI,GAAG,CAAC,CAAC;AAE7C,QAAM,MAAM,YAAY,MAAM,OAAO,KAAK,GAAG,CAAC,CAAC;AAE/C,QAAM,SAAS,YAAY,MAAM,OAAO,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC;AAE5D,SAAO,CAAC,KAAK,EAAE,IAAI,KAAK,OAAO,CAAC;AAClC;","names":[]}
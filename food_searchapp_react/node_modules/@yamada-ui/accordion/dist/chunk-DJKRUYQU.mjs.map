{"version":3,"sources":["../src/accordion-label.tsx","../src/accordion-item.tsx","../src/accordion-panel.tsx"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport type { IconProps } from \"@yamada-ui/icon\"\nimport { ChevronIcon } from \"@yamada-ui/icon\"\nimport { cx } from \"@yamada-ui/utils\"\nimport type { FC, PropsWithChildren, ReactNode } from \"react\"\nimport { useAccordionContext } from \"./accordion\"\nimport { useAccordionItemContext } from \"./accordion-item\"\n\ntype AccordionLabelOptions = {\n  /**\n   * The accordion icon to use.\n   */\n  icon?:\n    | ReactNode\n    | ((props: { isExpanded: boolean; isDisabled: boolean }) => ReactNode)\n}\n\nexport type AccordionLabelProps = HTMLUIProps<\"button\"> & AccordionLabelOptions\n\nexport const AccordionLabel = forwardRef<AccordionLabelProps, \"button\">(\n  ({ className, icon: customIcon, children, ...rest }, ref) => {\n    const {\n      isOpen,\n      isDisabled = false,\n      icon: supplementIcon,\n      getLabelProps,\n    } = useAccordionItemContext()\n    const { icon: generalIcon, iconHidden, styles } = useAccordionContext()\n\n    const css: CSSUIObject = {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.button,\n    }\n\n    const cloneCustomIcon =\n      typeof customIcon === \"function\"\n        ? customIcon({\n            isExpanded: isOpen,\n            isDisabled,\n          })\n        : customIcon\n\n    const cloneSupplementIcon =\n      typeof supplementIcon === \"function\"\n        ? supplementIcon({\n            isExpanded: isOpen,\n            isDisabled,\n          })\n        : supplementIcon\n\n    const cloneGeneralIcon =\n      typeof generalIcon === \"function\"\n        ? generalIcon({\n            isExpanded: isOpen,\n            isDisabled,\n          })\n        : generalIcon\n\n    return (\n      <ui.button\n        {...getLabelProps(rest, ref)}\n        className={cx(\"ui-accordion__label\", className)}\n        __css={css}\n      >\n        {children}\n        {!iconHidden ? (\n          <AccordionIcon>\n            {cloneCustomIcon ?? cloneSupplementIcon ?? cloneGeneralIcon}\n          </AccordionIcon>\n        ) : null}\n      </ui.button>\n    )\n  },\n)\n\nconst AccordionIcon: FC<PropsWithChildren<IconProps>> = ({\n  className,\n  children,\n  ...rest\n}) => {\n  const { isOpen, isDisabled } = useAccordionItemContext()\n  const { styles } = useAccordionContext()\n\n  const css: CSSUIObject = {\n    opacity: isDisabled ? 0.4 : 1,\n    transform: isOpen ? \"rotate(-180deg)\" : undefined,\n    transition: \"transform 0.2s\",\n    transformOrigin: \"center\",\n    ...styles.icon,\n  }\n\n  if (children)\n    return (\n      <ui.span\n        className={cx(\"ui-accordion__icon\", className)}\n        __css={{\n          display: \"inline-flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          ml: \"auto\",\n        }}\n      >\n        {children}\n      </ui.span>\n    )\n\n  return (\n    <ChevronIcon\n      className={cx(\"ui-accordion__icon\", className)}\n      __css={css}\n      {...rest}\n    />\n  )\n}\n","import type { CSSUIObject, HTMLUIProps, UIPropGetter } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport {\n  ariaAttr,\n  createContext,\n  cx,\n  findChildren,\n  getValidChildren,\n  handlerAll,\n  isArray,\n  isEmpty,\n  mergeRefs,\n  omitChildren,\n} from \"@yamada-ui/utils\"\nimport type { KeyboardEvent, KeyboardEventHandler, ReactNode } from \"react\"\nimport { useCallback } from \"react\"\nimport { useAccordionContext, useAccordionDescendant } from \"./accordion\"\nimport { AccordionLabel } from \"./accordion-label\"\nimport { AccordionPanel } from \"./accordion-panel\"\n\ntype AccordionItemContext = Omit<AccordionItemOptions, \"children\"> & {\n  isOpen: boolean\n  getLabelProps: UIPropGetter<\"button\">\n  getPanelProps: UIPropGetter\n}\n\nconst [AccordionItemProvider, useAccordionItemContext] =\n  createContext<AccordionItemContext>({\n    name: \"AccordionItemContext\",\n    errorMessage: `useAccordionItemContext returned is 'undefined'. Seems you forgot to wrap the components in \"<AccordionItem />\"`,\n  })\n\nexport { useAccordionItemContext }\n\ntype AccordionItemOptions = {\n  /**\n   * If `true`, the accordion item will be disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * The accordion label to use.\n   */\n  label?:\n    | ReactNode\n    | ((props: { isExpanded: boolean; isDisabled: boolean }) => ReactNode)\n  /**\n   * The accordion icon to use.\n   */\n  icon?:\n    | ReactNode\n    | ((props: { isExpanded: boolean; isDisabled: boolean }) => ReactNode)\n  children?:\n    | ReactNode\n    | ((props: { isExpanded: boolean; isDisabled: boolean }) => ReactNode)\n}\n\nexport type AccordionItemProps = Omit<HTMLUIProps<\"li\">, \"children\"> &\n  AccordionItemOptions\n\nexport const AccordionItem = forwardRef<AccordionItemProps, \"li\">(\n  ({ className, isDisabled = false, label, icon, children, ...rest }, ref) => {\n    const { index, setIndex, setFocusedIndex, isMultiple, isToggle, styles } =\n      useAccordionContext()\n\n    const {\n      index: i,\n      register,\n      descendants,\n    } = useAccordionDescendant({ disabled: isDisabled })\n\n    const isOpen =\n      i !== -1 ? (isArray(index) ? index.includes(i) : index === i) : false\n\n    if (isOpen && isDisabled)\n      console.warn(`Accordion: Cannot open a disabled accordion item`)\n\n    const onChange = useCallback(\n      (isOpen: boolean) => {\n        if (i === -1) return\n\n        if (isMultiple && isArray(index)) {\n          setIndex(isOpen ? index.concat(i) : index.filter((v) => v !== i))\n        } else if (isOpen) {\n          setIndex(i)\n        } else if (isToggle) {\n          setIndex(-1)\n        }\n      },\n      [isMultiple, isToggle, i, index, setIndex],\n    )\n\n    const onFocus = useCallback(() => {\n      setFocusedIndex(i)\n    }, [setFocusedIndex, i])\n\n    const onClick = useCallback(() => {\n      onChange(!isOpen)\n      setFocusedIndex(i)\n    }, [i, setFocusedIndex, isOpen, onChange])\n\n    const onKeyDown = useCallback(\n      (ev: KeyboardEvent) => {\n        const actions: Record<string, KeyboardEventHandler> = {\n          ArrowDown: () => {\n            const next = descendants.enabledNextValue(i)\n\n            next?.node.focus()\n          },\n          ArrowUp: () => {\n            const prev = descendants.enabledPrevValue(i)\n\n            prev?.node.focus()\n          },\n          Home: () => {\n            const first = descendants.enabledFirstValue()\n\n            first?.node.focus()\n          },\n          End: () => {\n            const last = descendants.enabledLastValue()\n\n            last?.node.focus()\n          },\n        }\n\n        const action = actions[ev.key]\n\n        if (!action) return\n\n        ev.preventDefault()\n        action(ev)\n      },\n      [descendants, i],\n    )\n\n    const getLabelProps: UIPropGetter<\"button\"> = useCallback(\n      (props = {}, ref = null) => ({\n        ...props,\n        ref: mergeRefs(register, ref),\n        type: \"button\",\n        disabled: isDisabled,\n        \"aria-expanded\": ariaAttr(isOpen),\n        onClick: handlerAll(props.onClick, onClick),\n        onFocus: handlerAll(props.onFocus, onFocus),\n        onKeyDown: handlerAll(props.onKeyDown, onKeyDown),\n      }),\n      [isDisabled, isOpen, onClick, onFocus, onKeyDown, register],\n    )\n\n    const getPanelProps: UIPropGetter = useCallback(\n      (props = {}, ref = null) => ({ ...props, ref }),\n      [],\n    )\n\n    const css: CSSUIObject = { ...styles.item, overflowAnchor: \"none\" }\n\n    const cloneLabel =\n      typeof label === \"function\"\n        ? label({\n            isExpanded: isOpen,\n            isDisabled,\n          })\n        : label\n\n    if (typeof children === \"function\")\n      children = children({ isExpanded: isOpen, isDisabled })\n\n    const validChildren = getValidChildren(children)\n\n    const [customAccordionLabel] = findChildren(validChildren, AccordionLabel)\n    const [customAccordionPanel] = findChildren(validChildren, AccordionPanel)\n\n    const cloneChildren = !isEmpty(validChildren)\n      ? omitChildren(validChildren, AccordionLabel, AccordionPanel)\n      : children\n\n    return (\n      <AccordionItemProvider\n        value={{ isOpen, isDisabled, icon, getLabelProps, getPanelProps }}\n      >\n        <ui.li\n          ref={ref}\n          className={cx(\"ui-accordion__item\", className)}\n          aria-expanded={ariaAttr(isOpen)}\n          __css={css}\n          {...rest}\n        >\n          {customAccordionLabel ?? (\n            <AccordionLabel>{cloneLabel}</AccordionLabel>\n          )}\n          {customAccordionPanel ?? (\n            <AccordionPanel>{cloneChildren}</AccordionPanel>\n          )}\n        </ui.li>\n      </AccordionItemProvider>\n    )\n  },\n)\n","import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport type { WithTransitionProps } from \"@yamada-ui/motion\"\nimport type { CollapseProps } from \"@yamada-ui/transitions\"\nimport { Collapse } from \"@yamada-ui/transitions\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useAccordionContext } from \"./accordion\"\nimport { useAccordionItemContext } from \"./accordion-item\"\n\nexport type AccordionPanelProps = Omit<\n  WithTransitionProps<HTMLUIProps<\"div\">>,\n  \"isOpen\"\n> &\n  Pick<CollapseProps, \"animationOpacity\" | \"startingHeight\" | \"endingHeight\">\n\nexport const AccordionPanel = forwardRef<AccordionPanelProps, \"div\">(\n  (\n    {\n      className,\n      unmountOnExit,\n      animationOpacity,\n      startingHeight,\n      endingHeight,\n      transition,\n      transitionEnd,\n      delay,\n      duration,\n      children,\n      ...rest\n    },\n    ref,\n  ) => {\n    const { isOpen, getPanelProps } = useAccordionItemContext()\n    const { styles } = useAccordionContext()\n\n    const resolvedChildren =\n      typeof children === \"string\" ? <p>{children}</p> : children\n\n    const css: CSSUIObject = { ...styles.panel }\n\n    return (\n      <Collapse\n        {...{\n          isOpen,\n          unmountOnExit,\n          animationOpacity,\n          startingHeight,\n          endingHeight,\n          transition,\n          transitionEnd,\n          delay,\n          duration,\n        }}\n      >\n        <ui.div\n          {...getPanelProps(rest, ref)}\n          className={cx(\"ui-accordion__panel\", className)}\n          __css={css}\n        >\n          {resolvedChildren}\n        </ui.div>\n      </Collapse>\n    )\n  },\n)\n"],"mappings":"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","names":["ui","forwardRef","cx","ui","forwardRef","cx","jsx","forwardRef","isOpen","ref","jsx","ui","cx","jsx","jsxs","forwardRef","ui","cx"]}
import * as _yamada_ui_core from '@yamada-ui/core';
import { HTMLUIProps, UIPropGetter } from '@yamada-ui/core';
import { ReactNode } from 'react';

type AccordionItemContext = Omit<AccordionItemOptions, "children"> & {
    isOpen: boolean;
    getLabelProps: UIPropGetter<"button">;
    getPanelProps: UIPropGetter;
};
declare const useAccordionItemContext: () => AccordionItemContext;

type AccordionItemOptions = {
    /**
     * If `true`, the accordion item will be disabled.
     *
     * @default false
     */
    isDisabled?: boolean;
    /**
     * The accordion label to use.
     */
    label?: ReactNode | ((props: {
        isExpanded: boolean;
        isDisabled: boolean;
    }) => ReactNode);
    /**
     * The accordion icon to use.
     */
    icon?: ReactNode | ((props: {
        isExpanded: boolean;
        isDisabled: boolean;
    }) => ReactNode);
    children?: ReactNode | ((props: {
        isExpanded: boolean;
        isDisabled: boolean;
    }) => ReactNode);
};
type AccordionItemProps = Omit<HTMLUIProps<"li">, "children"> & AccordionItemOptions;
declare const AccordionItem: _yamada_ui_core.Component<"li", AccordionItemProps>;

export { AccordionItem, type AccordionItemProps, useAccordionItemContext };

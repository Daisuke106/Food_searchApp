{"version":3,"sources":["../src/index.ts","../src/native-table.tsx","../src/table-container.tsx","../src/thead.tsx","../src/tbody.tsx","../src/tfoot.tsx","../src/tr.tsx","../src/th.tsx","../src/td.tsx","../src/table-caption.tsx"],"sourcesContent":["export { NativeTable, TableStyleProvider, useTableStyles } from \"./native-table\"\nexport type { NativeTableProps } from \"./native-table\"\nexport { TableContainer } from \"./table-container\"\nexport type { TableContainerProps } from \"./table-container\"\nexport { Thead } from \"./thead\"\nexport type { TableHeadProps } from \"./thead\"\nexport { Tbody } from \"./tbody\"\nexport type { TableBodyProps } from \"./tbody\"\nexport { Tfoot } from \"./tfoot\"\nexport type { TableFootProps } from \"./tfoot\"\nexport { Tr } from \"./tr\"\nexport type { TrProps } from \"./tr\"\nexport { Th } from \"./th\"\nexport type { ThProps } from \"./th\"\nexport { Td } from \"./td\"\nexport type { TdProps } from \"./td\"\nexport { TableCaption } from \"./table-caption\"\nexport type { TableCaptionProps } from \"./table-caption\"\n","import type { CSSUIObject, HTMLUIProps, ThemeProps } from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport { createContext, cx } from \"@yamada-ui/utils\"\n\ntype TableStyleContext = Record<string, CSSUIObject>\n\nexport const [TableStyleProvider, useTableStyles] =\n  createContext<TableStyleContext>({\n    name: \"TableStyleContext\",\n    errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" or \"<NativeTable />\" or \"<PagingTable />\"`,\n  })\n\ntype NativeTableOptions = {\n  /**\n   * The CSS `table-layout` property.\n   */\n  layout?: CSSUIObject[\"tableLayout\"]\n  /**\n   * If `true`, highlight the row when the table row is hovered.\n   *\n   * @default false\n   */\n  highlightOnHover?: boolean\n  /**\n   * If `true`, display the outer border of the table.\n   *\n   * @default false\n   */\n  withBorder?: boolean\n  /**\n   * If `true`, display line on the columns of the table.\n   *\n   * @default false\n   */\n  withColumnBorders?: boolean\n}\n\nexport type NativeTableProps = HTMLUIProps<\"table\"> &\n  ThemeProps<\"NativeTable\"> &\n  NativeTableOptions\n\n/**\n * `NativeTable` is a component for efficiently organizing and displaying data.\n *\n * @see Docs https://yamada-ui.com/components/data-display/native-table\n */\nexport const NativeTable = forwardRef<NativeTableProps, \"table\">(\n  (props, ref) => {\n    const [styles, mergedProps] = useMultiComponentStyle(\"NativeTable\", props)\n    const { className, layout, ...rest } = omitThemeProps(mergedProps, [\n      \"withBorder\",\n      \"withColumnBorders\",\n      \"highlightOnHover\",\n    ])\n\n    const css: CSSUIObject = { tableLayout: layout, ...styles.table }\n\n    return (\n      <TableStyleProvider value={styles}>\n        <ui.table\n          ref={ref}\n          className={cx(\"ui-table\", className)}\n          __css={css}\n          {...rest}\n        />\n      </TableStyleProvider>\n    )\n  },\n)\n","import type { HTMLUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\n\nexport type TableContainerProps = HTMLUIProps<\"div\">\n\nexport const TableContainer = forwardRef<TableContainerProps, \"div\">(\n  ({ className, overflow, overflowX, ...rest }, ref) => {\n    const css: CSSUIObject = {\n      display: \"block\",\n      whiteSpace: \"nowrap\",\n      WebkitOverflowScrolling: \"touch\",\n      overflowX: (overflow ?? overflowX ?? \"auto\") as CSSUIObject[\"overflowX\"],\n      overflowY: \"hidden\",\n      maxW: \"100%\",\n    }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-table__container\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n","import type { HTMLUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useTableStyles } from \"./native-table\"\n\nexport type TableHeadProps = HTMLUIProps<\"thead\">\n\nexport const Thead = forwardRef<TableHeadProps, \"thead\">(\n  ({ className, ...rest }, ref) => {\n    const styles = useTableStyles()\n\n    const css: CSSUIObject = { ...styles.thead }\n\n    return (\n      <ui.thead\n        ref={ref}\n        className={cx(\"ui-table__thead\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n","import type { HTMLUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useTableStyles } from \"./native-table\"\n\nexport type TableBodyProps = HTMLUIProps<\"tbody\">\n\nexport const Tbody = forwardRef<TableBodyProps, \"tbody\">(\n  ({ className, ...rest }, ref) => {\n    const styles = useTableStyles()\n\n    const css: CSSUIObject = { ...styles.tbody }\n\n    return (\n      <ui.tbody\n        ref={ref}\n        className={cx(\"ui-table__tbody\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n","import type { HTMLUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useTableStyles } from \"./native-table\"\n\nexport type TableFootProps = HTMLUIProps<\"tfoot\">\n\nexport const Tfoot = forwardRef<TableFootProps, \"tfoot\">(\n  ({ className, ...rest }, ref) => {\n    const styles = useTableStyles()\n\n    const css: CSSUIObject = { ...styles.tfoot }\n\n    return (\n      <ui.tfoot\n        ref={ref}\n        className={cx(\"ui-table__tfoot\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n","import type { HTMLUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useTableStyles } from \"./native-table\"\n\nexport type TrProps = HTMLUIProps<\"tr\">\n\nexport const Tr = forwardRef<TrProps, \"tr\">(({ className, ...rest }, ref) => {\n  const styles = useTableStyles()\n\n  const css: CSSUIObject = { ...styles.tr }\n\n  return (\n    <ui.tr\n      ref={ref}\n      className={cx(\"ui-table__tr\", className)}\n      __css={css}\n      {...rest}\n    />\n  )\n})\n","import type { HTMLUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useTableStyles } from \"./native-table\"\n\ntype ThOptions = {\n  /**\n   * Aligns the cell content to the right.\n   *\n   * @default false\n   */\n  isNumeric?: boolean\n}\n\nexport type ThProps = HTMLUIProps<\"th\"> & ThOptions\n\nexport const Th = forwardRef<ThProps, \"th\">(\n  ({ className, isNumeric, __css, ...rest }, ref) => {\n    const styles = useTableStyles()\n\n    const css: CSSUIObject = { ...styles.th, ...__css }\n\n    return (\n      <ui.th\n        ref={ref}\n        className={cx(\"ui-table__th\", className)}\n        __css={css}\n        data-is-numeric={isNumeric}\n        {...rest}\n      />\n    )\n  },\n)\n","import type { HTMLUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useTableStyles } from \"./native-table\"\n\ntype TdOptions = {\n  /**\n   * Aligns the cell content to the right.\n   *\n   * @default false\n   */\n  isNumeric?: boolean\n}\n\nexport type TdProps = HTMLUIProps<\"td\"> & TdOptions\n\nexport const Td = forwardRef<TdProps, \"td\">(\n  ({ className, isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles()\n\n    const css: CSSUIObject = { ...styles.td }\n\n    return (\n      <ui.td\n        ref={ref}\n        className={cx(\"ui-table__td\", className)}\n        __css={css}\n        data-is-numeric={isNumeric}\n        {...rest}\n      />\n    )\n  },\n)\n","import type { HTMLUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useTableStyles } from \"./native-table\"\n\ntype TableCaptionOptions = {\n  /**\n   * The placement of the table caption.\n   *\n   * @default 'bottom'\n   */\n  placement?: \"top\" | \"bottom\"\n}\n\nexport type TableCaptionProps = HTMLUIProps<\"caption\"> & TableCaptionOptions\n\nexport const TableCaption = forwardRef<TableCaptionProps, \"caption\">(\n  ({ className, placement = \"bottom\", ...rest }, ref) => {\n    const styles = useTableStyles()\n\n    const css: CSSUIObject = { captionSide: placement, ...styles.caption }\n\n    return (\n      <ui.caption\n        ref={ref}\n        className={cx(\"ui-table__caption\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n"],"mappings":"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","names":["import_core","import_utils","import_jsx_runtime","import_core","import_utils","import_jsx_runtime","import_core","import_utils","import_jsx_runtime","import_core","import_utils","import_jsx_runtime","import_core","import_utils","import_jsx_runtime","import_core","import_utils","import_jsx_runtime","import_core","import_utils","import_jsx_runtime","import_core","import_utils","import_jsx_runtime"]}
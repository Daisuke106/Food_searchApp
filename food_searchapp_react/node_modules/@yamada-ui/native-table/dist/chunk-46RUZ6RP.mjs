"use client"

// src/native-table.tsx
import {
  ui,
  forwardRef,
  useMultiComponentStyle,
  omitThemeProps
} from "@yamada-ui/core";
import { createContext, cx } from "@yamada-ui/utils";
import { jsx } from "react/jsx-runtime";
var [TableStyleProvider, useTableStyles] = createContext({
  name: "TableStyleContext",
  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in "<Table />" or "<NativeTable />" or "<PagingTable />"`
});
var NativeTable = forwardRef(
  (props, ref) => {
    const [styles, mergedProps] = useMultiComponentStyle("NativeTable", props);
    const { className, layout, ...rest } = omitThemeProps(mergedProps, [
      "withBorder",
      "withColumnBorders",
      "highlightOnHover"
    ]);
    const css = { tableLayout: layout, ...styles.table };
    return /* @__PURE__ */ jsx(TableStyleProvider, { value: styles, children: /* @__PURE__ */ jsx(
      ui.table,
      {
        ref,
        className: cx("ui-table", className),
        __css: css,
        ...rest
      }
    ) });
  }
);

export {
  TableStyleProvider,
  useTableStyles,
  NativeTable
};
//# sourceMappingURL=chunk-46RUZ6RP.mjs.map
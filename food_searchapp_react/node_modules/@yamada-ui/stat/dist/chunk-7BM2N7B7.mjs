"use client"

// src/stat-helper-message.tsx
import { forwardRef as forwardRef5, ui as ui4 } from "@yamada-ui/core";
import { cx as cx5 } from "@yamada-ui/utils";

// src/stat.tsx
import {
  ui as ui3,
  forwardRef as forwardRef4,
  useMultiComponentStyle,
  omitThemeProps
} from "@yamada-ui/core";
import {
  createContext,
  cx as cx4,
  findChildren,
  getValidChildren,
  isEmpty,
  omitChildren
} from "@yamada-ui/utils";

// src/stat-icon.tsx
import { forwardRef } from "@yamada-ui/core";
import { Icon } from "@yamada-ui/icon";
import { cx } from "@yamada-ui/utils";
import { jsx } from "react/jsx-runtime";
var StatIcon = forwardRef(
  ({ className, type = "increase", ...rest }, ref) => {
    const styles = useStat();
    const css = { ...styles.icon };
    return /* @__PURE__ */ jsx(
      Icon,
      {
        ref,
        className: cx("ui-stat__icon", className),
        "aria-label": type === "increase" ? "Increased by" : "Decreased by",
        viewBox: "0 0 24 24",
        __css: css,
        ...rest,
        children: type === "increase" ? /* @__PURE__ */ jsx(
          "path",
          {
            fill: "var(--ui-increase)",
            d: "M12.8,5.4c-0.377-0.504-1.223-0.504-1.6,0l-9,12c-0.228,0.303-0.264,0.708-0.095,1.047 C2.275,18.786,2.621,19,3,19h18c0.379,0,0.725-0.214,0.895-0.553c0.169-0.339,0.133-0.744-0.095-1.047L12.8,5.4z"
          }
        ) : /* @__PURE__ */ jsx(
          "path",
          {
            fill: "var(--ui-decrease)",
            d: "M21,5H3C2.621,5,2.275,5.214,2.105,5.553C1.937,5.892,1.973,6.297,2.2,6.6l9,12 c0.188,0.252,0.485,0.4,0.8,0.4s0.611-0.148,0.8-0.4l9-12c0.228-0.303,0.264-0.708,0.095-1.047C21.725,5.214,21.379,5,21,5z"
          }
        )
      }
    );
  }
);

// src/stat-label.tsx
import { forwardRef as forwardRef2, ui } from "@yamada-ui/core";
import { cx as cx2 } from "@yamada-ui/utils";
import { jsx as jsx2 } from "react/jsx-runtime";
var StatLabel = forwardRef2(
  ({ className, ...rest }, ref) => {
    const styles = useStat();
    const css = { ...styles.label };
    return /* @__PURE__ */ jsx2(
      ui.dt,
      {
        ref,
        className: cx2("ui-stat__label", className),
        __css: css,
        ...rest
      }
    );
  }
);

// src/stat-number.tsx
import { forwardRef as forwardRef3, ui as ui2 } from "@yamada-ui/core";
import { cx as cx3 } from "@yamada-ui/utils";
import { jsx as jsx3 } from "react/jsx-runtime";
var StatNumber = forwardRef3(
  ({ className, ...rest }, ref) => {
    const styles = useStat();
    const css = {
      ...styles.number
    };
    return /* @__PURE__ */ jsx3(
      ui2.dd,
      {
        ref,
        className: cx3("ui-stat__number", className),
        __css: css,
        ...rest
      }
    );
  }
);

// src/stat.tsx
import { jsx as jsx4, jsxs } from "react/jsx-runtime";
var [StatProvider, useStat] = createContext({
  name: "StatContext",
  errorMessage: `useStat returned is 'undefined'. Seems you forgot to wrap the components in "<Stat />"`
});
var Stat = forwardRef4((props, ref) => {
  const [styles, mergedProps] = useMultiComponentStyle("Stat", props);
  const {
    className,
    label,
    labelProps,
    number,
    numberProps,
    icon,
    iconProps,
    helperMessage,
    helperMessageProps,
    centerContent = false,
    children,
    ...rest
  } = omitThemeProps(mergedProps);
  const css = {
    display: "flex",
    flexDirection: "column",
    alignItems: centerContent ? "center" : "flex-start",
    ...styles.container
  };
  const validChildren = getValidChildren(children);
  const [customStatLabel] = findChildren(validChildren, StatLabel);
  const [customStatNumber] = findChildren(validChildren, StatNumber);
  const [customStatHelperMessage] = findChildren(
    validChildren,
    StatHelperMessage
  );
  const cloneChildren = !isEmpty(validChildren) ? omitChildren(validChildren, StatLabel, StatNumber, StatHelperMessage) : children;
  return /* @__PURE__ */ jsx4(StatProvider, { value: styles, children: /* @__PURE__ */ jsxs(
    ui3.dl,
    {
      ref,
      className: cx4("ui-stat", className),
      __css: css,
      ...rest,
      children: [
        customStatLabel != null ? customStatLabel : /* @__PURE__ */ jsx4(StatLabel, { ...labelProps, children: label }),
        customStatNumber != null ? customStatNumber : /* @__PURE__ */ jsx4(StatNumber, { ...numberProps, children: number }),
        customStatHelperMessage != null ? customStatHelperMessage : /* @__PURE__ */ jsxs(StatHelperMessage, { ...helperMessageProps, children: [
          icon ? /* @__PURE__ */ jsx4(StatIcon, { type: icon, ...iconProps }) : null,
          helperMessage
        ] }),
        cloneChildren
      ]
    }
  ) });
});

// src/stat-helper-message.tsx
import { jsx as jsx5 } from "react/jsx-runtime";
var StatHelperMessage = forwardRef5(
  ({ className, ...rest }, ref) => {
    const styles = useStat();
    const css = { ...styles.helperMessage };
    return /* @__PURE__ */ jsx5(
      ui4.dd,
      {
        ref,
        className: cx5("ui-stat__helper-message", className),
        __css: css,
        ...rest
      }
    );
  }
);

export {
  StatHelperMessage,
  StatIcon,
  StatLabel,
  StatNumber,
  StatProvider,
  useStat,
  Stat
};
//# sourceMappingURL=chunk-7BM2N7B7.mjs.map
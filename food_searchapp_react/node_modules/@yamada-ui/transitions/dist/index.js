"use client"
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  Collapse: () => Collapse,
  Fade: () => Fade,
  ScaleFade: () => ScaleFade,
  Slide: () => Slide,
  SlideFade: () => SlideFade,
  collapseProps: () => collapseProps,
  fadeProps: () => fadeProps,
  scaleFadeProps: () => scaleFadeProps,
  slideFadeProps: () => slideFadeProps,
  slideProps: () => slideProps
});
module.exports = __toCommonJS(src_exports);

// src/collapse.tsx
var import_core = require("@yamada-ui/core");
var import_motion = require("@yamada-ui/motion");
var import_utils = require("@yamada-ui/utils");
var import_react = require("react");
var import_jsx_runtime = require("react/jsx-runtime");
var isNumeric = (value) => value != null && parseFloat(value.toString()) > 0;
var variants = {
  enter: ({
    animationOpacity,
    endingHeight: height,
    transition,
    transitionEnd,
    delay,
    duration,
    enter
  } = {}) => ({
    ...animationOpacity ? { opacity: 1 } : {},
    height,
    transition: (0, import_motion.transitionEnter)(transition == null ? void 0 : transition.enter)(delay, duration),
    transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter,
    ...enter
  }),
  exit: ({
    animationOpacity,
    startingHeight: height,
    transition,
    transitionEnd,
    delay,
    duration,
    exit
  } = {}) => ({
    ...animationOpacity ? { opacity: isNumeric(height) ? 1 : 0 } : {},
    height,
    transition: (0, import_motion.transitionExit)(transition == null ? void 0 : transition.exit)(delay, duration),
    transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit,
    ...exit
  })
};
var collapseProps = {
  initial: "exit",
  animate: "enter",
  exit: "exit",
  variants
};
var Collapse = (0, import_core.forwardRef)(
  ({
    unmountOnExit,
    isOpen,
    animationOpacity = true,
    startingHeight = 0,
    endingHeight = "auto",
    transition,
    transitionEnd,
    delay,
    duration,
    className,
    style,
    __css,
    ...rest
  }, ref) => {
    const [mounted, setMounted] = (0, import_react.useState)(false);
    (0, import_react.useEffect)(() => {
      const isBrowser = (0, import_utils.createdDom)();
      if (isBrowser)
        setMounted(true);
    }, []);
    const hasStartingHeight = parseFloat(startingHeight.toString()) > 0;
    const animate = isOpen || unmountOnExit ? "enter" : "exit";
    isOpen = unmountOnExit ? isOpen : true;
    transition = !mounted ? { enter: { duration: 0 } } : transition != null ? transition : {
      enter: {
        height: {
          duration: duration != null ? duration : 0.3,
          ease: import_motion.MOTION_TRANSITION_EASINGS.ease
        },
        opacity: {
          duration: duration != null ? duration : 0.4,
          ease: import_motion.MOTION_TRANSITION_EASINGS.ease
        }
      },
      exit: {
        height: {
          duration: duration != null ? duration : 0.3,
          ease: import_motion.MOTION_TRANSITION_EASINGS.ease
        },
        opacity: {
          duration: duration != null ? duration : 0.4,
          ease: import_motion.MOTION_TRANSITION_EASINGS.ease
        }
      }
    };
    transitionEnd = unmountOnExit ? transitionEnd : {
      ...transitionEnd,
      exit: {
        ...transitionEnd == null ? void 0 : transitionEnd.exit,
        display: hasStartingHeight ? "block" : "none"
      }
    };
    const custom = {
      animationOpacity,
      startingHeight,
      endingHeight,
      transition,
      transitionEnd,
      delay,
      duration
    };
    const css = {
      w: "100%",
      ...__css
    };
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_motion.AnimatePresence, { initial: false, custom, children: isOpen ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      import_motion.Motion,
      {
        ref,
        className: (0, import_utils.cx)("ui-collapse", className),
        ...rest,
        ...collapseProps,
        custom,
        animate,
        initial: unmountOnExit ? "exit" : false,
        __css: css,
        style: {
          overflow: "hidden",
          display: "block",
          ...style
        }
      }
    ) : null });
  }
);

// src/fade.tsx
var import_core2 = require("@yamada-ui/core");
var import_motion2 = require("@yamada-ui/motion");
var import_utils2 = require("@yamada-ui/utils");
var import_jsx_runtime2 = require("react/jsx-runtime");
var variants2 = {
  enter: ({ transition, transitionEnd, delay, duration, enter } = {}) => ({
    opacity: 1,
    transition: (0, import_motion2.transitionEnter)(transition == null ? void 0 : transition.enter)(delay, duration),
    transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter,
    ...enter
  }),
  exit: ({ transition, transitionEnd, delay, duration, exit } = {}) => ({
    opacity: 0,
    transition: (0, import_motion2.transitionExit)(transition == null ? void 0 : transition.exit)(delay, duration),
    transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit,
    ...exit
  })
};
var fadeProps = {
  initial: "exit",
  animate: "enter",
  exit: "exit",
  variants: variants2
};
var Fade = (0, import_core2.forwardRef)(
  ({
    unmountOnExit,
    isOpen,
    transition,
    transitionEnd,
    delay,
    duration,
    className,
    ...rest
  }, ref) => {
    const animate = isOpen || unmountOnExit ? "enter" : "exit";
    const custom = { transition, transitionEnd, delay, duration };
    isOpen = unmountOnExit ? isOpen && unmountOnExit : true;
    const css = {
      w: "100%"
    };
    return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_motion2.AnimatePresence, { custom, children: isOpen ? /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
      import_motion2.Motion,
      {
        ref,
        className: (0, import_utils2.cx)("ui-fade", className),
        custom,
        ...fadeProps,
        animate,
        __css: css,
        ...rest
      }
    ) : null });
  }
);

// src/scale-fade.tsx
var import_core3 = require("@yamada-ui/core");
var import_motion3 = require("@yamada-ui/motion");
var import_utils3 = require("@yamada-ui/utils");
var import_jsx_runtime3 = require("react/jsx-runtime");
var variants3 = {
  enter: ({ transition, transitionEnd, delay, duration, enter } = {}) => ({
    opacity: 1,
    scale: 1,
    transition: (0, import_motion3.transitionEnter)(transition == null ? void 0 : transition.enter)(delay, duration),
    transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter,
    ...enter
  }),
  exit: ({
    scale,
    reverse,
    transition,
    transitionEnd,
    delay,
    duration,
    exit
  } = {}) => ({
    opacity: 0,
    transition: (0, import_motion3.transitionExit)(transition == null ? void 0 : transition.exit)(delay, duration),
    ...reverse ? { scale, transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit } : { transitionEnd: { scale, ...transitionEnd == null ? void 0 : transitionEnd.exit } },
    ...exit
  })
};
var scaleFadeProps = {
  initial: "exit",
  animate: "enter",
  exit: "exit",
  variants: variants3
};
var ScaleFade = (0, import_core3.forwardRef)(
  ({
    unmountOnExit,
    isOpen,
    scale = 0.95,
    reverse = true,
    transition,
    transitionEnd,
    delay,
    duration,
    className,
    ...rest
  }, ref) => {
    const animate = isOpen || unmountOnExit ? "enter" : "exit";
    const custom = {
      scale,
      reverse,
      transition,
      transitionEnd,
      delay,
      duration
    };
    isOpen = unmountOnExit ? isOpen && unmountOnExit : true;
    const css = {
      w: "100%"
    };
    return /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(import_motion3.AnimatePresence, { custom, children: isOpen ? /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
      import_motion3.Motion,
      {
        ref,
        className: (0, import_utils3.cx)("ui-scale-fade", className),
        custom,
        ...scaleFadeProps,
        animate,
        __css: css,
        ...rest
      }
    ) : null });
  }
);

// src/slide.tsx
var import_core4 = require("@yamada-ui/core");
var import_motion4 = require("@yamada-ui/motion");
var import_use_value = require("@yamada-ui/use-value");
var import_utils4 = require("@yamada-ui/utils");
var import_jsx_runtime4 = require("react/jsx-runtime");
var getSlideProps = (placement = "right") => {
  switch (placement) {
    case "right":
      return import_motion4.MOTION_TRANSITION_VARIANTS.slideRight;
    case "left":
      return import_motion4.MOTION_TRANSITION_VARIANTS.slideLeft;
    case "bottom":
      return import_motion4.MOTION_TRANSITION_VARIANTS.slideDown;
    case "top":
      return import_motion4.MOTION_TRANSITION_VARIANTS.slideUp;
  }
};
var variants4 = {
  enter: ({
    placement,
    transition,
    transitionEnd,
    delay,
    duration,
    enter
  } = {}) => ({
    ...getSlideProps(placement).enter,
    transition: (0, import_motion4.transitionEnter)(transition == null ? void 0 : transition.enter)(delay, duration),
    transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter,
    ...enter
  }),
  exit: ({
    placement,
    transition,
    transitionEnd,
    delay,
    duration,
    exit
  } = {}) => ({
    ...getSlideProps(placement).exit,
    transition: (0, import_motion4.transitionExit)(transition == null ? void 0 : transition.exit)(delay, duration),
    transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit,
    ...exit
  })
};
var slideProps = {
  initial: "exit",
  animate: "enter",
  exit: "exit",
  variants: variants4
};
var Slide = (0, import_core4.forwardRef)(
  ({
    unmountOnExit,
    isOpen,
    placement: _placement = "right",
    transition,
    transitionEnd,
    delay,
    duration = { enter: 0.4, exit: 0.3 },
    className,
    __css,
    ...rest
  }, ref) => {
    const animate = isOpen || unmountOnExit ? "enter" : "exit";
    const placement = (0, import_use_value.useValue)(_placement);
    const custom = { placement, transition, transitionEnd, delay, duration };
    isOpen = unmountOnExit ? isOpen && unmountOnExit : true;
    const { position } = getSlideProps(placement);
    const css = {
      position: "fixed",
      zIndex: "fallback(jeice, 110)",
      ...__css,
      ...position
    };
    return /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(import_motion4.AnimatePresence, { custom, children: isOpen ? /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
      import_motion4.Motion,
      {
        ref,
        className: (0, import_utils4.cx)("ui-slide", className),
        custom,
        ...slideProps,
        animate,
        __css: css,
        ...rest
      }
    ) : null });
  }
);

// src/slide-fade.tsx
var import_core5 = require("@yamada-ui/core");
var import_motion5 = require("@yamada-ui/motion");
var import_use_value2 = require("@yamada-ui/use-value");
var import_utils5 = require("@yamada-ui/utils");
var import_jsx_runtime5 = require("react/jsx-runtime");
var variants5 = {
  initial: ({
    offsetX,
    offsetY,
    transition,
    transitionEnd,
    delay,
    duration,
    initial
  }) => ({
    opacity: 0,
    x: offsetX,
    y: offsetY,
    transition: (0, import_motion5.transitionExit)(transition == null ? void 0 : transition.exit)(delay, duration),
    transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit,
    ...initial
  }),
  enter: ({ transition, transitionEnd, delay, duration, enter } = {}) => ({
    opacity: 1,
    x: 0,
    y: 0,
    transition: (0, import_motion5.transitionEnter)(transition == null ? void 0 : transition.enter)(delay, duration),
    transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter,
    ...enter
  }),
  exit: ({
    offsetX,
    offsetY,
    reverse,
    transition,
    transitionEnd,
    delay,
    duration,
    exit
  } = {}) => ({
    opacity: 0,
    transition: (0, import_motion5.transitionExit)(transition == null ? void 0 : transition.exit)(delay, duration),
    ...reverse ? { x: offsetX, y: offsetY, transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit } : { transitionEnd: { x: offsetX, y: offsetY, ...transitionEnd == null ? void 0 : transitionEnd.exit } },
    ...exit
  })
};
var slideFadeProps = {
  initial: "exit",
  animate: "enter",
  exit: "exit",
  variants: variants5
};
var SlideFade = (0, import_core5.forwardRef)(
  ({
    unmountOnExit,
    isOpen,
    offsetX: _offsetX = 0,
    offsetY: _offsetY = 8,
    reverse = true,
    transition,
    transitionEnd,
    delay,
    duration,
    className,
    ...rest
  }, ref) => {
    const animate = isOpen || unmountOnExit ? "enter" : "exit";
    const offsetX = (0, import_use_value2.useValue)(_offsetX);
    const offsetY = (0, import_use_value2.useValue)(_offsetY);
    const custom = {
      offsetX,
      offsetY,
      reverse,
      transition,
      transitionEnd,
      delay,
      duration
    };
    isOpen = unmountOnExit ? isOpen && unmountOnExit : true;
    const css = {
      w: "100%"
    };
    return /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(import_motion5.AnimatePresence, { custom, children: isOpen ? /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
      import_motion5.Motion,
      {
        ref,
        className: (0, import_utils5.cx)("ui-slide-fade", className),
        custom,
        ...slideFadeProps,
        animate,
        __css: css,
        ...rest
      }
    ) : null });
  }
);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Collapse,
  Fade,
  ScaleFade,
  Slide,
  SlideFade,
  collapseProps,
  fadeProps,
  scaleFadeProps,
  slideFadeProps,
  slideProps
});
//# sourceMappingURL=index.js.map
"use client"

// src/fade.tsx
import { forwardRef } from "@yamada-ui/core";
import {
  AnimatePresence,
  transitionEnter,
  transitionExit,
  Motion
} from "@yamada-ui/motion";
import { cx } from "@yamada-ui/utils";
import { jsx } from "react/jsx-runtime";
var variants = {
  enter: ({ transition, transitionEnd, delay, duration, enter } = {}) => ({
    opacity: 1,
    transition: transitionEnter(transition == null ? void 0 : transition.enter)(delay, duration),
    transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter,
    ...enter
  }),
  exit: ({ transition, transitionEnd, delay, duration, exit } = {}) => ({
    opacity: 0,
    transition: transitionExit(transition == null ? void 0 : transition.exit)(delay, duration),
    transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit,
    ...exit
  })
};
var fadeProps = {
  initial: "exit",
  animate: "enter",
  exit: "exit",
  variants
};
var Fade = forwardRef(
  ({
    unmountOnExit,
    isOpen,
    transition,
    transitionEnd,
    delay,
    duration,
    className,
    ...rest
  }, ref) => {
    const animate = isOpen || unmountOnExit ? "enter" : "exit";
    const custom = { transition, transitionEnd, delay, duration };
    isOpen = unmountOnExit ? isOpen && unmountOnExit : true;
    const css = {
      w: "100%"
    };
    return /* @__PURE__ */ jsx(AnimatePresence, { custom, children: isOpen ? /* @__PURE__ */ jsx(
      Motion,
      {
        ref,
        className: cx("ui-fade", className),
        custom,
        ...fadeProps,
        animate,
        __css: css,
        ...rest
      }
    ) : null });
  }
);

export {
  fadeProps,
  Fade
};
//# sourceMappingURL=chunk-52JFOYOB.mjs.map
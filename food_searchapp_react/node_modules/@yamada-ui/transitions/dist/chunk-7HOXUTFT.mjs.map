{"version":3,"sources":["../src/slide-fade.tsx"],"sourcesContent":["import type { CSSUIObject, Token } from \"@yamada-ui/core\"\nimport { forwardRef } from \"@yamada-ui/core\"\nimport type {\n  WithTransitionProps,\n  MotionTransitionVariants,\n  MotionProps,\n} from \"@yamada-ui/motion\"\nimport {\n  AnimatePresence,\n  transitionEnter,\n  transitionExit,\n  Motion,\n} from \"@yamada-ui/motion\"\nimport { useValue } from \"@yamada-ui/use-value\"\nimport { cx } from \"@yamada-ui/utils\"\n\ntype SlideFadeOptions = {\n  /**\n   * The offset on the horizontal or `x` axis.\n   *\n   * @default 0\n   */\n  offsetX?: Token<string | number>\n  /**\n   * The offset on the vertical or `y` axis.\n   *\n   * @default 8\n   */\n  offsetY?: Token<string | number>\n  /**\n   * If `true`, the element will be transitioned back to the offset when it leaves. Otherwise, it'll only fade out.\n   *\n   * @default true\n   */\n  reverse?: boolean\n}\n\nexport type SlideFadeProps = WithTransitionProps<MotionProps> & SlideFadeOptions\n\nconst variants: MotionTransitionVariants = {\n  initial: ({\n    offsetX,\n    offsetY,\n    transition,\n    transitionEnd,\n    delay,\n    duration,\n    initial,\n  }) => ({\n    opacity: 0,\n    x: offsetX,\n    y: offsetY,\n    transition: transitionExit(transition?.exit)(delay, duration),\n    transitionEnd: transitionEnd?.exit,\n    ...initial,\n  }),\n  enter: ({ transition, transitionEnd, delay, duration, enter } = {}) => ({\n    opacity: 1,\n    x: 0,\n    y: 0,\n    transition: transitionEnter(transition?.enter)(delay, duration),\n    transitionEnd: transitionEnd?.enter,\n    ...enter,\n  }),\n  exit: ({\n    offsetX,\n    offsetY,\n    reverse,\n    transition,\n    transitionEnd,\n    delay,\n    duration,\n    exit,\n  } = {}) => ({\n    opacity: 0,\n    transition: transitionExit(transition?.exit)(delay, duration),\n    ...(reverse\n      ? { x: offsetX, y: offsetY, transitionEnd: transitionEnd?.exit }\n      : { transitionEnd: { x: offsetX, y: offsetY, ...transitionEnd?.exit } }),\n    ...exit,\n  }),\n}\n\nexport const slideFadeProps = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants,\n}\n\n/**\n * `SlideFade` is a component that gradually shows or hides an element while moving it from a specified position.\n *\n * @see Docs https://yamada-ui.com/components/transitions/slide-fade\n */\nexport const SlideFade = forwardRef<SlideFadeProps, \"div\", false>(\n  (\n    {\n      unmountOnExit,\n      isOpen,\n      offsetX: _offsetX = 0,\n      offsetY: _offsetY = 8,\n      reverse = true,\n      transition,\n      transitionEnd,\n      delay,\n      duration,\n      className,\n      ...rest\n    },\n    ref,\n  ) => {\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const offsetX = useValue(_offsetX)\n    const offsetY = useValue(_offsetY)\n\n    const custom = {\n      offsetX,\n      offsetY,\n      reverse,\n      transition,\n      transitionEnd,\n      delay,\n      duration,\n    }\n\n    isOpen = unmountOnExit ? isOpen && unmountOnExit : true\n\n    const css: CSSUIObject = {\n      w: \"100%\",\n    }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {isOpen ? (\n          <Motion\n            ref={ref}\n            className={cx(\"ui-slide-fade\", className)}\n            custom={custom}\n            {...slideFadeProps}\n            animate={animate}\n            __css={css}\n            {...rest}\n          />\n        ) : null}\n      </AnimatePresence>\n    )\n  },\n)\n"],"mappings":";;;AACA,SAAS,kBAAkB;AAM3B;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AACP,SAAS,gBAAgB;AACzB,SAAS,UAAU;AA0HT;AAjGV,IAAM,WAAqC;AAAA,EACzC,SAAS,CAAC;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,OAAO;AAAA,IACL,SAAS;AAAA,IACT,GAAG;AAAA,IACH,GAAG;AAAA,IACH,YAAY,eAAe,yCAAY,IAAI,EAAE,OAAO,QAAQ;AAAA,IAC5D,eAAe,+CAAe;AAAA,IAC9B,GAAG;AAAA,EACL;AAAA,EACA,OAAO,CAAC,EAAE,YAAY,eAAe,OAAO,UAAU,MAAM,IAAI,CAAC,OAAO;AAAA,IACtE,SAAS;AAAA,IACT,GAAG;AAAA,IACH,GAAG;AAAA,IACH,YAAY,gBAAgB,yCAAY,KAAK,EAAE,OAAO,QAAQ;AAAA,IAC9D,eAAe,+CAAe;AAAA,IAC9B,GAAG;AAAA,EACL;AAAA,EACA,MAAM,CAAC;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,CAAC,OAAO;AAAA,IACV,SAAS;AAAA,IACT,YAAY,eAAe,yCAAY,IAAI,EAAE,OAAO,QAAQ;AAAA,IAC5D,GAAI,UACA,EAAE,GAAG,SAAS,GAAG,SAAS,eAAe,+CAAe,KAAK,IAC7D,EAAE,eAAe,EAAE,GAAG,SAAS,GAAG,SAAS,GAAG,+CAAe,KAAK,EAAE;AAAA,IACxE,GAAG;AAAA,EACL;AACF;AAEO,IAAM,iBAAiB;AAAA,EAC5B,SAAS;AAAA,EACT,SAAS;AAAA,EACT,MAAM;AAAA,EACN;AACF;AAOO,IAAM,YAAY;AAAA,EACvB,CACE;AAAA,IACE;AAAA,IACA;AAAA,IACA,SAAS,WAAW;AAAA,IACpB,SAAS,WAAW;AAAA,IACpB,UAAU;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL,GACA,QACG;AACH,UAAM,UAAU,UAAU,gBAAgB,UAAU;AAEpD,UAAM,UAAU,SAAS,QAAQ;AACjC,UAAM,UAAU,SAAS,QAAQ;AAEjC,UAAM,SAAS;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,aAAS,gBAAgB,UAAU,gBAAgB;AAEnD,UAAM,MAAmB;AAAA,MACvB,GAAG;AAAA,IACL;AAEA,WACE,oBAAC,mBAAgB,QACd,mBACC;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,WAAW,GAAG,iBAAiB,SAAS;AAAA,QACxC;AAAA,QACC,GAAG;AAAA,QACJ;AAAA,QACA,OAAO;AAAA,QACN,GAAG;AAAA;AAAA,IACN,IACE,MACN;AAAA,EAEJ;AACF;","names":[]}
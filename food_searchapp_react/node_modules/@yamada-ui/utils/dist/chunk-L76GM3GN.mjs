// src/string.ts
var escape = (value, replaceValue = "") => value.replace(/\s+/g, replaceValue);
var antonym = (value) => {
  switch (value) {
    case "top":
      return "bottom";
    case "bottom":
      return "top";
    case "left":
      return "right";
    case "right":
      return "left";
    case "start":
      return "end";
    case "end":
      return "start";
    case "x":
      return "y";
    case "y":
      return "x";
    case "enter":
      return "exit";
    case "exit":
      return "enter";
    case "vertical":
      return "horizontal";
    case "horizontal":
      return "vertical";
    case "up":
      return "down";
    case "down":
      return "up";
    case "block":
      return "inline";
    case "inline":
      return "block";
    default:
      return value;
  }
};
var toCamelCase = (value) => value.toLowerCase().replace(/[_-](.)/g, (_, group1) => group1.toUpperCase()).replace(/^(.)/, (_, group1) => group1.toUpperCase());
var toKebabCase = (value) => value.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, "$1-$2").toLowerCase().replace(/^-/, "");

export {
  escape,
  antonym,
  toCamelCase,
  toKebabCase
};
//# sourceMappingURL=chunk-L76GM3GN.mjs.map
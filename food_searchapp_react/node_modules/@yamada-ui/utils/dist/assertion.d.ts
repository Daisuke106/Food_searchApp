import { Dict } from './index.types.js';

declare const isNumber: (value: any) => value is number;
declare const isNotNumber: (value: any) => boolean;
declare const isNumeric: (value: any) => boolean;
declare const isString: (value: any) => value is string;
declare const isBoolean: (value: any) => value is boolean;
declare const isUndefined: (value: any) => value is undefined;
declare const isNull: (value: any) => value is null;
declare const isObject: <T extends Dict>(value: any) => value is T;
declare const isArray: <T extends any[]>(value: any) => value is T;
declare const isEmpty: (value: any) => boolean;
declare const isFunction: <T extends Function = Function>(value: any) => value is T;
declare const isUnit: (value: any) => boolean;
declare const cast: <T>(value: any) => T;

export { cast, isArray, isBoolean, isEmpty, isFunction, isNotNumber, isNull, isNumber, isNumeric, isObject, isString, isUndefined, isUnit };

type Operand = string | number;
type Calc = {
    add: (...args: Operand[]) => Calc;
    subtract: (...args: Operand[]) => Calc;
    multiply: (...args: Operand[]) => Calc;
    divide: (...args: Operand[]) => Calc;
    negate: () => Calc;
    toString: () => string;
};
declare const calc: ((x: Operand) => Calc) & {
    add: (...args: Operand[]) => string;
    subtract: (...args: Operand[]) => string;
    multiply: (...args: Operand[]) => string;
    divide: (...args: Operand[]) => string;
    negate: (value: Operand) => string;
};

export { type Operand, calc };

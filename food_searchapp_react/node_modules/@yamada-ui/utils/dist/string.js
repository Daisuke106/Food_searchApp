"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/string.ts
var string_exports = {};
__export(string_exports, {
  antonym: () => antonym,
  escape: () => escape,
  toCamelCase: () => toCamelCase,
  toKebabCase: () => toKebabCase
});
module.exports = __toCommonJS(string_exports);
var escape = (value, replaceValue = "") => value.replace(/\s+/g, replaceValue);
var antonym = (value) => {
  switch (value) {
    case "top":
      return "bottom";
    case "bottom":
      return "top";
    case "left":
      return "right";
    case "right":
      return "left";
    case "start":
      return "end";
    case "end":
      return "start";
    case "x":
      return "y";
    case "y":
      return "x";
    case "enter":
      return "exit";
    case "exit":
      return "enter";
    case "vertical":
      return "horizontal";
    case "horizontal":
      return "vertical";
    case "up":
      return "down";
    case "down":
      return "up";
    case "block":
      return "inline";
    case "inline":
      return "block";
    default:
      return value;
  }
};
var toCamelCase = (value) => value.toLowerCase().replace(/[_-](.)/g, (_, group1) => group1.toUpperCase()).replace(/^(.)/, (_, group1) => group1.toUpperCase());
var toKebabCase = (value) => value.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, "$1-$2").toLowerCase().replace(/^-/, "");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  antonym,
  escape,
  toCamelCase,
  toKebabCase
});
//# sourceMappingURL=string.js.map
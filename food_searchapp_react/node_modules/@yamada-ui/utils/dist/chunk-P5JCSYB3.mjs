// src/assertion.ts
var isNumber = (value) => typeof value === "number";
var isNotNumber = (value) => typeof value !== "number" || Number.isNaN(value) || !Number.isFinite(value);
var isNumeric = (value) => value != null && parseFloat(value.toString()) - parseFloat(value.toString()) + 1 >= 0;
var isString = (value) => Object.prototype.toString.call(value) === "[object String]";
var isBoolean = (value) => typeof value === "boolean";
var isUndefined = (value) => typeof value === "undefined" && value === void 0;
var isNull = (value) => value === null;
var isObject = (value) => value !== null && (typeof value === "object" || typeof value === "function") && !isArray(value);
var isArray = (value) => Array.isArray(value);
var isEmpty = (value) => !isArray(value) || !value.length || value.every((v) => v == null);
var isFunction = (value) => typeof value === "function";
var isUnit = (value) => /[0-9].*[px|rem|em|%|vw|vh]$/.test(value);
var cast = (value) => value;

export {
  isNumber,
  isNotNumber,
  isNumeric,
  isString,
  isBoolean,
  isUndefined,
  isNull,
  isObject,
  isArray,
  isEmpty,
  isFunction,
  isUnit,
  cast
};
//# sourceMappingURL=chunk-P5JCSYB3.mjs.map
import * as _yamada_ui_core from '@yamada-ui/core';
import { HTMLUIProps, ThemeProps } from '@yamada-ui/core';
import { MotionProps } from '@yamada-ui/motion';
import { ChangeEventHandler } from 'react';

type SegmentedControlItem = SegmentedControlButtonProps & {
    label?: string;
};
type SegmentedControlOptions = {
    /**
     * The HTML `name` attribute used for forms.
     */
    name?: string;
    /**
     * The value of the segmented control.
     */
    value?: string;
    /**
     * The initial value of the segmented control.
     */
    defaultValue?: string;
    /**
     * The callback fired when any children radio is checked or unchecked.
     */
    onChange?: (value: string) => void;
    /**
     * If `true`, the segmented control will be readonly.
     *
     * @default false
     */
    isReadOnly?: boolean;
    /**
     * If `true`, the segmented control will be disabled.
     *
     * @default false
     */
    isDisabled?: boolean;
    /**
     * If provided, generate segmented control buttons but based on items.
     *
     * @default '[]'
     */
    items?: SegmentedControlItem[];
};
type SegmentedControlProps = Omit<HTMLUIProps<"div">, "value" | "defaultValue" | "onChange"> & ThemeProps<"SegmentedControl"> & SegmentedControlOptions;
/**
 * `SegmentedControl` is a component used for allowing users to select one option from multiple choices.
 *
 * @see Docs https://yamada-ui.com/components/forms/segmented-control
 */
declare const SegmentedControl: _yamada_ui_core.Component<"div", SegmentedControlProps>;
type SegmentedControlButtonOptions = {
    /**
     * The value of the segmented control button.
     */
    value: string;
    /**
     * The callback fired when any children radio is checked or unchecked.
     */
    onChange?: ChangeEventHandler<HTMLInputElement>;
    /**
     * Props for motion component.
     */
    motionProps?: MotionProps;
};
type SegmentedControlButtonProps = Omit<HTMLUIProps<"label">, "onChange"> & Pick<SegmentedControlProps, "isDisabled" | "isReadOnly"> & SegmentedControlButtonOptions;
declare const SegmentedControlButton: _yamada_ui_core.Component<"input", SegmentedControlButtonProps>;

export { SegmentedControl, SegmentedControlButton, type SegmentedControlButtonProps, type SegmentedControlItem, type SegmentedControlProps };

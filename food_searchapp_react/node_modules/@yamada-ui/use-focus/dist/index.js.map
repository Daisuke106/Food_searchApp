{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { useEventListener } from \"@yamada-ui/use-event-listener\"\nimport type { FocusableElement } from \"@yamada-ui/utils\"\nimport {\n  getActiveElement,\n  getAllFocusable,\n  isRefObject,\n  isTabbable,\n  useSafeLayoutEffect,\n  useUpdateEffect,\n  isSafari,\n} from \"@yamada-ui/utils\"\nimport type { RefObject } from \"react\"\nimport { useCallback, useRef } from \"react\"\n\nexport type UseFocusOnHideProps = {\n  focusRef: RefObject<FocusableElement>\n  shouldFocus?: boolean\n  visible?: boolean\n}\n\nconst preventReturnFocus = (containerRef: React.RefObject<HTMLElement>) => {\n  const el = containerRef.current\n\n  if (!el) return false\n\n  const activeElement = getActiveElement(el)\n\n  if (!activeElement) return false\n  if (el.contains(activeElement)) return false\n  if (isTabbable(activeElement)) return true\n\n  return false\n}\n\nexport const useFocusOnHide = (\n  containerRef: RefObject<HTMLElement>,\n  { shouldFocus: shouldFocusProp, visible, focusRef }: UseFocusOnHideProps,\n) => {\n  const shouldFocus = shouldFocusProp && !visible\n\n  useUpdateEffect(() => {\n    if (!shouldFocus) return\n\n    if (preventReturnFocus(containerRef)) return\n\n    const el = focusRef?.current || containerRef.current\n\n    if (el) {\n      requestAnimationFrame(() => {\n        el.focus()\n      })\n    }\n  }, [shouldFocus, containerRef, focusRef])\n}\n\nexport type UseFocusOnShowProps = {\n  visible?: boolean\n  shouldFocus?: boolean\n  preventScroll?: boolean\n  focusRef?: React.RefObject<FocusableElement>\n}\n\nexport const useFocusOnShow = <T extends HTMLElement>(\n  target: React.RefObject<T> | T,\n  { focusRef, preventScroll, shouldFocus, visible }: UseFocusOnShowProps = {\n    preventScroll: true,\n    shouldFocus: false,\n  },\n) => {\n  const element = isRefObject(target) ? target.current : target\n\n  const autoFocusValue = shouldFocus && visible\n  const autoFocusRef = useRef(autoFocusValue)\n  const lastVisibleRef = useRef(visible)\n\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible)\n      autoFocusRef.current = autoFocusValue\n\n    lastVisibleRef.current = visible\n  }, [visible, autoFocusValue])\n\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current) return\n\n    autoFocusRef.current = false\n\n    if (element.contains(document.activeElement as HTMLElement)) return\n\n    if (focusRef?.current) {\n      requestAnimationFrame(() => {\n        focusRef.current?.focus({ preventScroll })\n      })\n    } else {\n      const tabbableEls = getAllFocusable(element)\n\n      if (tabbableEls.length > 0)\n        requestAnimationFrame(() => {\n          tabbableEls[0].focus({ preventScroll })\n        })\n    }\n  }, [visible, preventScroll, element, focusRef])\n\n  useUpdateEffect(() => {\n    onFocus()\n  }, [onFocus])\n\n  useEventListener(element, \"transitionend\", onFocus)\n}\n\nexport type UseFocusOnMouseDownProps = {\n  ref: React.RefObject<HTMLElement>\n  enabled?: boolean\n  elements?: Array<React.RefObject<HTMLElement> | HTMLElement | null>\n}\n\nexport const useFocusOnPointerDown = ({\n  ref,\n  elements,\n  enabled,\n}: UseFocusOnMouseDownProps) => {\n  const doc = () => ref.current?.ownerDocument ?? document\n\n  useEventListener(doc, \"pointerdown\", (ev) => {\n    if (!isSafari() || !enabled) return\n    const target = ev.target as HTMLElement\n\n    const els = elements ?? [ref]\n\n    const isValidTarget = els.some((elementOrRef) => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef\n      return el?.contains(target) || el === target\n    })\n\n    if (doc().activeElement !== target && isValidTarget) {\n      ev.preventDefault()\n\n      target.focus()\n    }\n  })\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAiC;AAEjC,mBAQO;AAEP,mBAAoC;AAQpC,IAAM,qBAAqB,CAAC,iBAA+C;AACzE,QAAM,KAAK,aAAa;AAExB,MAAI,CAAC;AAAI,WAAO;AAEhB,QAAM,oBAAgB,+BAAiB,EAAE;AAEzC,MAAI,CAAC;AAAe,WAAO;AAC3B,MAAI,GAAG,SAAS,aAAa;AAAG,WAAO;AACvC,UAAI,yBAAW,aAAa;AAAG,WAAO;AAEtC,SAAO;AACT;AAEO,IAAM,iBAAiB,CAC5B,cACA,EAAE,aAAa,iBAAiB,SAAS,SAAS,MAC/C;AACH,QAAM,cAAc,mBAAmB,CAAC;AAExC,oCAAgB,MAAM;AACpB,QAAI,CAAC;AAAa;AAElB,QAAI,mBAAmB,YAAY;AAAG;AAEtC,UAAM,MAAK,qCAAU,YAAW,aAAa;AAE7C,QAAI,IAAI;AACN,4BAAsB,MAAM;AAC1B,WAAG,MAAM;AAAA,MACX,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAAC,aAAa,cAAc,QAAQ,CAAC;AAC1C;AASO,IAAM,iBAAiB,CAC5B,QACA,EAAE,UAAU,eAAe,aAAa,QAAQ,IAAyB;AAAA,EACvE,eAAe;AAAA,EACf,aAAa;AACf,MACG;AACH,QAAM,cAAU,0BAAY,MAAM,IAAI,OAAO,UAAU;AAEvD,QAAM,iBAAiB,eAAe;AACtC,QAAM,mBAAe,qBAAO,cAAc;AAC1C,QAAM,qBAAiB,qBAAO,OAAO;AAErC,wCAAoB,MAAM;AACxB,QAAI,CAAC,eAAe,WAAW;AAC7B,mBAAa,UAAU;AAEzB,mBAAe,UAAU;AAAA,EAC3B,GAAG,CAAC,SAAS,cAAc,CAAC;AAE5B,QAAM,cAAU,0BAAY,MAAM;AAChC,QAAI,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa;AAAS;AAEnD,iBAAa,UAAU;AAEvB,QAAI,QAAQ,SAAS,SAAS,aAA4B;AAAG;AAE7D,QAAI,qCAAU,SAAS;AACrB,4BAAsB,MAAM;AA1FlC;AA2FQ,uBAAS,YAAT,mBAAkB,MAAM,EAAE,cAAc;AAAA,MAC1C,CAAC;AAAA,IACH,OAAO;AACL,YAAM,kBAAc,8BAAgB,OAAO;AAE3C,UAAI,YAAY,SAAS;AACvB,8BAAsB,MAAM;AAC1B,sBAAY,CAAC,EAAE,MAAM,EAAE,cAAc,CAAC;AAAA,QACxC,CAAC;AAAA,IACL;AAAA,EACF,GAAG,CAAC,SAAS,eAAe,SAAS,QAAQ,CAAC;AAE9C,oCAAgB,MAAM;AACpB,YAAQ;AAAA,EACV,GAAG,CAAC,OAAO,CAAC;AAEZ,kDAAiB,SAAS,iBAAiB,OAAO;AACpD;AAQO,IAAM,wBAAwB,CAAC;AAAA,EACpC;AAAA,EACA;AAAA,EACA;AACF,MAAgC;AAC9B,QAAM,MAAM,MAAG;AAzHjB;AAyHoB,2BAAI,YAAJ,mBAAa,kBAAb,YAA8B;AAAA;AAEhD,kDAAiB,KAAK,eAAe,CAAC,OAAO;AAC3C,QAAI,KAAC,uBAAS,KAAK,CAAC;AAAS;AAC7B,UAAM,SAAS,GAAG;AAElB,UAAM,MAAM,8BAAY,CAAC,GAAG;AAE5B,UAAM,gBAAgB,IAAI,KAAK,CAAC,iBAAiB;AAC/C,YAAM,SAAK,0BAAY,YAAY,IAAI,aAAa,UAAU;AAC9D,cAAO,yBAAI,SAAS,YAAW,OAAO;AAAA,IACxC,CAAC;AAED,QAAI,IAAI,EAAE,kBAAkB,UAAU,eAAe;AACnD,SAAG,eAAe;AAElB,aAAO,MAAM;AAAA,IACf;AAAA,EACF,CAAC;AACH;","names":[]}
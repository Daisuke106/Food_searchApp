"use client"
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  getValue: () => getValue,
  useValue: () => useValue
});
module.exports = __toCommonJS(src_exports);
var import_core = require("@yamada-ui/core");
var import_use_breakpoint = require("@yamada-ui/use-breakpoint");
var import_utils = require("@yamada-ui/utils");
var useValue = (value) => {
  if ((0, import_utils.isObject)(value)) {
    return (0, import_use_breakpoint.useBreakpointValue)(value);
  } else if ((0, import_utils.isArray)(value)) {
    return (0, import_core.useColorModeValue)(...value);
  } else {
    return value;
  }
};
var getValue = (value) => (theme, colorMode, breakpoint) => {
  if ((0, import_utils.isObject)(value)) {
    return (0, import_use_breakpoint.getBreakpointValue)(value)(theme, breakpoint);
  } else if ((0, import_utils.isArray)(value)) {
    return (0, import_core.getColorModeValue)(...value)(colorMode);
  } else {
    return value;
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getValue,
  useValue
});
//# sourceMappingURL=index.js.map
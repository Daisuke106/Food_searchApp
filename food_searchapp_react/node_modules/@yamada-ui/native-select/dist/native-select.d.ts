import * as _yamada_ui_core from '@yamada-ui/core';
import { HTMLUIProps, ThemeProps } from '@yamada-ui/core';
import { FormControlOptions } from '@yamada-ui/form-control';
import { DetailedHTMLProps, OptionHTMLAttributes } from 'react';

type NativeSelectBaseItem = Omit<DetailedHTMLProps<OptionHTMLAttributes<HTMLOptionElement>, HTMLOptionElement>, "label" | "children" | "value"> & {
    label?: string;
};
type Value = DetailedHTMLProps<OptionHTMLAttributes<HTMLOptionElement>, HTMLOptionElement>["value"];
type NativeSelectItemWithValue = NativeSelectBaseItem & {
    value?: Value;
};
type NativeSelectItemWithItems = NativeSelectBaseItem & {
    items?: NativeSelectItemWithValue[];
};
type NativeSelectItem = NativeSelectItemWithValue & NativeSelectItemWithItems;
type NativeSelectOptions = {
    /**
     * If provided, generate options based on items.
     *
     * @default '[]'
     */
    items?: NativeSelectItem[];
    /**
     * The placeholder for select.
     */
    placeholder?: string;
    /**
     * If `true`, include placeholders in options.
     *
     * @default true
     */
    placeholderInOptions?: boolean;
    /**
     * The border color when the input is focused.
     */
    focusBorderColor?: string;
    /**
     * The border color when the input is invalid.
     */
    errorBorderColor?: string;
    /**
     * Props for container element.
     */
    containerProps?: Omit<HTMLUIProps<"div">, "children">;
    /**
     * Props for icon element.
     */
    iconProps?: HTMLUIProps<"div">;
};
type NativeSelectProps = Omit<HTMLUIProps<"select">, "size"> & ThemeProps<"NativeSelect"> & NativeSelectOptions & FormControlOptions;
/**
 * `NativeSelect` is a component used for allowing users to select one option from a list. It displays a native dropdown list provided by the browser (user agent).
 *
 * @see Docs https://yamada-ui.com/components/forms/native-select
 */
declare const NativeSelect: _yamada_ui_core.Component<"select", NativeSelectProps>;
type NativeOptionGroupProps = HTMLUIProps<"optgroup">;
declare const NativeOptionGroup: _yamada_ui_core.Component<"optgroup", NativeOptionGroupProps>;
type NativeOptionProps = Omit<HTMLUIProps<"option">, "children"> & {
    children?: string;
};
declare const NativeOption: _yamada_ui_core.Component<"option", NativeOptionProps>;

export { NativeOption, NativeOptionGroup, type NativeOptionGroupProps, type NativeOptionProps, NativeSelect, type NativeSelectItem, type NativeSelectProps };

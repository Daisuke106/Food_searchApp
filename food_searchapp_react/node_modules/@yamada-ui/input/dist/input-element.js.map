{"version":3,"sources":["../src/input-element.tsx","../src/input-group.tsx","../src/input.tsx","../src/input-addon.tsx"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useInputGroup } from \"./input-group\"\n\ntype InputElementOptions = {\n  /**\n   * If `true`, the element clickable.\n   *\n   * @default false\n   */\n  isClick?: boolean\n  /**\n   * The placement of the element.\n   *\n   * @default 'left'\n   */\n  placement?: \"left\" | \"right\"\n}\n\nexport type InputElementProps = HTMLUIProps<\"div\"> & InputElementOptions\n\nconst InputElement = forwardRef<InputElementProps, \"div\">(\n  ({ className, isClick = false, placement = \"left\", ...rest }, ref) => {\n    const styles = useInputGroup()\n\n    const css: CSSUIObject = {\n      position: \"absolute\",\n      top: \"0\",\n      [placement === \"left\" ? \"insetStart\" : \"insetEnd\"]: \"0\",\n      zIndex: \"fallback(kurillin, 9)\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      w:\n        styles.field?.height ??\n        styles.field?.h ??\n        styles.field?.minHeight ??\n        styles.field?.minH,\n      h: \"100%\",\n      fontSize: styles.field?.fontSize,\n      pointerEvents: isClick ? \"auto\" : \"none\",\n      cursor: isClick ? \"pointer\" : \"auto\",\n      ...styles.element,\n    }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-input__element\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n\nexport const InputLeftElement = forwardRef<InputElementProps, \"div\">(\n  ({ className, ...rest }, ref) => {\n    return (\n      <InputElement\n        ref={ref}\n        className={cx(\"ui-input__element--left\", className)}\n        placement=\"left\"\n        {...rest}\n      />\n    )\n  },\n)\n\nexport const InputRightElement = forwardRef<InputElementProps, \"div\">(\n  ({ className, ...rest }, ref) => {\n    return (\n      <InputElement\n        ref={ref}\n        className={cx(\"ui-input__element--right\", className)}\n        placement=\"right\"\n        {...rest}\n      />\n    )\n  },\n)\n","import type {\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n  CSSUIProps,\n} from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport { FileInput } from \"@yamada-ui/file-input\"\nimport { useToken } from \"@yamada-ui/use-token\"\nimport {\n  createContext,\n  cx,\n  filterUndefined,\n  getValidChildren,\n} from \"@yamada-ui/utils\"\nimport { cloneElement } from \"react\"\nimport {\n  Input,\n  InputRightElement,\n  InputLeftElement,\n  InputLeftAddon,\n  InputRightAddon,\n} from \"./\"\n\nexport type InputGroupProps = HTMLUIProps<\"div\"> & ThemeProps<\"Input\">\n\ntype InputGroupContext = Record<string, CSSUIObject>\n\nconst [InputGroupProvider, useInputGroup] = createContext<InputGroupContext>({\n  name: \"InputGroupContext\",\n  errorMessage: `useInputGroup returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `,\n})\n\nexport { useInputGroup }\n\nexport const InputGroup = forwardRef<InputGroupProps, \"div\">((props, ref) => {\n  const [styles] = useMultiComponentStyle(\"Input\", props)\n  const { className, children, ...rest } = omitThemeProps(props)\n\n  const css: CSSUIObject = {\n    width: \"100%\",\n    display: \"flex\",\n    position: \"relative\",\n    ...styles.container,\n  }\n  const groupProps: CSSUIProps = {}\n  const minHeight: any =\n    useToken(\"sizes\", (styles.field?.minHeight ?? styles.field?.minH) as any) ??\n    styles.field?.minHeight ??\n    styles.field?.minH\n  const height: any =\n    useToken(\"sizes\", (styles.field?.height ?? styles.field?.h) as any) ??\n    styles.field?.height ??\n    styles.field?.h\n\n  const validChildren = getValidChildren(children)\n\n  validChildren.forEach((child: any) => {\n    if ((minHeight || height) && child.type === InputLeftElement)\n      groupProps.paddingStart = height ?? minHeight\n\n    if ((minHeight || height) && child.type === InputRightElement)\n      groupProps.paddingEnd = height ?? minHeight\n\n    if (child.type === InputLeftAddon) groupProps.roundedLeft = 0\n\n    if (child.type === InputRightAddon) groupProps.roundedRight = 0\n  })\n\n  const cloneChildren = validChildren.map((child) => {\n    const childProps = filterUndefined({\n      size: child.props?.size || props.size,\n      variant: child.props?.variant || props.variant,\n      ...child.props,\n    })\n\n    return child.type !== Input && child.type !== FileInput\n      ? cloneElement(child, childProps)\n      : cloneElement(child, Object.assign(childProps, groupProps))\n  })\n\n  return (\n    <InputGroupProvider value={styles}>\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-input-group\", className)}\n        role=\"group\"\n        __css={css}\n        {...rest}\n      >\n        {cloneChildren}\n      </ui.div>\n    </InputGroupProvider>\n  )\n})\n","import type {\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n  ColorModeToken,\n  CSS,\n} from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  omitThemeProps,\n  useMultiComponentStyle,\n} from \"@yamada-ui/core\"\nimport type { FormControlOptions } from \"@yamada-ui/form-control\"\nimport { useFormControlProps } from \"@yamada-ui/form-control\"\nimport { cx } from \"@yamada-ui/utils\"\n\ntype InputOptions = {\n  /**\n   * The border color when the input is focused.\n   */\n  focusBorderColor?: ColorModeToken<CSS.Property.BorderColor, \"colors\">\n  /**\n   * The border color when the input is invalid.\n   */\n  errorBorderColor?: ColorModeToken<CSS.Property.BorderColor, \"colors\">\n  /**\n   * The native HTML `size` attribute to be passed to the `input`.\n   */\n  htmlSize?: number\n}\n\nexport type InputProps = Omit<\n  HTMLUIProps<\"input\">,\n  \"disabled\" | \"required\" | \"readOnly\" | \"size\"\n> &\n  ThemeProps<\"Input\"> &\n  InputOptions &\n  FormControlOptions\n\n/**\n * `Input` is a component used to obtain text input from the user.\n *\n * @see Docs https://yamada-ui.com/components/forms/input\n */\nexport const Input = forwardRef<InputProps, \"input\">((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"Input\", props)\n  let { className, htmlSize, __css, ...rest } = omitThemeProps(mergedProps)\n\n  rest = useFormControlProps(rest)\n\n  const css: CSSUIObject = { ...styles.field, ...__css }\n\n  return (\n    <ui.input\n      ref={ref}\n      className={cx(\"ui-input\", className)}\n      size={htmlSize}\n      __css={css}\n      {...rest}\n    />\n  )\n})\n","import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useInputGroup } from \"./input-group\"\n\ntype InputAddonOptions = {\n  /**\n   * The placement of the element.\n   *\n   * @default 'left'\n   */\n  placement?: \"left\" | \"right\"\n}\n\nexport type InputAddonProps = HTMLUIProps<\"div\"> & InputAddonOptions\n\nconst InputAddon = forwardRef<InputAddonProps, \"div\">(\n  ({ className, placement = \"left\", ...rest }, ref) => {\n    const styles = useInputGroup()\n\n    const placementStyles = {\n      left: {\n        me: \"-1px\",\n        roundedRight: 0,\n        borderEndColor: \"transparent\",\n      },\n      right: {\n        ms: \"-1px\",\n        roundedLeft: 0,\n        borderStartColor: \"transparent\",\n      },\n    }\n\n    const css: CSSUIObject = {\n      flex: \"0 0 auto\",\n      w: \"auto\",\n      display: \"flex\",\n      alignItems: \"center\",\n      whiteSpace: \"nowrap\",\n      ...styles.addon,\n      ...placementStyles[placement],\n    }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-input__addon\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n\nexport const InputLeftAddon = forwardRef<InputAddonProps, \"div\">(\n  ({ className, ...rest }, ref) => {\n    return (\n      <InputAddon\n        ref={ref}\n        className={cx(\"ui-input__addon--left\", className)}\n        placement=\"left\"\n        {...rest}\n      />\n    )\n  },\n)\n\nexport const InputRightAddon = forwardRef<InputAddonProps, \"div\">(\n  ({ className, ...rest }, ref) => {\n    return (\n      <InputAddon\n        ref={ref}\n        className={cx(\"ui-input__addon--right\", className)}\n        placement=\"right\"\n        {...rest}\n      />\n    )\n  },\n)\n"],"mappings":"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","names":["import_core","import_utils","import_core","import_utils","import_core","import_utils","import_jsx_runtime","import_jsx_runtime","_a","_b","import_jsx_runtime"]}
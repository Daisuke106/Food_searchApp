"use client"
import {
  DotsIcon,
  FirstIcon,
  LastIcon,
  NextIcon,
  PrevIcon
} from "./chunk-FAA64ZR4.mjs";
import {
  usePaginationContext
} from "./chunk-EKJTBKZD.mjs";

// src/pagination-item.tsx
import { ui } from "@yamada-ui/core";
import { Ripple, useRipple } from "@yamada-ui/ripple";
import { cx, dataAttr } from "@yamada-ui/utils";
import { jsx, jsxs } from "react/jsx-runtime";
var iconMap = {
  dots: /* @__PURE__ */ jsx(DotsIcon, {}),
  next: /* @__PURE__ */ jsx(NextIcon, {}),
  prev: /* @__PURE__ */ jsx(PrevIcon, {}),
  first: /* @__PURE__ */ jsx(FirstIcon, {}),
  last: /* @__PURE__ */ jsx(LastIcon, {})
};
var PaginationItem = ({
  className,
  isActive,
  page,
  isDisabled,
  disableRipple,
  children,
  ...rest
}) => {
  var _a;
  const styles = usePaginationContext();
  const { onPointerDown, ...rippleProps } = useRipple({
    ...rest,
    isDisabled: disableRipple || isDisabled
  });
  children != null ? children : children = (_a = iconMap[page]) != null ? _a : page;
  const css = {
    position: "relative",
    overflow: "hidden",
    userSelect: "none",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    ...styles.item,
    ...styles[page]
  };
  return /* @__PURE__ */ jsxs(
    ui.button,
    {
      className: cx("ui-pagination__item", className),
      type: "button",
      tabIndex: page !== "dots" ? 0 : -1,
      disabled: isDisabled,
      "data-selected": dataAttr(isActive),
      "data-disabled": dataAttr(isDisabled),
      __css: css,
      ...rest,
      onPointerDown,
      children: [
        children,
        /* @__PURE__ */ jsx(Ripple, { isDisabled: disableRipple || isDisabled, ...rippleProps })
      ]
    }
  );
};

export {
  PaginationItem
};
//# sourceMappingURL=chunk-TCLV3SLM.mjs.map
{"version":3,"sources":["../src/pagination-item.tsx","../src/pagination-icon.tsx","../src/use-pagination.ts"],"sourcesContent":["import type { CSSUIObject } from \"@yamada-ui/core\"\nimport { ui } from \"@yamada-ui/core\"\nimport { Ripple, useRipple } from \"@yamada-ui/ripple\"\nimport { cx, dataAttr } from \"@yamada-ui/utils\"\nimport type { ComponentPropsWithoutRef, FC, ReactNode } from \"react\"\nimport {\n  DotsIcon,\n  FirstIcon,\n  LastIcon,\n  NextIcon,\n  PrevIcon,\n} from \"./pagination-icon\"\nimport { usePaginationContext } from \"./use-pagination\"\n\ntype PaginationItemOptions = {\n  /**\n   * The type of the page or item assigned to the pagination item.\n   */\n  page: number | \"dots\" | \"prev\" | \"next\" | \"first\" | \"last\"\n  /**\n   * If `true`, the pagination item will be actived.\n   *\n   * @default false\n   */\n  isActive?: boolean\n  /**\n   * If `true`, the pagination item will be disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, disable ripple effects when pressing a element.\n   *\n   * @default false\n   */\n  disableRipple?: boolean\n}\n\nexport type PaginationItemProps = ComponentPropsWithoutRef<\"button\"> &\n  PaginationItemOptions\n\nconst iconMap: Record<\n  number | \"dots\" | \"prev\" | \"next\" | \"first\" | \"last\",\n  ReactNode\n> = {\n  dots: <DotsIcon />,\n  next: <NextIcon />,\n  prev: <PrevIcon />,\n  first: <FirstIcon />,\n  last: <LastIcon />,\n}\n\nexport const PaginationItem: FC<PaginationItemProps> = ({\n  className,\n  isActive,\n  page,\n  isDisabled,\n  disableRipple,\n  children,\n  ...rest\n}) => {\n  const styles = usePaginationContext()\n  const { onPointerDown, ...rippleProps } = useRipple({\n    ...rest,\n    isDisabled: disableRipple || isDisabled,\n  })\n\n  children ??= iconMap[page] ?? page\n\n  const css: CSSUIObject = {\n    position: \"relative\",\n    overflow: \"hidden\",\n    userSelect: \"none\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    ...styles.item,\n    ...styles[page],\n  }\n\n  return (\n    <ui.button\n      className={cx(\"ui-pagination__item\", className)}\n      type=\"button\"\n      tabIndex={page !== \"dots\" ? 0 : -1}\n      disabled={isDisabled}\n      data-selected={dataAttr(isActive)}\n      data-disabled={dataAttr(isDisabled)}\n      __css={css}\n      {...rest}\n      onPointerDown={onPointerDown}\n    >\n      {children}\n\n      <Ripple isDisabled={disableRipple || isDisabled} {...rippleProps} />\n    </ui.button>\n  )\n}\n","import type { IconProps } from \"@yamada-ui/icon\"\nimport { Icon } from \"@yamada-ui/icon\"\nimport type { FC } from \"react\"\n\nexport const DotsIcon: FC<IconProps> = (props) => {\n  return (\n    <Icon viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M2 8c0-.733.6-1.333 1.333-1.333.734 0 1.334.6 1.334 1.333s-.6 1.333-1.334 1.333C2.6 9.333 2 8.733 2 8zm9.333 0c0-.733.6-1.333 1.334-1.333C13.4 6.667 14 7.267 14 8s-.6 1.333-1.333 1.333c-.734 0-1.334-.6-1.334-1.333zM6.667 8c0-.733.6-1.333 1.333-1.333s1.333.6 1.333 1.333S8.733 9.333 8 9.333 6.667 8.733 6.667 8z\"\n      />\n    </Icon>\n  )\n}\n\nexport const FirstIcon: FC<IconProps> = (props) => {\n  return (\n    <Icon viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M6.85355 3.85355C7.04882 3.65829 7.04882 3.34171 6.85355 3.14645C6.65829 2.95118 6.34171 2.95118 6.14645 3.14645L2.14645 7.14645C1.95118 7.34171 1.95118 7.65829 2.14645 7.85355L6.14645 11.8536C6.34171 12.0488 6.65829 12.0488 6.85355 11.8536C7.04882 11.6583 7.04882 11.3417 6.85355 11.1464L3.20711 7.5L6.85355 3.85355ZM12.8536 3.85355C13.0488 3.65829 13.0488 3.34171 12.8536 3.14645C12.6583 2.95118 12.3417 2.95118 12.1464 3.14645L8.14645 7.14645C7.95118 7.34171 7.95118 7.65829 8.14645 7.85355L12.1464 11.8536C12.3417 12.0488 12.6583 12.0488 12.8536 11.8536C13.0488 11.6583 13.0488 11.3417 12.8536 11.1464L9.20711 7.5L12.8536 3.85355Z\"\n      />\n    </Icon>\n  )\n}\n\nexport const LastIcon: FC<IconProps> = (props) => {\n  return (\n    <Icon viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M2.14645 11.1464C1.95118 11.3417 1.95118 11.6583 2.14645 11.8536C2.34171 12.0488 2.65829 12.0488 2.85355 11.8536L6.85355 7.85355C7.04882 7.65829 7.04882 7.34171 6.85355 7.14645L2.85355 3.14645C2.65829 2.95118 2.34171 2.95118 2.14645 3.14645C1.95118 3.34171 1.95118 3.65829 2.14645 3.85355L5.79289 7.5L2.14645 11.1464ZM8.14645 11.1464C7.95118 11.3417 7.95118 11.6583 8.14645 11.8536C8.34171 12.0488 8.65829 12.0488 8.85355 11.8536L12.8536 7.85355C13.0488 7.65829 13.0488 7.34171 12.8536 7.14645L8.85355 3.14645C8.65829 2.95118 8.34171 2.95118 8.14645 3.14645C7.95118 3.34171 7.95118 3.65829 8.14645 3.85355L11.7929 7.5L8.14645 11.1464Z\"\n      />\n    </Icon>\n  )\n}\n\nexport const PrevIcon: FC<IconProps> = (props) => {\n  return (\n    <Icon viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M7.219 8l3.3 3.3-.943.943L5.333 8l4.243-4.243.943.943-3.3 3.3z\"\n      />\n    </Icon>\n  )\n}\n\nexport const NextIcon: FC<IconProps> = (props) => {\n  return (\n    <Icon viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M8.781 8l-3.3-3.3.943-.943L10.667 8l-4.243 4.243-.943-.943 3.3-3.3z\"\n      />\n    </Icon>\n  )\n}\n","import type { CSSUIObject, Token } from \"@yamada-ui/core\"\nimport { useControllableState } from \"@yamada-ui/use-controllable-state\"\nimport { useValue } from \"@yamada-ui/use-value\"\nimport { createContext } from \"@yamada-ui/utils\"\nimport { useCallback, useMemo } from \"react\"\n\ntype PaginationContext = Record<string, CSSUIObject>\n\nexport const [PaginationProvider, usePaginationContext] =\n  createContext<PaginationContext>({\n    strict: false,\n    name: \"PaginationContext\",\n  })\n\nexport type UsePaginationProps = {\n  /**\n   * The page of the pagination.\n   * Should be less than `total` and greater than `1`.\n   */\n  page?: number\n  /**\n   * The initial page of the pagination.\n   * Should be less than `total` and greater than `1`.\n   *\n   * @default 1\n   */\n  defaultPage?: number\n  /**\n   * The total number of pages in pagination.\n   */\n  total: number\n  /** Number of siblings displayed on the left/right side of selected page.\n   *\n   * @default 1\n   */\n  siblings?: Token<number>\n  /**\n   * Number of elements visible on the left/right edges.\n   *\n   * @default 1\n   */\n  boundaries?: Token<number>\n  /**\n   * If `true`, the pagination all item will be disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * The callback invoked when the page changes.\n   */\n  onChange?: (page: number) => void\n}\n\nexport const computedRange = (start: number, end: number) =>\n  Array.from({ length: end - start + 1 }, (_, index) => index + start)\n\nexport const usePagination = ({\n  page,\n  defaultPage = 1,\n  total,\n  siblings = 1,\n  boundaries = 1,\n  isDisabled = false,\n  onChange: onChangeProp,\n}: UsePaginationProps) => {\n  const computedSiblings = useValue(siblings)\n  const computedBoundaries = useValue(boundaries)\n\n  const [currentPage, setCurrentPage] = useControllableState({\n    value: page,\n    defaultValue: defaultPage,\n    onChange: onChangeProp,\n  })\n\n  const onFirst = useCallback(() => setCurrentPage(1), [setCurrentPage])\n\n  const onLast = useCallback(\n    () => setCurrentPage(total),\n    [setCurrentPage, total],\n  )\n\n  const onPrev = useCallback(\n    () => setCurrentPage((prev) => (prev === 1 ? prev : prev - 1)),\n    [setCurrentPage],\n  )\n\n  const onNext = useCallback(\n    () => setCurrentPage((prev) => (prev === total ? prev : prev + 1)),\n    [setCurrentPage, total],\n  )\n\n  const onChange = useCallback(\n    (page: number) => setCurrentPage(page),\n    [setCurrentPage],\n  )\n\n  const range = useMemo((): (number | \"dots\")[] => {\n    const minimumTotal = computedSiblings * 2 + 3 + computedBoundaries * 2\n\n    if (minimumTotal >= total) return computedRange(1, total)\n\n    const prevSiblings = Math.max(\n      currentPage - computedSiblings,\n      computedBoundaries,\n    )\n    const nextSiblings = Math.min(\n      currentPage + computedSiblings,\n      total - computedBoundaries,\n    )\n\n    const prevDots = prevSiblings > computedBoundaries + 2\n    const nextDots = nextSiblings < total - (computedBoundaries + 1)\n\n    if (!prevDots && nextDots) {\n      const prevPages = computedSiblings * 2 + computedBoundaries + 2\n\n      return [\n        ...computedRange(1, prevPages),\n        \"dots\",\n        ...computedRange(total - (computedBoundaries - 1), total),\n      ]\n    }\n\n    if (prevDots && !nextDots) {\n      const nextPages = computedBoundaries + 1 + 2 * computedSiblings\n\n      return [\n        ...computedRange(1, computedBoundaries),\n        \"dots\",\n        ...computedRange(total - nextPages, total),\n      ]\n    }\n\n    return [\n      ...computedRange(1, computedBoundaries),\n      \"dots\",\n      ...computedRange(prevSiblings, nextSiblings),\n      \"dots\",\n      ...computedRange(total - computedBoundaries + 1, total),\n    ]\n  }, [computedBoundaries, computedSiblings, currentPage, total])\n\n  return {\n    currentPage,\n    total,\n    isDisabled,\n    onFirst,\n    onLast,\n    onPrev,\n    onNext,\n    onChange,\n    range,\n  }\n}\n\nexport type UsePaginationReturn = ReturnType<typeof usePagination>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBAAmB;AACnB,oBAAkC;AAClC,IAAAA,gBAA6B;;;ACF7B,kBAAqB;AAMf;AAHC,IAAM,WAA0B,CAAC,UAAU;AAChD,SACE,4CAAC,oBAAK,SAAQ,aAAa,GAAG,OAC5B;AAAA,IAAC;AAAA;AAAA,MACC,MAAK;AAAA,MACL,GAAE;AAAA;AAAA,EACJ,GACF;AAEJ;AAEO,IAAM,YAA2B,CAAC,UAAU;AACjD,SACE,4CAAC,oBAAK,SAAQ,aAAa,GAAG,OAC5B;AAAA,IAAC;AAAA;AAAA,MACC,MAAK;AAAA,MACL,GAAE;AAAA;AAAA,EACJ,GACF;AAEJ;AAEO,IAAM,WAA0B,CAAC,UAAU;AAChD,SACE,4CAAC,oBAAK,SAAQ,aAAa,GAAG,OAC5B;AAAA,IAAC;AAAA;AAAA,MACC,MAAK;AAAA,MACL,GAAE;AAAA;AAAA,EACJ,GACF;AAEJ;AAEO,IAAM,WAA0B,CAAC,UAAU;AAChD,SACE,4CAAC,oBAAK,SAAQ,aAAa,GAAG,OAC5B;AAAA,IAAC;AAAA;AAAA,MACC,MAAK;AAAA,MACL,GAAE;AAAA;AAAA,EACJ,GACF;AAEJ;AAEO,IAAM,WAA0B,CAAC,UAAU;AAChD,SACE,4CAAC,oBAAK,SAAQ,aAAa,GAAG,OAC5B;AAAA,IAAC;AAAA;AAAA,MACC,MAAK;AAAA,MACL,GAAE;AAAA;AAAA,EACJ,GACF;AAEJ;;;ACxDA,oCAAqC;AACrC,uBAAyB;AACzB,mBAA8B;AAC9B,mBAAqC;AAI9B,IAAM,CAAC,oBAAoB,oBAAoB,QACpD,4BAAiC;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AACR,CAAC;;;AFkCK,IAAAC,sBAAA;AAJR,IAAM,UAGF;AAAA,EACF,MAAM,6CAAC,YAAS;AAAA,EAChB,MAAM,6CAAC,YAAS;AAAA,EAChB,MAAM,6CAAC,YAAS;AAAA,EAChB,OAAO,6CAAC,aAAU;AAAA,EAClB,MAAM,6CAAC,YAAS;AAClB;AAEO,IAAM,iBAA0C,CAAC;AAAA,EACtD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAAM;AA7DN;AA8DE,QAAM,SAAS,qBAAqB;AACpC,QAAM,EAAE,eAAe,GAAG,YAAY,QAAI,yBAAU;AAAA,IAClD,GAAG;AAAA,IACH,YAAY,iBAAiB;AAAA,EAC/B,CAAC;AAED,4CAAa,aAAQ,IAAI,MAAZ,YAAiB;AAE9B,QAAM,MAAmB;AAAA,IACvB,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,GAAG,OAAO;AAAA,IACV,GAAG,OAAO,IAAI;AAAA,EAChB;AAEA,SACE;AAAA,IAAC,eAAG;AAAA,IAAH;AAAA,MACC,eAAW,kBAAG,uBAAuB,SAAS;AAAA,MAC9C,MAAK;AAAA,MACL,UAAU,SAAS,SAAS,IAAI;AAAA,MAChC,UAAU;AAAA,MACV,qBAAe,wBAAS,QAAQ;AAAA,MAChC,qBAAe,wBAAS,UAAU;AAAA,MAClC,OAAO;AAAA,MACN,GAAG;AAAA,MACJ;AAAA,MAEC;AAAA;AAAA,QAED,6CAAC,wBAAO,YAAY,iBAAiB,YAAa,GAAG,aAAa;AAAA;AAAA;AAAA,EACpE;AAEJ;","names":["import_utils","import_jsx_runtime"]}
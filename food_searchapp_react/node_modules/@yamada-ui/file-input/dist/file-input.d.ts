import * as _yamada_ui_core from '@yamada-ui/core';
import { HTMLUIProps, ThemeProps, ColorModeToken, CSS } from '@yamada-ui/core';
import { FormControlOptions } from '@yamada-ui/form-control';
import { FC, ReactNode, ForwardedRef } from 'react';

type FileInputOptions = {
    /**
     * The border color when the input is focused.
     */
    focusBorderColor?: ColorModeToken<CSS.Property.BorderColor, "colors">;
    /**
     * The border color when the input is invalid.
     */
    errorBorderColor?: ColorModeToken<CSS.Property.BorderColor, "colors">;
    /**
     * The value of the file input.
     */
    value?: File[];
    /**
     * The initial value of the file input.
     */
    defaultValue?: File[];
    /**
     * Function to be called when a file change event occurs.
     */
    onChange?: (files: File[] | undefined) => void;
    /**
     * The component that displays uploaded files.
     */
    component?: FC<{
        value: File;
        index: number;
    }>;
    /**
     * A callback that formats the name of the uploaded file.
     */
    format?: (value: File, index: number) => string;
    /**
     * The string to separate uploaded files.
     *
     * @default ','
     */
    separator?: string;
    children?: (files: File[] | undefined) => ReactNode;
    /**
     * Ref to a reset function.
     */
    resetRef?: ForwardedRef<() => void>;
};
type InputProps = Partial<Pick<HTMLInputElement, "accept" | "multiple">>;
type FileInputProps = Omit<HTMLUIProps<"div">, "onChange" | "children"> & ThemeProps<"Input"> & InputProps & FileInputOptions & FormControlOptions;
/**
 * `FileInput` is a component used for users to select files.
 *
 * @see Docs https://yamada-ui.com/components/forms/file-input
 */
declare const FileInput: _yamada_ui_core.Component<"input", FileInputProps>;

export { FileInput, type FileInputProps };

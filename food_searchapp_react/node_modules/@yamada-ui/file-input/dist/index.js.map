{"version":3,"sources":["../src/index.ts","../src/file-input.tsx"],"sourcesContent":["export { FileInput } from \"./file-input\"\nexport type { FileInputProps } from \"./file-input\"\n","import type {\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n  ColorModeToken,\n  CSS,\n} from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  omitThemeProps,\n  useMultiComponentStyle,\n} from \"@yamada-ui/core\"\nimport type { FormControlOptions } from \"@yamada-ui/form-control\"\nimport {\n  useFormControlProps,\n  formControlProperties,\n} from \"@yamada-ui/form-control\"\nimport { useControllableState } from \"@yamada-ui/use-controllable-state\"\nimport {\n  assignRef,\n  cx,\n  dataAttr,\n  handlerAll,\n  isNull,\n  mergeRefs,\n  pickObject,\n} from \"@yamada-ui/utils\"\nimport type {\n  ChangeEvent,\n  CSSProperties,\n  FC,\n  ForwardedRef,\n  ReactElement,\n  ReactNode,\n} from \"react\"\nimport { cloneElement, useCallback, useMemo, useRef } from \"react\"\n\ntype FileInputOptions = {\n  /**\n   * The border color when the input is focused.\n   */\n  focusBorderColor?: ColorModeToken<CSS.Property.BorderColor, \"colors\">\n  /**\n   * The border color when the input is invalid.\n   */\n  errorBorderColor?: ColorModeToken<CSS.Property.BorderColor, \"colors\">\n  /**\n   * The value of the file input.\n   */\n  value?: File[]\n  /**\n   * The initial value of the file input.\n   */\n  defaultValue?: File[]\n  /**\n   * Function to be called when a file change event occurs.\n   */\n  onChange?: (files: File[] | undefined) => void\n  /**\n   * The component that displays uploaded files.\n   */\n  component?: FC<{ value: File; index: number }>\n  /**\n   * A callback that formats the name of the uploaded file.\n   */\n  format?: (value: File, index: number) => string\n  /**\n   * The string to separate uploaded files.\n   *\n   * @default ','\n   */\n  separator?: string\n  children?: (files: File[] | undefined) => ReactNode\n  /**\n   * Ref to a reset function.\n   */\n  resetRef?: ForwardedRef<() => void>\n}\n\ntype InputProps = Partial<Pick<HTMLInputElement, \"accept\" | \"multiple\">>\n\nexport type FileInputProps = Omit<HTMLUIProps<\"div\">, \"onChange\" | \"children\"> &\n  ThemeProps<\"Input\"> &\n  InputProps &\n  FileInputOptions &\n  FormControlOptions\n\nconst defaultFormat: (value: File, index: number) => string = ({ name }) => name\n\n/**\n * `FileInput` is a component used for users to select files.\n *\n * @see Docs https://yamada-ui.com/components/forms/file-input\n */\nexport const FileInput = forwardRef<FileInputProps, \"input\">(\n  ({ children, ...props }, ref) => {\n    const [styles, mergedProps] = useMultiComponentStyle(\"FileInput\", props)\n    const {\n      className,\n      id,\n      name,\n      accept,\n      multiple,\n      form,\n      placeholder,\n      value,\n      defaultValue,\n      component,\n      format = defaultFormat,\n      lineClamp = 1,\n      separator = \",\",\n      resetRef,\n      \"aria-readonly\": ariaReadonly,\n      onChange: onChangeProp,\n      onClick: onClickProp,\n      ...rest\n    } = useFormControlProps(omitThemeProps(mergedProps))\n\n    const { disabled, readOnly } = rest\n\n    const inputRef = useRef<HTMLInputElement>(null)\n\n    const [values, setValues] = useControllableState<File[] | undefined>({\n      value,\n      defaultValue,\n      onChange: onChangeProp,\n    })\n\n    const onClick = useCallback(() => {\n      if (disabled || readOnly) return\n\n      inputRef.current?.click()\n    }, [disabled, readOnly])\n\n    const onChange = useCallback(\n      (ev: ChangeEvent<HTMLInputElement>) => {\n        let files = !isNull(ev.currentTarget.files)\n          ? Array.from(ev.currentTarget.files)\n          : undefined\n\n        if (!files?.length) files = undefined\n\n        setValues(files)\n      },\n      [setValues],\n    )\n\n    const onReset = useCallback(() => {\n      if (inputRef.current) inputRef.current.value = \"\"\n\n      setValues(undefined)\n    }, [setValues])\n\n    assignRef(resetRef, onReset)\n\n    const cloneChildren = useMemo(() => {\n      if (!values?.length)\n        return <ui.span lineClamp={lineClamp}>{placeholder}</ui.span>\n\n      if (children) return children(values)\n\n      if (component) {\n        return (\n          <ui.span lineClamp={lineClamp}>\n            {values.map((value, index) => {\n              const el = component({ value, index })\n\n              const style: CSSProperties = {\n                marginBlockStart: \"0.125rem\",\n                marginBlockEnd: \"0.125rem\",\n                marginInlineEnd: \"0.25rem\",\n              }\n\n              return el\n                ? cloneElement(el as ReactElement, { style, key: index })\n                : null\n            })}\n          </ui.span>\n        )\n      } else {\n        return (\n          <ui.span lineClamp={lineClamp}>\n            {values.map((value, index) => {\n              const isLast = values.length === index + 1\n\n              return (\n                <ui.span key={index} display=\"inline-block\" me=\"0.25rem\">\n                  {format(value, index)}\n                  {!isLast ? separator : null}\n                </ui.span>\n              )\n            })}\n          </ui.span>\n        )\n      }\n    }, [children, format, lineClamp, placeholder, separator, component, values])\n\n    const css: CSSUIObject = {\n      display: \"flex\",\n      alignItems: \"center\",\n      cursor: !readOnly ? \"pointer\" : \"auto\",\n      ...styles.field,\n    }\n\n    return (\n      <>\n        <ui.input\n          ref={mergeRefs(inputRef, ref)}\n          type=\"file\"\n          aria-hidden\n          tabIndex={-1}\n          id={id}\n          name={name}\n          form={form}\n          accept={accept}\n          multiple={multiple}\n          style={{\n            border: \"0px\",\n            clip: \"rect(0px, 0px, 0px, 0px)\",\n            height: \"1px\",\n            width: \"1px\",\n            margin: \"-1px\",\n            padding: \"0px\",\n            overflow: \"hidden\",\n            whiteSpace: \"nowrap\",\n            position: \"absolute\",\n          }}\n          onChange={onChange}\n          aria-readonly={ariaReadonly}\n          {...pickObject(rest, formControlProperties)}\n        />\n\n        <ui.div\n          ref={ref}\n          className={cx(\"ui-file-input\", className)}\n          py={values?.length && component ? \"0.125rem\" : undefined}\n          {...rest}\n          __css={css}\n          tabIndex={0}\n          data-placeholder={dataAttr(!values?.length)}\n          onClick={handlerAll(onClickProp, onClick)}\n        >\n          {cloneChildren}\n        </ui.div>\n      </>\n    )\n  },\n)\n"],"mappings":"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","names":["value"]}
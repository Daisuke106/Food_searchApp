{"version":3,"sources":["../src/reorder-item.tsx","../src/reorder.tsx"],"sourcesContent":["import type { HTMLUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui } from \"@yamada-ui/core\"\nimport type { HTMLMotionProps, DragControls } from \"@yamada-ui/motion\"\nimport {\n  MotionReorder,\n  useMotionValue,\n  useDragControls,\n} from \"@yamada-ui/motion\"\nimport { createContext, cx, dataAttr } from \"@yamada-ui/utils\"\nimport { forwardRef, useCallback, useEffect, useState } from \"react\"\nimport { useReorderContext } from \"./reorder\"\n\ntype ReorderItemContext = {\n  register: (node: HTMLElement | null) => void\n  isDrag: boolean\n  dragControls: DragControls\n}\n\nexport const [ReorderItemProvider, useReorderItemContext] =\n  createContext<ReorderItemContext>({\n    name: \"ReorderContext\",\n    errorMessage: `useReorderItemContext returned is 'undefined'. Seems you forgot to wrap the components in \"<ReorderItem />\"`,\n  })\n\ntype ReorderItemOptions = {\n  /**\n   * The label of the reorder item.\n   */\n  label: string | number\n}\n\nexport type ReorderItemProps = Omit<HTMLUIProps<\"li\">, \"as\"> &\n  Omit<HTMLMotionProps<\"li\">, \"as\" | \"layout\"> &\n  ReorderItemOptions\n\nexport const ReorderItem = forwardRef<HTMLLIElement, ReorderItemProps>(\n  ({ className, label, ...rest }, ref) => {\n    const { orientation, styles } = useReorderContext()\n\n    const dragControls = useDragControls()\n\n    const [hasTrigger, setHasTrigger] = useState<boolean>(false)\n    const [isDrag, setIsDrag] = useState<boolean>(false)\n\n    const x = useMotionValue(0)\n    const y = useMotionValue(0)\n\n    const register = useCallback(\n      (node: HTMLElement | null) => setHasTrigger(!!node),\n      [],\n    )\n\n    useEffect(() => {\n      const unsubscribeX = x.on(\"change\", (x) => {\n        if (orientation === \"horizontal\") setIsDrag(x !== 0)\n      })\n      const unsubscribeY = y.on(\"change\", (y) => {\n        if (orientation === \"vertical\") setIsDrag(y !== 0)\n      })\n\n      return () => {\n        unsubscribeX()\n        unsubscribeY()\n      }\n    }, [orientation, x, y])\n\n    const css: CSSUIObject = {\n      ...(!hasTrigger ? { cursor: \"grab\" } : { userSelect: \"none\" }),\n      ...styles.item,\n      ...(!hasTrigger\n        ? {\n            _selected: {\n              ...(styles.item as any)?._selected,\n              cursor: \"grabbing\",\n            },\n          }\n        : {}),\n    }\n\n    return (\n      <ReorderItemProvider value={{ register, isDrag, dragControls }}>\n        <ui.li\n          ref={ref}\n          as={MotionReorder.Item}\n          className={cx(\"ui-reorder__item\", className)}\n          value={label}\n          __css={css}\n          {...rest}\n          // @ts-ignore\n          dragListener={!hasTrigger}\n          dragControls={dragControls}\n          data-selected={dataAttr(isDrag)}\n          style={{ ...rest.style, x, y }}\n        />\n      </ReorderItemProvider>\n    )\n  },\n)\n\nReorderItem.displayName = \"ReorderItem\"\n","import type { CSSUIObject, HTMLUIProps, ThemeProps } from \"@yamada-ui/core\"\nimport { ui, useMultiComponentStyle, omitThemeProps } from \"@yamada-ui/core\"\nimport type { HTMLMotionProps } from \"@yamada-ui/motion\"\nimport { MotionReorder } from \"@yamada-ui/motion\"\nimport {\n  createContext,\n  cx,\n  getValidChildren,\n  handlerAll,\n  useUpdateEffect,\n} from \"@yamada-ui/utils\"\nimport { forwardRef, useCallback, useMemo, useRef, useState } from \"react\"\n\ntype ReorderContext = {\n  orientation: \"vertical\" | \"horizontal\"\n  styles: Record<string, CSSUIObject>\n}\n\nexport const [ReorderProvider, useReorderContext] =\n  createContext<ReorderContext>({\n    name: \"ReorderContext\",\n    errorMessage: `useReorderContext returned is 'undefined'. Seems you forgot to wrap the components in \"<Reorder />\"`,\n  })\n\ntype ReorderOptions = {\n  /**\n   * The orientation of the reorder.\n   *\n   * @default 'vertical'\n   */\n  orientation?: \"vertical\" | \"horizontal\"\n  /**\n   * The callback invoked when reorder items are moved.\n   */\n  onChange?: (labels: (string | number)[]) => void\n  /**\n   * The callback invoked when the movement of reorder items is completed.\n   */\n  onCompleteChange?: (labels: (string | number)[]) => void\n}\n\nexport type ReorderProps = Omit<HTMLUIProps<\"ul\">, \"as\" | \"onChange\"> &\n  Omit<HTMLMotionProps<\"ul\">, \"as\" | \"onChange\"> &\n  ThemeProps<\"Reorder\"> &\n  ReorderOptions\n\nconst omitDuplicated = (values: (string | number)[]): (string | number)[] =>\n  Array.from(new Set(values))\n\nconst pickDuplicated = (values: (string | number)[]): (string | number)[] =>\n  values.filter(\n    (value, index, self) =>\n      self.indexOf(value) === index && index !== self.lastIndexOf(value),\n  )\n\n/**\n * `Reorder` is a component that allows you to change the order of items using drag and drop.\n *\n * @see Docs https://yamada-ui.com/components/data-display/reorder\n */\nexport const Reorder = forwardRef<HTMLUListElement, ReorderProps>(\n  (props, ref) => {\n    const [styles, mergedProps] = useMultiComponentStyle(\"Reorder\", props)\n    const {\n      className,\n      orientation = \"vertical\",\n      gap = \"fallback(4, 1rem)\",\n      onChange,\n      onCompleteChange,\n      children,\n      ...rest\n    } = omitThemeProps(mergedProps)\n\n    const axis = orientation === \"vertical\" ? \"y\" : \"x\"\n\n    const validChildren = getValidChildren(children)\n\n    const defaultValues = useMemo(() => {\n      const values = validChildren.map(({ props }) => props.label)\n\n      const duplicatedValues = pickDuplicated(values)\n\n      if (duplicatedValues.length)\n        console.warn(\n          `Reorder: 'label' of 'ReorderItem' must not be duplicated. duplicate 'label' is '${duplicatedValues.join(\n            `', '`,\n          )}' `,\n        )\n\n      return omitDuplicated(values)\n    }, [validChildren])\n    const prevDefaultValues = useRef<(string | number)[]>(defaultValues)\n\n    const [values, setValues] = useState<(string | number)[]>(defaultValues)\n    const prevValues = useRef<(string | number)[]>(defaultValues)\n\n    const onReorder = useCallback(\n      (newValues: (string | number)[]) => {\n        setValues(newValues)\n\n        onChange?.(newValues)\n      },\n      [onChange],\n    )\n\n    const onCompleteReorder = useCallback(() => {\n      const isEqual =\n        JSON.stringify(prevValues.current) === JSON.stringify(values)\n\n      if (isEqual) return\n\n      prevValues.current = values\n\n      onCompleteChange?.(values)\n    }, [onCompleteChange, values])\n\n    useUpdateEffect(() => {\n      const isEqual =\n        JSON.stringify(defaultValues) ===\n        JSON.stringify(prevDefaultValues.current)\n\n      if (isEqual) return\n\n      prevValues.current = defaultValues\n      prevDefaultValues.current = defaultValues\n\n      setValues(defaultValues)\n    }, [defaultValues])\n\n    const cloneChildren = useMemo(\n      () =>\n        values.map((value) =>\n          validChildren.find(({ props }) => props.label === value),\n        ),\n      [values, validChildren],\n    )\n\n    const css: CSSUIObject = {\n      display: \"flex\",\n      flexDirection: orientation === \"vertical\" ? \"column\" : \"row\",\n      gap,\n      ...styles.container,\n    }\n\n    return (\n      <ReorderProvider value={{ orientation, styles }}>\n        <ui.ul\n          ref={ref}\n          as={MotionReorder.Group}\n          className={cx(\"ui-reorder\", className)}\n          axis={axis}\n          values={values}\n          onReorder={onReorder}\n          __css={css}\n          {...rest}\n          onMouseUp={handlerAll(rest.onMouseUp, onCompleteReorder)}\n          onTouchEnd={handlerAll(rest.onTouchEnd, onCompleteReorder)}\n        >\n          {cloneChildren}\n        </ui.ul>\n      </ReorderProvider>\n    )\n  },\n)\n\nReorder.displayName = \"Reorder\"\n"],"mappings":"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","names":["import_core","import_motion","import_utils","import_react","values","props","import_jsx_runtime","x","y"]}
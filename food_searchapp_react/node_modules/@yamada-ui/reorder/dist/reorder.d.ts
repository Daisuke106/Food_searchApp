import * as react from 'react';
import { HTMLUIProps, ThemeProps, CSSUIObject } from '@yamada-ui/core';
import { HTMLMotionProps } from '@yamada-ui/motion';

type ReorderContext = {
    orientation: "vertical" | "horizontal";
    styles: Record<string, CSSUIObject>;
};
declare const ReorderProvider: react.Provider<ReorderContext>;
declare const useReorderContext: () => ReorderContext;
type ReorderOptions = {
    /**
     * The orientation of the reorder.
     *
     * @default 'vertical'
     */
    orientation?: "vertical" | "horizontal";
    /**
     * The callback invoked when reorder items are moved.
     */
    onChange?: (labels: (string | number)[]) => void;
    /**
     * The callback invoked when the movement of reorder items is completed.
     */
    onCompleteChange?: (labels: (string | number)[]) => void;
};
type ReorderProps = Omit<HTMLUIProps<"ul">, "as" | "onChange"> & Omit<HTMLMotionProps<"ul">, "as" | "onChange"> & ThemeProps<"Reorder"> & ReorderOptions;
/**
 * `Reorder` is a component that allows you to change the order of items using drag and drop.
 *
 * @see Docs https://yamada-ui.com/components/data-display/reorder
 */
declare const Reorder: react.ForwardRefExoticComponent<Omit<HTMLUIProps<"ul">, "as" | "onChange"> & Omit<HTMLMotionProps<"ul">, "as" | "onChange"> & ThemeProps<"Reorder"> & ReorderOptions & react.RefAttributes<HTMLUListElement>>;

export { Reorder, type ReorderProps, ReorderProvider, useReorderContext };

"use client"
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/autocomplete-create.tsx
var autocomplete_create_exports = {};
__export(autocomplete_create_exports, {
  AutocompleteCreate: () => AutocompleteCreate
});
module.exports = __toCommonJS(autocomplete_create_exports);
var import_core3 = require("@yamada-ui/core");
var import_utils3 = require("@yamada-ui/utils");

// src/autocomplete-icon.tsx
var import_core2 = require("@yamada-ui/core");
var import_icon = require("@yamada-ui/icon");
var import_use_clickable = require("@yamada-ui/use-clickable");
var import_utils2 = require("@yamada-ui/utils");
var import_react2 = require("react");

// src/use-autocomplete.tsx
var import_core = require("@yamada-ui/core");
var import_form_control = require("@yamada-ui/form-control");
var import_popover = require("@yamada-ui/popover");
var import_use_controllable_state = require("@yamada-ui/use-controllable-state");
var import_use_descendant = require("@yamada-ui/use-descendant");
var import_use_disclosure = require("@yamada-ui/use-disclosure");
var import_use_outside_click = require("@yamada-ui/use-outside-click");
var import_utils = require("@yamada-ui/utils");
var import_react = require("react");
var import_jsx_runtime = require("react/jsx-runtime");
var {
  DescendantsContextProvider: AutocompleteDescendantsContextProvider,
  useDescendantsContext: useAutocompleteDescendantsContext,
  useDescendants: useAutocompleteDescendants,
  useDescendant: useAutocompleteDescendant
} = (0, import_use_descendant.createDescendant)();
var [AutocompleteProvider, useAutocompleteContext] = (0, import_utils.createContext)({
  name: "AutocompleteContext",
  errorMessage: `useAutocompleteContext returned is 'undefined'. Seems you forgot to wrap the components in "<Autocomplete />" or "<MultiAutocomplete />"`
});
var useAutocompleteCreate = () => {
  const { isHit, onCreate } = useAutocompleteContext();
  const getCreateProps = (0, import_react.useCallback)(
    (props = {}, ref = null) => {
      const style = {
        border: "0px",
        clip: "rect(0px, 0px, 0px, 0px)",
        height: "1px",
        width: "1px",
        margin: "-1px",
        padding: "0px",
        overflow: "hidden",
        whiteSpace: "nowrap",
        position: "absolute"
      };
      return {
        ref,
        ...props,
        tabIndex: -1,
        style: isHit ? style : void 0,
        "data-focus": (0, import_utils.dataAttr)(!isHit),
        onClick: (0, import_utils.handlerAll)(props.onClick, onCreate)
      };
    },
    [isHit, onCreate]
  );
  return { getCreateProps };
};

// src/autocomplete-icon.tsx
var import_jsx_runtime2 = require("react/jsx-runtime");
var AutocompleteIcon = (0, import_core2.forwardRef)(
  ({ className, children, __css, ...rest }, ref) => {
    const { styles } = useAutocompleteContext();
    const css = {
      position: "absolute",
      top: "50%",
      transform: "translateY(-50%)",
      display: "inline-flex",
      alignItems: "center",
      justifyContent: "center",
      pointerEvents: "none",
      cursor: "pointer",
      ...styles.icon,
      ...__css
    };
    const validChildren = (0, import_utils2.getValidChildren)(children);
    const cloneChildren = validChildren.map(
      (child) => (0, import_react2.cloneElement)(child, {
        focusable: false,
        "aria-hidden": true,
        style: {
          maxWidth: "1em",
          maxHeight: "1em",
          color: "currentColor"
        }
      })
    );
    return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
      import_core2.ui.div,
      {
        ref,
        className: (0, import_utils2.cx)("ui-autocomplete__icon", className),
        __css: css,
        ...rest,
        children: (0, import_utils2.isValidElement)(children) ? cloneChildren : /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_icon.ChevronIcon, {})
      }
    );
  }
);
var AutocompleteItemIcon = (0, import_core2.forwardRef)(({ className, ...rest }, ref) => {
  const { styles } = useAutocompleteContext();
  const css = {
    flexShrink: 0,
    display: "inline-flex",
    justifyContent: "center",
    alignItems: "center",
    fontSize: "0.85em",
    ...styles.itemIcon
  };
  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
    import_core2.ui.span,
    {
      ref,
      className: (0, import_utils2.cx)("ui-autocomplete__item__icon", className),
      __css: css,
      ...rest
    }
  );
});

// src/autocomplete-create.tsx
var import_jsx_runtime3 = require("react/jsx-runtime");
var AutocompleteCreate = (0, import_core3.forwardRef)(
  ({ className, icon, children, ...rest }, ref) => {
    const { inputValue, styles } = useAutocompleteContext();
    const { getCreateProps } = useAutocompleteCreate();
    children != null ? children : children = inputValue;
    const css = {
      textDecoration: "none",
      color: "inherit",
      userSelect: "none",
      display: "flex",
      width: "100%",
      alignItems: "center",
      textAlign: "start",
      flex: "0 0 auto",
      outline: 0,
      gap: "0.75rem",
      ...styles.item
    };
    return /* @__PURE__ */ (0, import_jsx_runtime3.jsxs)(
      import_core3.ui.li,
      {
        className: (0, import_utils3.cx)("ui-autocomplete__item--create", className),
        __css: css,
        ...getCreateProps(rest, ref),
        children: [
          icon !== null ? /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(AutocompleteItemIcon, { children: icon || /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(PlusIcon, {}) }) : null,
          icon ? /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(import_core3.ui.span, { style: { pointerEvents: "none", flex: 1 }, lineClamp: 1, children: (0, import_utils3.runIfFunc)(children, inputValue) }) : (0, import_utils3.runIfFunc)(children, inputValue)
        ]
      }
    );
  }
);
var PlusIcon = () => /* @__PURE__ */ (0, import_jsx_runtime3.jsx)("svg", { viewBox: "0 0 45.402 45.402", width: "1em", height: "1em", children: /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
  "path",
  {
    fill: "currentColor",
    d: "M41.267,18.557H26.832V4.134C26.832,1.851,24.99,0,22.707,0c-2.283,0-4.124,1.851-4.124,4.135v14.432H4.141   c-2.283,0-4.139,1.851-4.138,4.135c-0.001,1.141,0.46,2.187,1.207,2.934c0.748,0.749,1.78,1.222,2.92,1.222h14.453V41.27   c0,1.142,0.453,2.176,1.201,2.922c0.748,0.748,1.777,1.211,2.919,1.211c2.282,0,4.129-1.851,4.129-4.133V26.857h14.435   c2.283,0,4.134-1.867,4.133-4.15C45.399,20.425,43.548,18.557,41.267,18.557z"
  }
) });
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  AutocompleteCreate
});
//# sourceMappingURL=autocomplete-create.js.map
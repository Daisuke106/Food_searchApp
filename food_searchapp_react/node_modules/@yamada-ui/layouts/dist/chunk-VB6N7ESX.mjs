"use client"

// src/divider.tsx
import {
  ui,
  forwardRef,
  useComponentStyle,
  omitThemeProps
} from "@yamada-ui/core";
import { cx } from "@yamada-ui/utils";
import { useMemo } from "react";
import { jsx } from "react/jsx-runtime";
var Divider = forwardRef((props, ref) => {
  const [
    {
      borderRightWidth,
      borderLeftWidth,
      borderTopWidth,
      borderBottomWidth,
      borderWidth,
      borderStyle,
      borderColor,
      ...styles
    },
    mergedProps
  ] = useComponentStyle("Divider", props);
  const {
    className,
    orientation = "horizontal",
    __css,
    ...rest
  } = omitThemeProps(mergedProps);
  const customStyles = useMemo(
    () => ({
      vertical: {
        border: "0",
        borderStyle,
        borderColor,
        borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || "1px",
        height: "100%"
      },
      horizontal: {
        border: "0",
        borderStyle,
        borderColor,
        borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || "1px",
        width: "100%"
      }
    }),
    [
      borderBottomWidth,
      borderColor,
      borderLeftWidth,
      borderRightWidth,
      borderStyle,
      borderTopWidth,
      borderWidth
    ]
  );
  const dividerStyles = useMemo(
    () => customStyles[orientation],
    [customStyles, orientation]
  );
  const css = {
    ...styles,
    ...dividerStyles,
    ...__css
  };
  return /* @__PURE__ */ jsx(
    ui.hr,
    {
      ref,
      className: cx("ui-divider", className),
      __css: css,
      ...rest
    }
  );
});

export {
  Divider
};
//# sourceMappingURL=chunk-VB6N7ESX.mjs.map
{"version":3,"sources":["../src/stack.tsx"],"sourcesContent":["import type { HTMLUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport {\n  getValidChildren,\n  cx,\n  replaceObject,\n  mergeRefs,\n} from \"@yamada-ui/utils\"\nimport type { ReactElement, RefObject } from \"react\"\nimport {\n  cloneElement,\n  createRef,\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\n\ntype StackOptions = {\n  /**\n   * The CSS `flex-direction` property.\n   */\n  direction?: CSSUIObject[\"flexDirection\"]\n  /**\n   * The CSS `justify-content` property.\n   */\n  justify?: CSSUIObject[\"justifyContent\"]\n  /**\n   * The CSS `align-items` property.\n   */\n  align?: CSSUIObject[\"alignItems\"]\n  /**\n   * The CSS `flex-wrap` property.\n   */\n  wrap?: CSSUIObject[\"flexWrap\"]\n  /**\n   * If `true`, each stack item will show a divider.\n   */\n  divider?: ReactElement\n}\n\nexport type StackProps = Omit<HTMLUIProps<\"div\">, \"direction\"> & StackOptions\n\n/**\n * `Stack` is a component that groups elements and provides space between child elements.\n *\n * @see Docs https://yamada-ui.com/components/layouts/stack\n */\nexport const Stack = forwardRef<StackProps, \"div\">(\n  (\n    {\n      direction: flexDirection = \"column\",\n      justify: justifyContent,\n      align: alignItems,\n      wrap: flexWrap,\n      gap = \"fallback(md, 1rem)\",\n      divider,\n      className,\n      children,\n      ...rest\n    },\n    ref,\n  ) => {\n    const isColumn = (value: any) =>\n      value === \"column\" || value === \"column-reverse\"\n\n    const dividerCSS = useMemo(\n      () => ({\n        w: replaceObject(flexDirection, (value) =>\n          isColumn(value) ? \"100%\" : \"fix-content\",\n        ),\n        h: replaceObject(flexDirection, (value) =>\n          isColumn(value) ? \"fix-content\" : \"100%\",\n        ),\n        borderLeftWidth: replaceObject(flexDirection, (value) =>\n          isColumn(value) ? 0 : \"1px\",\n        ),\n        borderBottomWidth: replaceObject(flexDirection, (value) =>\n          isColumn(value) ? \"1px\" : 0,\n        ),\n      }),\n      [flexDirection],\n    )\n\n    const validChildren = getValidChildren(children)\n\n    const cloneChildren = divider\n      ? validChildren.map((child, index) => {\n          const key = typeof child.key !== \"undefined\" ? child.key : index\n\n          const cloneDivider = cloneElement(\n            divider as React.ReactElement<any>,\n            {\n              __css: dividerCSS,\n            },\n          )\n\n          return (\n            <Fragment key={key}>\n              {!!index ? cloneDivider : null}\n              {child}\n            </Fragment>\n          )\n        })\n      : validChildren\n\n    const css: CSSUIObject = useMemo(\n      () => ({\n        display: \"flex\",\n        flexDirection,\n        justifyContent,\n        alignItems,\n        flexWrap,\n        gap,\n      }),\n      [alignItems, flexDirection, flexWrap, gap, justifyContent],\n    )\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-stack\", className)}\n        __css={css}\n        {...rest}\n      >\n        {cloneChildren}\n      </ui.div>\n    )\n  },\n)\n\n/**\n * `HStack` is a component that groups elements and provides space between child elements.\n *\n * @see Docs https://yamada-ui.com/components/layouts/stack\n */\nexport const HStack = forwardRef<StackProps, \"div\">(\n  ({ className, ...rest }, ref) => (\n    <Stack\n      ref={ref}\n      className={cx(\"ui-stack--horizontal\", className)}\n      direction=\"row\"\n      align=\"center\"\n      {...rest}\n    />\n  ),\n)\n\n/**\n * `VStack` is a component that groups elements and provides space between child elements.\n *\n * @see Docs https://yamada-ui.com/components/layouts/stack\n */\nexport const VStack = forwardRef<StackProps, \"div\">(\n  ({ className, ...rest }, ref) => (\n    <Stack\n      ref={ref}\n      className={cx(\"ui-stack--vertical\", className)}\n      direction=\"column\"\n      align=\"stretch\"\n      w=\"100%\"\n      {...rest}\n    />\n  ),\n)\n\ntype ZStackOptions = {\n  /**\n   * If set the stack will start from the given index.\n   *\n   * @default 0\n   */\n  startIndex?: number\n  /**\n   * Stack in the specified direction.\n   *\n   * @default \"bottom\"\n   */\n  direction?:\n    | \"top\"\n    | \"right\"\n    | \"bottom\"\n    | \"left\"\n    | \"top-left\"\n    | \"top-right\"\n    | \"bottom-left\"\n    | \"bottom-right\"\n  /**\n   * If `true`, reverse direction.\n   *\n   * @default false\n   */\n  reverse?: boolean\n  /**\n   * If `true`, calculate the `width` and `height` of the element and assign container.\n   *\n   * @default true\n   */\n  fit?: boolean\n}\n\nexport type ZStackProps = Omit<HTMLUIProps<\"div\">, \"direction\"> & ZStackOptions\n\n/**\n * `ZStack` is a component that groups elements and provides space between child elements.\n *\n * @see Docs https://yamada-ui.com/components/layouts/stack\n */\nexport const ZStack = forwardRef<ZStackProps, \"div\">(\n  (\n    {\n      className,\n      direction = \"bottom\",\n      startIndex = 0,\n      gap = \"fallback(md, 1rem)\",\n      reverse = false,\n      fit = true,\n      children,\n      ...rest\n    },\n    ref,\n  ) => {\n    const refMap = useRef<Map<number, RefObject<HTMLDivElement>>>(new Map())\n    const [rect, setRect] = useState<{ width: number; height: number }>({\n      width: 0,\n      height: 0,\n    })\n\n    const boxSize: CSSUIObject = {\n      minWidth: `${rect.width}px`,\n      minHeight: `${rect.height}px`,\n    }\n\n    const css: CSSUIObject = {\n      position: \"relative\",\n      overflow: \"hidden\",\n      var: [{ __prefix: \"ui\", name: \"space\", token: \"spaces\", value: gap }],\n      ...(fit ? boxSize : {}),\n    }\n\n    const vertical = useCallback(\n      (space: string) => {\n        if (direction.includes(\"top\")) {\n          return { [!reverse ? \"bottom\" : \"top\"]: space }\n        } else if (direction.includes(\"bottom\")) {\n          return { [!reverse ? \"top\" : \"bottom\"]: space }\n        } else {\n          return { [!reverse ? \"top\" : \"bottom\"]: 0 }\n        }\n      },\n      [direction, reverse],\n    )\n\n    const horizontal = useCallback(\n      (space: string) => {\n        if (direction.includes(\"left\")) {\n          return { [!reverse ? \"right\" : \"left\"]: space }\n        } else if (direction.includes(\"right\")) {\n          return { [!reverse ? \"left\" : \"right\"]: space }\n        } else {\n          return { [!reverse ? \"left\" : \"right\"]: 0 }\n        }\n      },\n      [direction, reverse],\n    )\n\n    const cloneChildren = useMemo(() => {\n      const validChildren = getValidChildren(children) as (ReactElement & {\n        ref: RefObject<any>\n      })[]\n\n      const clonedChildren = validChildren.map((child, index) => {\n        const ref = createRef<HTMLDivElement>()\n\n        refMap.current.set(index, ref)\n\n        const key = child.key ?? index\n\n        const zIndex = startIndex + index\n        const space = `calc(var(--ui-space) * ${index})`\n\n        let css: CSSUIObject = {}\n\n        css = {\n          ...css,\n          position: \"absolute\",\n          zIndex,\n        }\n\n        css = { ...css, ...vertical(space) }\n        css = { ...css, ...horizontal(space) }\n\n        const props = {\n          ...child.props,\n          ref: mergeRefs(child.ref, ref),\n          __css: css,\n        }\n\n        const clonedChild = cloneElement(child, props)\n\n        return <Fragment key={key}>{clonedChild}</Fragment>\n      })\n\n      return clonedChildren\n    }, [children, startIndex, vertical, horizontal])\n\n    useEffect(() => {\n      if (!fit) return\n\n      let isNegativeLeft = direction.includes(\"left\")\n      let isNegativeTop = direction.includes(\"top\")\n      let width = 0\n      let height = 0\n\n      if (reverse) {\n        isNegativeLeft = !isNegativeLeft\n        isNegativeTop = !isNegativeTop\n      }\n\n      for (const ref of refMap.current.values()) {\n        if (!ref.current) continue\n\n        let { offsetParent, offsetWidth, offsetHeight, offsetTop, offsetLeft } =\n          ref.current\n\n        if (!offsetParent) continue\n\n        if (isNegativeLeft) {\n          offsetLeft =\n            (offsetParent as HTMLDivElement).offsetWidth -\n            offsetLeft -\n            offsetWidth\n        }\n\n        if (isNegativeTop) {\n          offsetTop =\n            (offsetParent as HTMLDivElement).offsetHeight -\n            offsetTop -\n            offsetHeight\n        }\n\n        offsetWidth += offsetLeft\n        offsetHeight += offsetTop\n\n        if (offsetWidth > width) width = offsetWidth\n        if (offsetHeight > height) height = offsetHeight\n      }\n\n      setRect({ width, height })\n    }, [cloneChildren, direction, reverse, fit])\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-stack--depth\", className)}\n        __css={css}\n        {...rest}\n      >\n        {cloneChildren}\n      </ui.div>\n    )\n  },\n)\n"],"mappings":"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","names":["ref","css"]}
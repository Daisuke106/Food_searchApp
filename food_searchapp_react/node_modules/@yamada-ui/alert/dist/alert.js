"use client"
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/alert.tsx
var alert_exports = {};
__export(alert_exports, {
  Alert: () => Alert,
  AlertDescription: () => AlertDescription,
  AlertIcon: () => AlertIcon,
  AlertTitle: () => AlertTitle,
  getStatusColorScheme: () => getStatusColorScheme,
  getStatusIcon: () => getStatusIcon
});
module.exports = __toCommonJS(alert_exports);
var import_core = require("@yamada-ui/core");
var import_icon = require("@yamada-ui/icon");
var import_loading = require("@yamada-ui/loading");
var import_utils = require("@yamada-ui/utils");
var import_jsx_runtime = require("react/jsx-runtime");
var defaultStatuses = {
  info: { icon: import_icon.InfoIcon, colorScheme: "info" },
  success: { icon: import_icon.CheckIcon, colorScheme: "success" },
  warning: { icon: import_icon.WarningIcon, colorScheme: "warning" },
  error: { icon: import_icon.WarningIcon, colorScheme: "danger" },
  loading: { icon: import_loading.Loading, colorScheme: "primary" }
};
var [AlertProvider, useAlert] = (0, import_utils.createContext)({
  name: `AlertStylesContext`,
  errorMessage: `useAlert returned is 'undefined'. Seems you forgot to wrap the components in "<Alert />" `
});
var getStatusColorScheme = (status, statuses) => {
  var _a, _b;
  return (_b = (_a = statuses == null ? void 0 : statuses[status]) == null ? void 0 : _a.colorScheme) != null ? _b : defaultStatuses[status].colorScheme;
};
var getStatusIcon = (status, statuses) => {
  var _a, _b;
  return (_b = (_a = statuses == null ? void 0 : statuses[status]) == null ? void 0 : _a.icon) != null ? _b : defaultStatuses[status].icon;
};
var Alert = (0, import_core.forwardRef)(
  ({ status = "info", colorScheme, ...props }, ref) => {
    var _a, _b, _c;
    const { theme } = (0, import_core.useTheme)();
    const statuses = (_c = (_b = (_a = theme.__config) == null ? void 0 : _a.alert) == null ? void 0 : _b.statuses) != null ? _c : {};
    colorScheme != null ? colorScheme : colorScheme = getStatusColorScheme(status, statuses);
    const [styles, mergedProps] = (0, import_core.useMultiComponentStyle)("Alert", {
      ...props,
      colorScheme
    });
    const { className, children, ...rest } = (0, import_core.omitThemeProps)(mergedProps);
    const css = {
      w: "100%",
      display: "flex",
      alignItems: "center",
      position: "relative",
      overflow: "hidden",
      ...styles.container
    };
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(AlertProvider, { value: { status, styles }, children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      import_core.ui.div,
      {
        ref,
        className: (0, import_utils.cx)("ui-alert", className),
        role: "alert",
        __css: css,
        ...rest,
        children
      }
    ) });
  }
);
var AlertIcon = ({
  className,
  children,
  variant = "oval",
  ...rest
}) => {
  var _a, _b, _c;
  const { status, styles } = useAlert();
  const { theme } = (0, import_core.useTheme)();
  const statuses = (_c = (_b = (_a = theme.__config) == null ? void 0 : _a.alert) == null ? void 0 : _b.statuses) != null ? _c : {};
  const Icon = getStatusIcon(status, statuses);
  const css = {
    ...styles.icon,
    ...status === "loading" ? styles.loading : {}
  };
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    import_core.ui.span,
    {
      display: "inherit",
      className: (0, import_utils.cx)("ui-alert__icon", className),
      __css: css,
      ...rest,
      children: children || /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
        Icon,
        {
          ...status === "loading" ? { variant, color: "currentcolor" } : { boxSize: "100%" }
        }
      )
    }
  );
};
var AlertTitle = (0, import_core.forwardRef)(
  ({ className, ...rest }, ref) => {
    const { styles } = useAlert();
    const css = {
      display: "block",
      ...styles.title
    };
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      import_core.ui.p,
      {
        ref,
        className: (0, import_utils.cx)("ui-alert__title", className),
        __css: css,
        ...rest
      }
    );
  }
);
var AlertDescription = (0, import_core.forwardRef)(
  ({ className, ...rest }, ref) => {
    const { styles } = useAlert();
    const css = {
      ...styles.description
    };
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      import_core.ui.span,
      {
        ref,
        className: (0, import_utils.cx)("ui-alert__desc", className),
        __css: css,
        ...rest
      }
    );
  }
);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Alert,
  AlertDescription,
  AlertIcon,
  AlertTitle,
  getStatusColorScheme,
  getStatusIcon
});
//# sourceMappingURL=alert.js.map
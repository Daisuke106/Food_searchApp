import * as _yamada_ui_core from '@yamada-ui/core';
import { AlertStatuses, HTMLUIProps, ThemeProps } from '@yamada-ui/core';
import * as _yamada_ui_icon from '@yamada-ui/icon';
import { LoadingProps } from '@yamada-ui/loading';
import { FC } from 'react';

declare const defaultStatuses: {
    readonly info: {
        readonly icon: FC<_yamada_ui_icon.IconProps>;
        readonly colorScheme: "info";
    };
    readonly success: {
        readonly icon: FC<_yamada_ui_icon.IconProps>;
        readonly colorScheme: "success";
    };
    readonly warning: {
        readonly icon: FC<_yamada_ui_icon.IconProps>;
        readonly colorScheme: "warning";
    };
    readonly error: {
        readonly icon: FC<_yamada_ui_icon.IconProps>;
        readonly colorScheme: "danger";
    };
    readonly loading: {
        readonly icon: _yamada_ui_core.Component<"svg", LoadingProps>;
        readonly colorScheme: "primary";
    };
};
type Status = keyof typeof defaultStatuses;
declare const getStatusColorScheme: (status: Status, statuses?: AlertStatuses) => "link" | (string & {}) | "info" | "success" | "warning" | "danger" | "primary" | "whiteAlpha" | "blackAlpha" | "gray" | "neutral" | "red" | "rose" | "pink" | "flashy" | "orange" | "amber" | "yellow" | "lime" | "green" | "emerald" | "teal" | "cyan" | "sky" | "blue" | "indigo" | "violet" | "secondary" | "purple" | "fuchsia";
declare const getStatusIcon: (status: Status, statuses?: AlertStatuses) => FC<_yamada_ui_icon.IconProps> | _yamada_ui_core.Component<"svg", LoadingProps> | FC;
type AlertOptions = {
    /**
     * The status of the alert.
     *
     * @default 'info'
     */
    status?: Status;
};
type AlertProps = HTMLUIProps<"div"> & ThemeProps<"Alert"> & AlertOptions;
/**
 * `Alert` is a component that conveys information to the user.
 *
 * @see Docs https://yamada-ui.com/components/feedback/alert
 */
declare const Alert: _yamada_ui_core.Component<"div", AlertProps>;
type AlertIconProps = HTMLUIProps<"span"> & {
    variant?: LoadingProps["variant"];
};
declare const AlertIcon: FC<AlertIconProps>;
type AlertTitleProps = HTMLUIProps<"p">;
declare const AlertTitle: _yamada_ui_core.Component<"p", AlertTitleProps>;
type AlertDescriptionProps = HTMLUIProps<"span">;
declare const AlertDescription: _yamada_ui_core.Component<"span", AlertDescriptionProps>;

export { Alert, AlertDescription, type AlertDescriptionProps, AlertIcon, type AlertIconProps, type AlertProps, AlertTitle, type AlertTitleProps, type Status, getStatusColorScheme, getStatusIcon };

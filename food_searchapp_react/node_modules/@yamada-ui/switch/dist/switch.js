"use client"
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/switch.tsx
var switch_exports = {};
__export(switch_exports, {
  Switch: () => Switch
});
module.exports = __toCommonJS(switch_exports);
var import_checkbox = require("@yamada-ui/checkbox");
var import_core = require("@yamada-ui/core");
var import_motion = require("@yamada-ui/motion");
var import_utils = require("@yamada-ui/utils");
var import_react = require("react");
var import_jsx_runtime = require("react/jsx-runtime");
var Switch = (0, import_core.forwardRef)((props, ref) => {
  const [styles, mergedProps] = (0, import_core.useMultiComponentStyle)("Switch", props);
  const {
    className,
    gap = "0.5rem",
    children,
    icon,
    inputProps,
    labelProps,
    isReverse,
    flexDirection,
    transition = {
      type: "spring",
      stiffness: 700,
      damping: 40
    },
    ...computedProps
  } = (0, import_core.omitThemeProps)(mergedProps);
  const {
    isChecked,
    isFocused,
    isHovered,
    isActive,
    getContainerProps,
    getIconProps,
    getInputProps,
    getLabelProps,
    props: rest
  } = (0, import_checkbox.useCheckbox)(computedProps);
  const cloneIcon = icon ? (0, import_react.cloneElement)(icon, {
    isChecked,
    isFocused,
    isHovered,
    isActive
  }) : null;
  return /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(
    import_core.ui.label,
    {
      ref,
      className: (0, import_utils.cx)("ui-switch", className),
      __css: {
        cursor: "pointer",
        position: "relative",
        display: "inline-flex",
        flexDirection: flexDirection != null ? flexDirection : isReverse ? "row-reverse" : "row",
        alignItems: "center",
        verticalAlign: "top",
        gap,
        ...styles.container
      },
      ...getContainerProps(),
      ...rest,
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
          import_core.ui.input,
          {
            className: (0, import_utils.cx)("ui-switch__input", className),
            ...getInputProps(inputProps, ref)
          }
        ),
        cloneIcon != null ? cloneIcon : /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
          import_core.ui.span,
          {
            className: (0, import_utils.cx)("ui-switch__track", className),
            __css: {
              boxSizing: "content-box",
              display: "inline-flex",
              justifyContent: "flex-start",
              alignItems: "center",
              flexShrink: 0,
              ...styles.track
            },
            ...getIconProps(),
            children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
              import_core.ui.span,
              {
                as: import_motion.motion.span,
                className: (0, import_utils.cx)("ui-switch__thumb", className),
                "data-checked": (0, import_utils.dataAttr)(isChecked),
                layout: true,
                transition,
                __css: { ...styles.thumb }
              }
            )
          }
        ),
        children ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
          import_core.ui.span,
          {
            className: (0, import_utils.cx)("ui-switch__label", className),
            __css: { ...styles.label },
            ...getLabelProps(labelProps),
            children
          }
        ) : null
      ]
    }
  );
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Switch
});
//# sourceMappingURL=switch.js.map
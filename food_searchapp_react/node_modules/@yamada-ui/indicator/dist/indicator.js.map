{"version":3,"sources":["../src/indicator.tsx"],"sourcesContent":["import type {\n  AnimationStyle,\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n  Token,\n} from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  omitThemeProps,\n  useComponentStyle,\n} from \"@yamada-ui/core\"\nimport { useAnimation } from \"@yamada-ui/use-animation\"\nimport { useValue } from \"@yamada-ui/use-value\"\nimport { cx } from \"@yamada-ui/utils\"\nimport type { ReactNode } from \"react\"\nimport { useMemo } from \"react\"\n\ntype IndicatorOptions = {\n  children: ReactNode\n  /**\n   * If `true`, set the indicator as an inline element.\n   *\n   * @default false\n   * */\n  inline?: Token<boolean>\n  /**\n   * The placement of the indicator.\n   *\n   * @default 'top-right'\n   */\n  placement?: Token<\n    | \"top\"\n    | \"top-left\"\n    | \"top-right\"\n    | \"left\"\n    | \"right\"\n    | \"bottom\"\n    | \"bottom-left\"\n    | \"bottom-right\"\n  >\n  /**\n   * Changes position offset, usually used when element has border-radius.\n   *\n   * @default 0\n   */\n  offset?: Token<number>\n  /**\n   * The indicator label to use.\n   */\n  label?: ReactNode\n  /**\n   * If `label` is of type number, the maximum number displayed.\n   *\n   * @default 99\n   */\n  overflowCount?: number\n  /**\n   * If `true`, display 0.\n   *\n   * @default true\n   */\n  showZero?: boolean\n  /**\n   * If `true`, the indicator will be disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, display the border of the indicator.\n   *\n   * @default false\n   */\n  withBorder?: boolean\n  /**\n   * Props for indicator wrapper element.\n   */\n  containerProps?: Omit<HTMLUIProps<\"div\">, \"children\">\n  /**\n   * If `true`, make an element scale and fade like a radar ping or ripple of water.\n   *\n   * @default false\n   */\n  ping?: boolean\n  /**\n   * It is used for the color of the ping animation.\n   *\n   * @default \"var(--ui-ping)\"\n   */\n  pingColor?: HTMLUIProps<\"div\">[\"backgroundColor\"]\n  /**\n   * It is used for the scale of the ping animation.\n   *\n   * @default 1.8\n   */\n  pingScale?: number\n  /**\n   * It is used for the count of the ping animation.\n   *\n   * @default \"infinite\"\n   */\n  pingCount?: AnimationStyle[\"iterationCount\"]\n  /**\n   * It is used for the duration of the ping animation.\n   *\n   * @default \"1.4s\"\n   */\n  pingDuration?: AnimationStyle[\"direction\"]\n}\n\nexport type IndicatorProps = Omit<HTMLUIProps<\"div\">, \"children\" | \"offset\"> &\n  ThemeProps<\"Indicator\"> &\n  IndicatorOptions\n\nconst getPlacementStyle = (\n  placement:\n    | \"top\"\n    | \"top-left\"\n    | \"top-right\"\n    | \"left\"\n    | \"right\"\n    | \"bottom\"\n    | \"bottom-left\"\n    | \"bottom-right\",\n  offset: number,\n): CSSUIObject => {\n  const styles: CSSUIObject = {}\n  let translateX = \"\"\n  let translateY = \"\"\n\n  if (placement.includes(\"top\")) {\n    styles.top = offset\n    translateY = \"-50%\"\n  } else if (placement.includes(\"bottom\")) {\n    styles.bottom = offset\n    translateY = \"50%\"\n  } else {\n    styles.top = \"50%\"\n    translateY = \"-50%\"\n  }\n\n  if (placement.includes(\"left\")) {\n    styles.left = offset\n    translateX = \"-50%\"\n  } else if (placement.includes(\"right\")) {\n    styles.right = offset\n    translateX = \"50%\"\n  } else {\n    styles.left = \"50%\"\n    translateX = \"-50%\"\n  }\n\n  styles.transform = `translate(${translateX}, ${translateY})`\n\n  return styles\n}\n\n/**\n * `Indicator` is a component that displays at the corner of elements such as avatars.\n *\n * @see Docs https://yamada-ui.com/components/media-and-icons/indicator\n */\nexport const Indicator = forwardRef<IndicatorProps, \"div\">((props, ref) => {\n  const [styles, mergedProps] = useComponentStyle(\"Indicator\", props)\n  let {\n    className,\n    inline = false,\n    placement = \"top-right\",\n    offset = 0,\n    label,\n    overflowCount = 99,\n    showZero = true,\n    children,\n    isDisabled,\n    containerProps,\n    ping,\n    pingColor = \"var(--ui-ping)\",\n    pingDuration = \"1.4s\",\n    pingCount = \"infinite\",\n    pingScale = 1.8,\n    ...rest\n  } = omitThemeProps(mergedProps, [\"withBorder\"])\n  const animation = useAnimation({\n    keyframes: {\n      \"75%, 100%\": {\n        transform: `scale(${pingScale})`,\n        opacity: 0,\n      },\n    },\n    fillMode: \"forwards\",\n    duration: pingDuration,\n    timingFunction: \"cubic-bezier(0, 0, 0.2, 1)\",\n    iterationCount: pingCount,\n  })\n\n  const isNumeric = typeof label === \"number\"\n\n  if (isNumeric && !showZero && (label as number) <= 0) isDisabled ??= true\n\n  const computedInline = useValue(inline)\n  const computedPlacement = useValue(placement)\n  const computedOffset = useValue(offset)\n\n  const renderLabel = useMemo(() => {\n    if (isNumeric) {\n      if ((label as number) > overflowCount) {\n        return (\n          <>\n            {overflowCount}\n            <ui.span lineHeight={1}>+</ui.span>\n          </>\n        )\n      } else {\n        return label\n      }\n    } else {\n      return label\n    }\n  }, [isNumeric, label, overflowCount])\n\n  const css: CSSUIObject = {\n    position: \"absolute\",\n    ...getPlacementStyle(computedPlacement, computedOffset),\n    ...(isNumeric ? { fontWeight: \"medium\" } : {}),\n    ...styles,\n  }\n\n  return (\n    <ui.div\n      ref={ref}\n      className={cx(\"ui-indicator\", className)}\n      __css={{\n        position: \"relative\",\n        display: computedInline ? \"inline-block\" : \"block\",\n      }}\n      {...containerProps}\n    >\n      {!isDisabled ? (\n        <ui.div\n          ref={ref}\n          className={cx(\"ui-indicator__icon\", className)}\n          __css={css}\n          {...rest}\n        >\n          {renderLabel}\n\n          {ping ? (\n            <ui.div\n              className=\"ui-indicator__icon__ping\"\n              __css={{\n                position: \"absolute\",\n                boxSize: \"100%\",\n                rounded: \"fallback(full, 9999px)\",\n                opacity: 0.75,\n                zIndex: -1,\n                bg: pingColor,\n              }}\n              animation={animation}\n            />\n          ) : null}\n        </ui.div>\n      ) : null}\n\n      {children}\n    </ui.div>\n  )\n})\n"],"mappings":"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","names":[]}
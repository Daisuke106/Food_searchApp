"use client"

// src/index.ts
import {
  useCallbackRef,
  runIfFunc,
  isUndefined,
  isNull
} from "@yamada-ui/utils";
import { useState } from "react";
var useControllableState = ({
  value,
  ...rest
}) => {
  var _a;
  (_a = rest.onUpdate) != null ? _a : rest.onUpdate = (prev, next) => prev !== next;
  const onChange = useCallbackRef(rest.onChange);
  const onUpdate = useCallbackRef(rest.onUpdate);
  const [defaultValue, setDefaultValue] = useState(rest.defaultValue);
  const controlled = value !== void 0;
  const resolvedValue = controlled ? value : defaultValue;
  const setValue = useCallbackRef(
    (next) => {
      const nextValue = runIfFunc(next, resolvedValue);
      if (!onUpdate(resolvedValue, nextValue))
        return;
      if (!controlled || isUndefined(nextValue) || isNull(nextValue))
        setDefaultValue(nextValue);
      onChange(nextValue);
    },
    [controlled, resolvedValue, onChange, onUpdate]
  );
  return [resolvedValue, setValue];
};
export {
  useControllableState
};
//# sourceMappingURL=index.mjs.map
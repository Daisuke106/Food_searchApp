import * as _yamada_ui_core from '@yamada-ui/core';
import { HTMLUIProps, ThemeProps } from '@yamada-ui/core';
import { HTMLMotionProps, MotionTransitionProperties } from '@yamada-ui/motion';
import { PortalProps } from '@yamada-ui/portal';
import { UsePopperProps } from '@yamada-ui/use-popper';
import { ReactNode } from 'react';

type TooltipOptions = {
    /**
     * The label of the tooltip.
     */
    label?: ReactNode;
    /**
     * If `true`, the tooltip will be shown.
     */
    isOpen?: boolean;
    /**
     * If `true`, the tooltip will be initially shown.
     */
    defaultIsOpen?: boolean;
    /**
     * Callback to run when the tooltip shows.
     */
    onOpen?: () => void;
    /**
     * Callback to run when the tooltip hides.
     */
    onClose?: () => void;
    /**
     * If `true`, the tooltip will be disabled.
     *
     * @default false
     */
    isDisabled?: boolean;
    /**
     * The delay before showing the tooltip.
     *
     * @default 0
     */
    openDelay?: number;
    /**
     * The delay before hiding the tooltip.
     *
     * @default 0
     */
    closeDelay?: number;
    /**
     * If `true`, the tooltip will hide on click.
     *
     * @default false
     */
    closeOnClick?: boolean;
    /**
     * If `true`, the tooltip will hide on scroll.
     *
     * @default false
     */
    closeOnScroll?: boolean;
    /**
     * If `true`, the tooltip will hide while the mouse is down.
     *
     * @default false
     */
    closeOnMouseDown?: boolean;
    /**
     * If `true`, the tooltip will hide while the pointer is down.
     *
     * @default false
     */
    closeOnPointerDown?: boolean;
    /**
     * If `true`, the tooltip will hide on pressing Esc key.
     *
     * @default true
     */
    closeOnEsc?: boolean;
    /**
     * The animation of the tooltip.
     *
     * @default 'scale'
     */
    animation?: "scale" | "top" | "right" | "left" | "bottom" | "none";
    /**
     * The animation duration.
     */
    duration?: MotionTransitionProperties["duration"];
    /**
     * Props for portal component.
     */
    portalProps?: Pick<PortalProps, "appendToParentPortal" | "containerRef">;
    /**
     * If `true`, the element will be transported to the end of document.body.
     */
    withPortal?: boolean;
};
type TooltipProps = Omit<HTMLUIProps<"div">, "offset"> & ThemeProps<"Tooltip"> & Omit<HTMLMotionProps<"div">, "color" | "style" | "variants" | "transition"> & Pick<UsePopperProps, "modifiers" | "gutter" | "offset" | "placement"> & TooltipOptions;
/**
 * `Tooltip` is a component that displays short information, such as supplementary details for an element.
 *
 * @see Docs https://yamada-ui.com/components/overlay/tooltip
 */
declare const Tooltip: _yamada_ui_core.Component<"div", TooltipProps>;

export { Tooltip, type TooltipProps };

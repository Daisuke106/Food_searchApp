{"version":3,"sources":["../src/index.ts"],"sourcesContent":["export type OS =\n  | \"undetermined\"\n  | \"macos\"\n  | \"ios\"\n  | \"windows\"\n  | \"android\"\n  | \"linux\"\n\nconst getOS = (): OS => {\n  const { userAgent } = window.navigator\n\n  const macos = /(Macintosh)|(MacIntel)|(MacPPC)|(Mac68K)/i\n  const windows = /(Win32)|(Win64)|(Windows)|(WinCE)/i\n  const ios = /(iPhone)|(iPad)|(iPod)/i\n  const android = /Android/i\n  const linux = /Linux/i\n\n  if (macos.test(userAgent)) return \"macos\"\n  if (ios.test(userAgent)) return \"ios\"\n  if (windows.test(userAgent)) return \"windows\"\n  if (android.test(userAgent)) return \"android\"\n  if (linux.test(userAgent)) return \"linux\"\n\n  return \"undetermined\"\n}\n\n/**\n * `useOS` is a custom hook that returns the user's OS.\n *\n * @see Docs https://yamada-ui.com/hooks/use-os\n */\nexport const useOS = (): OS => {\n  if (typeof window !== \"undefined\") return getOS()\n\n  return \"undetermined\"\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,IAAM,QAAQ,MAAU;AACtB,QAAM,EAAE,UAAU,IAAI,OAAO;AAE7B,QAAM,QAAQ;AACd,QAAM,UAAU;AAChB,QAAM,MAAM;AACZ,QAAM,UAAU;AAChB,QAAM,QAAQ;AAEd,MAAI,MAAM,KAAK,SAAS;AAAG,WAAO;AAClC,MAAI,IAAI,KAAK,SAAS;AAAG,WAAO;AAChC,MAAI,QAAQ,KAAK,SAAS;AAAG,WAAO;AACpC,MAAI,QAAQ,KAAK,SAAS;AAAG,WAAO;AACpC,MAAI,MAAM,KAAK,SAAS;AAAG,WAAO;AAElC,SAAO;AACT;AAOO,IAAM,QAAQ,MAAU;AAC7B,MAAI,OAAO,WAAW;AAAa,WAAO,MAAM;AAEhD,SAAO;AACT;","names":[]}
"use client"
"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  useClipboard: () => useClipboard
});
module.exports = __toCommonJS(src_exports);
var import_utils = require("@yamada-ui/utils");
var import_copy_to_clipboard = __toESM(require("copy-to-clipboard"));
var import_react = require("react");
var useClipboard = (defaultValue = "", timeoutOrOptions = {}) => {
  const [hasCopied, setHasCopied] = (0, import_react.useState)(false);
  const [value, setValue] = (0, import_react.useState)(defaultValue);
  (0, import_react.useEffect)(() => setValue(defaultValue), [defaultValue]);
  const { timeout = 1500, ...copyOptions } = (0, import_utils.isNumber)(timeoutOrOptions) ? { timeout: timeoutOrOptions } : timeoutOrOptions;
  const onCopy = (0, import_react.useCallback)(
    (newValue) => {
      if (!(0, import_utils.isString)(newValue)) {
        newValue = value;
      } else {
        setValue(newValue);
      }
      const hasCopied2 = (0, import_copy_to_clipboard.default)(newValue, copyOptions);
      setHasCopied(hasCopied2);
    },
    [value, copyOptions]
  );
  (0, import_react.useEffect)(() => {
    let timeoutId = null;
    if (hasCopied)
      timeoutId = window.setTimeout(() => {
        setHasCopied(false);
      }, timeout);
    return () => {
      if (timeoutId)
        window.clearTimeout(timeoutId);
    };
  }, [timeout, hasCopied]);
  return {
    value,
    setValue,
    onCopy,
    hasCopied
  };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useClipboard
});
//# sourceMappingURL=index.js.map
"use client"

// src/index.ts
import { isNumber, isString } from "@yamada-ui/utils";
import copy from "copy-to-clipboard";
import { useState, useCallback, useEffect } from "react";
var useClipboard = (defaultValue = "", timeoutOrOptions = {}) => {
  const [hasCopied, setHasCopied] = useState(false);
  const [value, setValue] = useState(defaultValue);
  useEffect(() => setValue(defaultValue), [defaultValue]);
  const { timeout = 1500, ...copyOptions } = isNumber(timeoutOrOptions) ? { timeout: timeoutOrOptions } : timeoutOrOptions;
  const onCopy = useCallback(
    (newValue) => {
      if (!isString(newValue)) {
        newValue = value;
      } else {
        setValue(newValue);
      }
      const hasCopied2 = copy(newValue, copyOptions);
      setHasCopied(hasCopied2);
    },
    [value, copyOptions]
  );
  useEffect(() => {
    let timeoutId = null;
    if (hasCopied)
      timeoutId = window.setTimeout(() => {
        setHasCopied(false);
      }, timeout);
    return () => {
      if (timeoutId)
        window.clearTimeout(timeoutId);
    };
  }, [timeout, hasCopied]);
  return {
    value,
    setValue,
    onCopy,
    hasCopied
  };
};
export {
  useClipboard
};
//# sourceMappingURL=index.mjs.map
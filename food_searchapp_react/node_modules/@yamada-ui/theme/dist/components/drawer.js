"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/components/drawer.ts
var drawer_exports = {};
__export(drawer_exports, {
  Drawer: () => Drawer
});
module.exports = __toCommonJS(drawer_exports);
var import_core = require("@yamada-ui/core");
var import_utils = require("@yamada-ui/utils");

// src/components/modal.ts
var Modal = {
  baseStyle: {
    container: {
      w: "100%",
      rounded: "md",
      bg: ["white", "black"],
      color: "inherit",
      boxShadow: ["lg", "dark-lg"],
      zIndex: "recoome"
    },
    closeButton: {
      top: "3",
      right: "3"
    },
    overlay: {
      bg: "blackAlpha.600",
      zIndex: "burter"
    },
    header: {
      pt: "md",
      px: "md",
      gap: "md",
      fontSize: "xl",
      fontWeight: "semibold"
    },
    body: {
      my: "md",
      px: "md",
      gap: "md",
      flex: "1"
    },
    footer: {
      px: "md",
      pb: "md",
      gap: "md"
    }
  },
  sizes: {
    xs: { container: { maxW: "xs" } },
    sm: { container: { maxW: "sm" } },
    md: { container: { maxW: "md" } },
    lg: { container: { maxW: "lg" } },
    xl: { container: { maxW: "xl" } },
    "2xl": { container: { maxW: "2xl" } },
    "3xl": { container: { maxW: "3xl" } },
    "4xl": { container: { maxW: "4xl" } },
    "5xl": { container: { maxW: "5xl" } },
    "6xl": { container: { maxW: "6xl" } },
    full: {
      container: { minW: "100vw", minH: "100dvh", rounded: 0 }
    }
  },
  defaultProps: {
    size: "md"
  }
};

// src/components/drawer.ts
var Drawer = (0, import_core.mergeMultiStyle)(Modal, {
  baseStyle: {
    container: ({ isFullHeight, placement }) => ({
      ...isFullHeight ? { height: "100dvh", rounded: 0 } : {},
      [`rounded${(0, import_utils.toCamelCase)(placement)}`]: 0
    }),
    inner: {},
    body: {
      overflow: "auto"
    },
    dragBar: ({ placement }) => ({
      [`margin${(0, import_utils.toCamelCase)((0, import_utils.antonym)(placement))}`]: "md",
      ...placement === "top" || placement === "bottom" ? { mx: "auto", w: "3xs", minH: "2" } : { my: "auto", minW: "2", h: "3xs" },
      bg: ["blackAlpha.100", "whiteAlpha.100"],
      rounded: "full"
    })
  },
  sizes: {
    xs: { container: { maxW: "xs" } },
    sm: { container: { maxW: "md" } },
    md: { container: { maxW: "lg" } },
    lg: { container: { maxW: "2xl" } },
    xl: { container: { maxW: "4xl" } },
    full: {
      container: { minW: "100vw", minH: "100dvh", rounded: 0 }
    }
  },
  defaultProps: {
    size: "md"
  }
})({ omit: ["sizes"] });
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Drawer
});
//# sourceMappingURL=drawer.js.map
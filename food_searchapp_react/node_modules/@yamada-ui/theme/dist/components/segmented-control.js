"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/components/segmented-control.ts
var segmented_control_exports = {};
__export(segmented_control_exports, {
  SegmentedControl: () => SegmentedControl
});
module.exports = __toCommonJS(segmented_control_exports);
var import_utils = require("@yamada-ui/utils");
var SegmentedControl = {
  baseStyle: {
    container: {
      p: "1",
      bg: ["blackAlpha.100", "whiteAlpha.50"],
      _readOnly: { cursor: "default" },
      _disabled: { cursor: "not-allowed" }
    },
    cursor: {
      boxShadow: ["md", "dark-md"]
    },
    button: {
      transitionProperty: "common",
      transitionDuration: "ultra-slow",
      fontWeight: "medium",
      whiteSpace: "nowrap",
      color: ["blackAlpha.800", "whiteAlpha.800"],
      _hover: {
        opacity: 0.7,
        _checked: {
          opacity: 1
        }
      },
      _focusVisible: {
        boxShadow: "outline"
      },
      _readOnly: { cursor: "default" },
      _disabled: { opacity: 0.4, cursor: "not-allowed" }
    }
  },
  variants: {
    basic: ({ colorScheme: c = "gray" }) => ({
      container: {
        rounded: "lg"
      },
      cursor: {
        bg: (0, import_utils.isGray)(c) ? [`whiteAlpha.800`, `${c}.700`] : [(0, import_utils.isAccessible)(c) ? `${c}.400` : `${c}.500`, `${c}.600`],
        color: [(0, import_utils.isGray)(c) || (0, import_utils.isAccessible)(c) ? `black` : `white`, `white`],
        rounded: "md"
      },
      button: {
        rounded: "md",
        _checked: {
          color: [(0, import_utils.isGray)(c) || (0, import_utils.isAccessible)(c) ? `black` : `white`, `white`]
        }
      }
    }),
    rounded: ({ colorScheme: c = "gray" }) => ({
      container: {
        rounded: "full"
      },
      cursor: {
        bg: (0, import_utils.isGray)(c) ? [`whiteAlpha.800`, `${c}.700`] : [(0, import_utils.isAccessible)(c) ? `${c}.400` : `${c}.500`, `${c}.600`],
        color: [(0, import_utils.isGray)(c) || (0, import_utils.isAccessible)(c) ? `black` : `white`, `white`],
        rounded: "full"
      },
      button: {
        rounded: "full",
        _checked: {
          color: [(0, import_utils.isGray)(c) || (0, import_utils.isAccessible)(c) ? `black` : `white`, `white`]
        }
      }
    })
  },
  sizes: {
    sm: {
      container: { minW: "xs" },
      button: { py: "1", px: "2", fontSize: "sm" }
    },
    md: {
      container: { minW: "sm" },
      button: { py: "1.5", px: "3", fontSize: "md" }
    },
    lg: {
      container: { minW: "md" },
      button: { py: "2", px: "4" }
    }
  },
  defaultProps: {
    variant: "basic",
    size: "md"
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SegmentedControl
});
//# sourceMappingURL=segmented-control.js.map
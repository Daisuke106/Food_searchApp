{"version":3,"sources":["../../src/components/button.ts"],"sourcesContent":["import type { ComponentStyle } from \"@yamada-ui/core\"\nimport { mode } from \"@yamada-ui/core\"\nimport {\n  getMemoizedObject as get,\n  transparentizeColor,\n  isArray,\n  getColor,\n  isGray,\n  isAccessible,\n} from \"@yamada-ui/utils\"\n\nexport const Button: ComponentStyle = {\n  baseStyle: {\n    cursor: \"pointer\",\n    rounded: \"md\",\n    fontWeight: \"semibold\",\n    transitionProperty: \"common\",\n    transitionDuration: \"slower\",\n    _focus: {\n      outline: \"none\",\n    },\n    _disabled: {\n      opacity: 0.4,\n      cursor: \"not-allowed\",\n      boxShadow: \"none\",\n    },\n    _readOnly: {\n      cursor: \"default\",\n      _ripple: {\n        display: \"none\",\n      },\n    },\n    _hover: {\n      _disabled: {\n        bg: [\"initial\", \"initial\"],\n      },\n    },\n  },\n\n  variants: {\n    solid: ({\n      theme: t,\n      colorMode: m,\n      colorScheme: c = \"gray\",\n      errorBorderColor: ec = [\"danger.500\", \"danger.400\"],\n    }) => {\n      const errorBorderColor = isArray(ec)\n        ? mode(getColor(ec[0], ec[0])(t, m), getColor(ec[1], ec[1])(t, m))(m)\n        : getColor(ec, ec)(t, m)\n\n      return {\n        bg: isGray(c)\n          ? [`${c}.50`, `${c}.700`]\n          : [isAccessible(c) ? `${c}.400` : `${c}.500`, `${c}.600`],\n        color: [isGray(c) || isAccessible(c) ? `black` : `white`, `white`],\n        _hover: {\n          bg: isGray(c)\n            ? [`${c}.100`, `${c}.800`]\n            : [isAccessible(c) ? `${c}.500` : `${c}.600`, `${c}.700`],\n          _disabled: {\n            bg: isGray(c)\n              ? [`${c}.50`, `${c}.700`]\n              : [isAccessible(c) ? `${c}.400` : `${c}.500`, `${c}.600`],\n          },\n        },\n        _invalid: {\n          border: \"1px solid\",\n          borderColor: errorBorderColor,\n          boxShadow: `0 0 0 1px ${errorBorderColor}`,\n        },\n        _focusVisible: {\n          borderColor: \"transparent\",\n          boxShadow: \"outline\",\n        },\n      }\n    },\n    outline: ({\n      theme: t,\n      colorMode: m,\n      colorScheme: c = \"gray\",\n      errorBorderColor: ec = [\"danger.500\", \"danger.400\"],\n    }) => {\n      const errorBorderColor = isArray(ec)\n        ? mode(getColor(ec[0], ec[0])(t, m), getColor(ec[1], ec[1])(t, m))(m)\n        : getColor(ec, ec)(t, m)\n\n      return {\n        border: \"1px solid\",\n        borderColor: [`${c}.600`, `${c}.500`],\n        color: isGray(c)\n          ? [\"blackAlpha.800\", \"whiteAlpha.700\"]\n          : [`${c}.600`, `${c}.500`],\n        bg: \"transparent\",\n        _hover: {\n          bg: [`${c}.50`, transparentizeColor(`${c}.600`, 0.12)(t, m)],\n        },\n        _invalid: {\n          borderColor: [errorBorderColor, errorBorderColor],\n          boxShadow: `0 0 0 1px ${errorBorderColor}`,\n        },\n        _focusVisible: {\n          boxShadow: \"outline\",\n          _invalid: {\n            borderColor: \"transparent\",\n          },\n        },\n      }\n    },\n    link: ({ colorScheme: c = \"gray\" }) => ({\n      padding: 0,\n      height: \"auto\",\n      lineHeight: \"normal\",\n      verticalAlign: \"baseline\",\n      color: [`${c}.600`, `${c}.500`],\n      _hover: {\n        textDecoration: \"underline\",\n        _disabled: {\n          textDecoration: \"none\",\n        },\n      },\n      _active: {\n        color: [`${c}.700`, `${c}.600`],\n        _disabled: {\n          color: [`${c}.600`, `${c}.500`],\n        },\n      },\n      _focusVisible: {\n        boxShadow: \"outline\",\n      },\n      _ripple: {\n        display: \"none\",\n      },\n    }),\n    ghost: ({\n      theme: t,\n      colorMode: m,\n      colorScheme: c = \"gray\",\n      errorBorderColor: ec = [\"danger.500\", \"danger.400\"],\n    }) => {\n      const errorBorderColor = isArray(ec)\n        ? mode(getColor(ec[0], ec[0])(t, m), getColor(ec[1], ec[1])(t, m))(m)\n        : getColor(ec, ec)(t, m)\n\n      return {\n        color: isGray(c)\n          ? [\"blackAlpha.800\", \"whiteAlpha.700\"]\n          : [`${c}.600`, `${c}.500`],\n        bg: \"transparent\",\n        _hover: {\n          bg: [`${c}.50`, transparentizeColor(`${c}.600`, 0.12)(t, m)],\n        },\n        _invalid: {\n          border: \"1px solid\",\n          borderColor: errorBorderColor,\n          boxShadow: `0 0 0 1px ${errorBorderColor}`,\n        },\n        _focusVisible: {\n          borderColor: \"transparent\",\n          boxShadow: \"outline\",\n        },\n      }\n    },\n    unstyled: {\n      bg: \"none\",\n      color: \"inherit\",\n      display: \"inline\",\n      lineHeight: \"inherit\",\n      m: 0,\n      p: 0,\n      _ripple: {\n        display: \"none\",\n      },\n    },\n  },\n\n  sizes: {\n    xs: ({ theme: t }) => ({\n      h: 6,\n      minW: 6,\n      fontSize: \"xs\",\n      lineHeight: get(t, \"sizes.6\"),\n      px: 2,\n    }),\n    sm: ({ theme: t }) => ({\n      h: 8,\n      minW: 8,\n      fontSize: \"sm\",\n      lineHeight: get(t, \"sizes.8\"),\n      px: 3,\n    }),\n    md: ({ theme: t }) => ({\n      h: 10,\n      minW: 10,\n      fontSize: \"md\",\n      lineHeight: get(t, \"sizes.10\"),\n      px: 4,\n    }),\n    lg: ({ theme: t }) => ({\n      h: 12,\n      minW: 12,\n      fontSize: \"lg\",\n      lineHeight: get(t, \"sizes.12\"),\n      px: 6,\n    }),\n  },\n\n  defaultProps: {\n    variant: \"solid\",\n    size: \"md\",\n    colorScheme: \"gray\",\n  },\n}\n"],"mappings":"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","names":["get"]}
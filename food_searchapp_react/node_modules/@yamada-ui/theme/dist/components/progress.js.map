{"version":3,"sources":["../../src/components/progress.ts"],"sourcesContent":["import type { ComponentMultiStyle } from \"@yamada-ui/core\"\nimport { mode } from \"@yamada-ui/core\"\nimport { getColor, isArray } from \"@yamada-ui/utils\"\n\nexport const Progress: ComponentMultiStyle = {\n  baseStyle: {\n    track: {\n      bg: \"border\",\n    },\n    filledTrack: ({\n      theme: t,\n      colorMode: m,\n      colorScheme: c = \"primary\",\n      hasStripe,\n      isAnimation,\n      filledTrackColor: f,\n    }) => {\n      hasStripe = !isAnimation && hasStripe\n\n      const color = mode(\"rgba(255, 255, 255, 0.15)\", \"rgba(0,0,0,0.1)\")(m)\n\n      const bgColor = f\n        ? isArray(f)\n          ? mode(getColor(f[0], f[0])(t, m), getColor(f[1], f[1])(t, m))(m)\n          : getColor(f, f)(t, m)\n        : getColor(`${c}.500`)(t, m)\n\n      const bgImage = hasStripe\n        ? `linear-gradient(\n            45deg,\n            ${color} 25%,\n            transparent 25%,\n            transparent 50%,\n            ${color} 50%,\n            ${color} 75%,\n            transparent 75%,\n            transparent\n          )`\n        : isAnimation\n          ? `linear-gradient(\n            to right,\n            transparent 0%,\n            ${bgColor} 50%,\n            transparent 100%\n          )`\n          : undefined\n\n      return {\n        transitionProperty: \"common\",\n        transitionDuration: \"slow\",\n        bgImage,\n        ...(hasStripe ? { bgSize: \"1rem 1rem\" } : {}),\n        ...(!isAnimation ? { bgColor } : {}),\n      }\n    },\n  },\n\n  sizes: {\n    xs: {\n      track: {\n        h: \"1\",\n      },\n    },\n    sm: {\n      track: {\n        h: \"2\",\n      },\n    },\n    md: {\n      track: {\n        h: \"3\",\n      },\n    },\n    lg: {\n      track: {\n        h: \"4\",\n      },\n    },\n  },\n\n  defaultProps: {\n    size: \"md\",\n    colorScheme: \"primary\",\n  },\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBAAqB;AACrB,mBAAkC;AAE3B,IAAM,WAAgC;AAAA,EAC3C,WAAW;AAAA,IACT,OAAO;AAAA,MACL,IAAI;AAAA,IACN;AAAA,IACA,aAAa,CAAC;AAAA,MACZ,OAAO;AAAA,MACP,WAAW;AAAA,MACX,aAAa,IAAI;AAAA,MACjB;AAAA,MACA;AAAA,MACA,kBAAkB;AAAA,IACpB,MAAM;AACJ,kBAAY,CAAC,eAAe;AAE5B,YAAM,YAAQ,kBAAK,6BAA6B,iBAAiB,EAAE,CAAC;AAEpE,YAAM,UAAU,QACZ,sBAAQ,CAAC,QACP,sBAAK,uBAAS,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,OAAG,uBAAS,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,QAC9D,uBAAS,GAAG,CAAC,EAAE,GAAG,CAAC,QACrB,uBAAS,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC;AAE7B,YAAM,UAAU,YACZ;AAAA;AAAA,cAEI,KAAK;AAAA;AAAA;AAAA,cAGL,KAAK;AAAA,cACL,KAAK;AAAA;AAAA;AAAA,eAIT,cACE;AAAA;AAAA;AAAA,cAGE,OAAO;AAAA;AAAA,eAGT;AAEN,aAAO;AAAA,QACL,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB;AAAA,QACA,GAAI,YAAY,EAAE,QAAQ,YAAY,IAAI,CAAC;AAAA,QAC3C,GAAI,CAAC,cAAc,EAAE,QAAQ,IAAI,CAAC;AAAA,MACpC;AAAA,IACF;AAAA,EACF;AAAA,EAEA,OAAO;AAAA,IACL,IAAI;AAAA,MACF,OAAO;AAAA,QACL,GAAG;AAAA,MACL;AAAA,IACF;AAAA,IACA,IAAI;AAAA,MACF,OAAO;AAAA,QACL,GAAG;AAAA,MACL;AAAA,IACF;AAAA,IACA,IAAI;AAAA,MACF,OAAO;AAAA,QACL,GAAG;AAAA,MACL;AAAA,IACF;AAAA,IACA,IAAI;AAAA,MACF,OAAO;AAAA,QACL,GAAG;AAAA,MACL;AAAA,IACF;AAAA,EACF;AAAA,EAEA,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,aAAa;AAAA,EACf;AACF;","names":[]}
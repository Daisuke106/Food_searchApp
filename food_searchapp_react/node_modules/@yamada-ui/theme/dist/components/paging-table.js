"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/components/paging-table.ts
var paging_table_exports = {};
__export(paging_table_exports, {
  PagingTable: () => PagingTable
});
module.exports = __toCommonJS(paging_table_exports);
var import_core2 = require("@yamada-ui/core");

// src/components/table.ts
var import_core = require("@yamada-ui/core");

// src/components/native-table.ts
var import_utils = require("@yamada-ui/utils");
var NativeTable = {
  baseStyle: {
    container: {
      w: "100%"
    },
    table: {
      h: "100%",
      w: "100%",
      fontVariantNumeric: "lining-nums tabular-nums",
      borderCollapse: "collapse"
    },
    tr: {
      _disabled: {
        cursor: "not-allowed",
        opacity: 0.4,
        _hover: {
          bg: ["initial", "initial"]
        }
      }
    },
    th: {
      fontFamily: "heading",
      fontWeight: "semibold",
      textAlign: "start",
      color: ["blackAlpha.700", "whiteAlpha.600"],
      textTransform: "uppercase",
      letterSpacing: "wider"
    },
    td: {
      textAlign: "start"
    },
    caption: {
      fontFamily: "heading",
      fontWeight: "medium",
      textAlign: "center",
      color: ["blackAlpha.700", "whiteAlpha.600"]
    }
  },
  variants: {
    simple: ({
      theme: t,
      colorMode: m,
      colorScheme: c = "gray",
      withBorder,
      withColumnBorders,
      highlightOnSelected,
      highlightOnHover
    }) => ({
      table: {
        ...withBorder ? { borderWidth: "1px" } : {}
      },
      th: {
        borderBottomWidth: "1px",
        "&[data-is-numeric=true]": {
          textAlign: "end"
        },
        ...withColumnBorders ? { _notLast: { borderRightWidth: "1px" } } : {}
      },
      td: {
        borderBottomWidth: "1px",
        "&[data-is-numeric=true]": {
          textAlign: "end"
        },
        ...withColumnBorders ? { _notLast: { borderRightWidth: "1px" } } : {}
      },
      tbody: {
        tr: {
          ...highlightOnSelected ? {
            _selected: {
              bg: [
                (0, import_utils.isGray)(c) ? (0, import_utils.tintColor)(`${c}.50`, 72)(t, m) : (0, import_utils.tintColor)(`${c}.50`, 64)(t, m),
                (0, import_utils.transparentizeColor)(`${c}.300`, 0.04)(t, m)
              ]
            }
          } : {},
          ...highlightOnHover ? {
            cursor: "pointer",
            transitionProperty: "common",
            transitionDuration: "slow",
            _hover: {
              bg: [
                (0, import_utils.transparentizeColor)(`${c}.400`, 0.08)(t, m),
                (0, import_utils.transparentizeColor)(`${c}.300`, 0.12)(t, m)
              ]
            }
          } : {}
        }
      },
      tfoot: {
        tr: {
          _last: {
            th: { borderBottomWidth: 0 }
          }
        }
      }
    }),
    striped: ({
      theme: t,
      colorMode: m,
      colorScheme: c = "gray",
      withBorder,
      withColumnBorders,
      highlightOnHover
    }) => ({
      table: {
        ...withBorder ? { borderWidth: "1px" } : {}
      },
      th: {
        borderBottomWidth: "1px",
        "&[data-is-numeric=true]": {
          textAlign: "end"
        },
        ...withColumnBorders ? { _notLast: { borderRightWidth: "1px" } } : {}
      },
      td: {
        borderBottomWidth: "1px",
        "&[data-is-numeric=true]": {
          textAlign: "end"
        },
        ...withColumnBorders ? { _notLast: { borderRightWidth: "1px" } } : {}
      },
      tbody: {
        tr: {
          _odd: {
            bg: [
              (0, import_utils.isGray)(c) ? (0, import_utils.tintColor)(`${c}.50`, 72)(t, m) : (0, import_utils.tintColor)(`${c}.50`, 64)(t, m),
              (0, import_utils.transparentizeColor)(`${c}.300`, 0.04)(t, m)
            ]
          },
          ...highlightOnHover ? {
            cursor: "pointer",
            transitionProperty: "common",
            transitionDuration: "slow",
            _hover: {
              bg: [
                (0, import_utils.transparentizeColor)(`${c}.400`, 0.08)(t, m),
                (0, import_utils.transparentizeColor)(`${c}.300`, 0.12)(t, m)
              ]
            }
          } : {}
        }
      },
      tfoot: {
        tr: {
          _last: {
            th: { borderBottomWidth: 0 }
          }
        }
      }
    }),
    unstyled: {}
  },
  sizes: {
    sm: {
      container: {
        gap: 2
      },
      th: {
        px: 2,
        py: 1,
        fontSize: "xs",
        lineHeight: 5
      },
      td: {
        px: 2,
        py: 1,
        fontSize: "xs",
        lineHeight: 5
      },
      caption: {
        mt: 1,
        px: 2,
        py: 1,
        fontSize: "xs"
      }
    },
    md: {
      container: {
        gap: 4
      },
      th: {
        px: 3,
        py: 2,
        fontSize: "sm",
        lineHeight: 5
      },
      td: {
        px: 3,
        py: 2,
        fontSize: "sm",
        lineHeight: 5
      },
      caption: {
        mt: 2,
        px: 3,
        py: 2,
        fontSize: "sm"
      }
    },
    lg: {
      container: {
        gap: 6
      },
      th: {
        px: 4,
        py: 3,
        lineHeight: 6
      },
      td: {
        px: 4,
        py: 3,
        lineHeight: 6
      },
      caption: {
        mt: 3,
        px: 4,
        py: 3
      }
    },
    xl: {
      container: {
        gap: 8
      },
      th: {
        px: 6,
        py: 4,
        fontSize: "lg",
        lineHeight: 6
      },
      td: {
        px: 6,
        py: 4,
        fontSize: "lg",
        lineHeight: 6
      },
      caption: {
        mt: 4,
        px: 6,
        py: 4,
        fontSize: "lg"
      }
    }
  },
  defaultProps: {
    variant: "simple",
    size: "md",
    colorScheme: "gray"
  }
};

// src/components/table.ts
var Table = (0, import_core.mergeMultiStyle)(NativeTable, {
  baseStyle: {
    sortIcon: {}
  },
  sizes: {
    sm: {
      sortIcon: {
        right: 2
      }
    },
    md: {
      sortIcon: {
        right: 3
      }
    },
    lg: {
      sortIcon: {
        right: 4
      }
    },
    xl: {
      sortIcon: {
        right: 6
      }
    }
  }
})();

// src/components/paging-table.ts
var PagingTable = (0, import_core2.mergeMultiStyle)(Table, {
  baseStyle: {
    pagingControl: {
      gridTemplateColumns: "1fr 5fr 1fr"
    }
  },
  sizes: {
    sm: {
      pagingControl: {
        gap: 2
      }
    },
    md: {
      pagingControl: {
        gap: 4
      }
    },
    lg: {
      pagingControl: {
        gap: 6
      }
    },
    xl: {
      pagingControl: {
        gap: 8
      }
    }
  }
})();
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  PagingTable
});
//# sourceMappingURL=paging-table.js.map
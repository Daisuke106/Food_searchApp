{"version":3,"sources":["../src/components/toggle.ts"],"sourcesContent":["import type { ComponentStyle } from \"@yamada-ui/core\"\nimport {\n  getMemoizedObject as get,\n  isAccessible,\n  isGray,\n  shadeColor,\n  transparentizeColor,\n} from \"@yamada-ui/utils\"\n\nexport const Toggle: ComponentStyle = {\n  baseStyle: {\n    cursor: \"pointer\",\n    rounded: \"md\",\n    transitionProperty: \"common\",\n    transitionDuration: \"slower\",\n    _disabled: {\n      opacity: 0.4,\n      cursor: \"not-allowed\",\n      boxShadow: \"none\",\n    },\n    _readOnly: {\n      cursor: \"default\",\n      _ripple: {\n        display: \"none\",\n      },\n    },\n  },\n\n  variants: {\n    subtle: ({ theme: t, colorMode: m, colorScheme: c = \"gray\" }) => {\n      return {\n        _hover: {\n          bg: [\n            isGray(c) ? `blackAlpha.200` : `${c}.50`,\n            transparentizeColor(`${c}.500`, 0.12)(t, m),\n          ],\n        },\n        _selected: {\n          bg: [\n            isGray(c) ? `${c}.50` : `${c}.100`,\n            shadeColor(`${c}.300`, 72)(t, m),\n          ],\n        },\n        _focusVisible: {\n          borderColor: \"transparent\",\n          boxShadow: \"outline\",\n        },\n      }\n    },\n    solid: ({ theme: t, colorMode: m, colorScheme: c = \"gray\" }) => {\n      return {\n        _hover: {\n          bg: [\n            isGray(c) ? `blackAlpha.200` : `${c}.100`,\n            shadeColor(`${c}.300`, 72)(t, m),\n          ],\n        },\n        _selected: {\n          bg: isGray(c)\n            ? [`${c}.100`, `${c}.700`]\n            : [isAccessible(c) ? `${c}.400` : `${c}.500`, `${c}.600`],\n          color: [isGray(c) || isAccessible(c) ? `black` : `white`, `white`],\n        },\n        _focusVisible: {\n          borderColor: \"transparent\",\n          boxShadow: \"outline\",\n        },\n      }\n    },\n    outline: ({ theme: t, colorMode: m, colorScheme: c = \"gray\" }) => {\n      return {\n        border: \"1px solid\",\n        borderColor: \"border\",\n        _hover: {\n          bg: [\n            isGray(c) ? `blackAlpha.200` : `${c}.50`,\n            transparentizeColor(`${c}.500`, 0.12)(t, m),\n          ],\n        },\n        _selected: {\n          bg: [\n            isGray(c) ? `${c}.50` : `${c}.100`,\n            shadeColor(`${c}.300`, 72)(t, m),\n          ],\n          borderColor: [\n            isGray(c) ? `${c}.50` : `${c}.100`,\n            shadeColor(`${c}.300`, 72)(t, m),\n          ],\n        },\n        _focusVisible: {\n          boxShadow: \"outline\",\n          _invalid: {\n            borderColor: \"transparent\",\n          },\n        },\n      }\n    },\n    unstyled: {\n      bg: \"none\",\n      color: \"inherit\",\n      display: \"inline\",\n      lineHeight: \"inherit\",\n      m: 0,\n      p: 0,\n      _ripple: {\n        display: \"none\",\n      },\n    },\n  },\n\n  sizes: {\n    xs: ({ theme: t }) => ({\n      minBoxSize: 6,\n      fontSize: \"xs\",\n      lineHeight: get(t, \"sizes.6\"),\n    }),\n    sm: ({ theme: t }) => ({\n      minBoxSize: 8,\n      fontSize: \"sm\",\n      lineHeight: get(t, \"sizes.8\"),\n    }),\n    md: ({ theme: t }) => ({\n      minBoxSize: 10,\n      fontSize: \"md\",\n      lineHeight: get(t, \"sizes.10\"),\n    }),\n    lg: ({ theme: t }) => ({\n      minBoxSize: 12,\n      fontSize: \"lg\",\n      lineHeight: get(t, \"sizes.12\"),\n    }),\n  },\n\n  defaultProps: {\n    variant: \"subtle\",\n    size: \"md\",\n    colorScheme: \"gray\",\n  },\n}\n"],"mappings":"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","names":[]}
{"version":3,"sources":["../src/components/tabs.ts"],"sourcesContent":["import type { ComponentMultiStyle } from \"@yamada-ui/core\"\nimport { mode } from \"@yamada-ui/core\"\nimport { getColor, isGray, shadeColor, tintColor } from \"@yamada-ui/utils\"\n\nexport const Tabs: ComponentMultiStyle = {\n  baseStyle: {\n    container: ({ orientation }) => ({\n      display: \"flex\",\n      flexDirection: orientation === \"vertical\" ? \"row\" : \"column\",\n    }),\n    tabList: ({ align, orientation }) => ({\n      flexDirection: orientation === \"vertical\" ? \"column\" : \"row\",\n      justifyContent: align === \"center\" ? align : `flex-${align}`,\n    }),\n    tab: ({ isFitted }) => ({\n      flex: isFitted ? 1 : undefined,\n      whiteSpace: \"nowrap\",\n      transitionProperty: \"common\",\n      transitionDuration: \"normal\",\n      _hover: { opacity: 0.7 },\n      _focusVisible: {\n        zIndex: \"yamcha\",\n        boxShadow: \"outline\",\n      },\n      _selected: { _hover: { opacity: 1 } },\n      _disabled: {\n        cursor: \"not-allowed\",\n        opacity: 0.4,\n      },\n    }),\n    tabPanels: {},\n    tabPanel: {\n      p: \"md\",\n    },\n  },\n\n  variants: {\n    line: ({ colorScheme: c = \"primary\", orientation }) => {\n      const isVertical = orientation === \"vertical\"\n\n      return {\n        tabList: {\n          borderColor: \"inherit\",\n          ...(isVertical\n            ? { borderEndWidth: \"1px\" }\n            : { borderBottomWidth: \"1px\" }),\n        },\n        tab: {\n          borderColor: \"transparent\",\n          _selected: {\n            color: [`${c}.500`, isGray(c) ? `${c}.100` : `${c}.400`],\n            borderColor: \"currentColor\",\n          },\n          ...(isVertical\n            ? {\n                borderEndWidth: \"1px\",\n                borderEndStyle: \"solid\",\n                me: \"-1px\",\n              }\n            : {\n                borderBottomWidth: \"1px\",\n                borderBottomStyle: \"solid\",\n                mb: \"-1px\",\n              }),\n          _ripple: { display: \"none\" },\n        },\n      }\n    },\n    sticky: ({ colorScheme: c = \"primary\", orientation }) => {\n      const isVertical = orientation === \"vertical\"\n\n      return {\n        tabList: {\n          borderColor: \"inherit\",\n          ...(isVertical\n            ? { borderEndWidth: \"1px\" }\n            : { borderBottomWidth: \"1px\" }),\n        },\n        tab: {\n          borderColor: \"transparent\",\n          _selected: {\n            color: [`${c}.500`, isGray(c) ? `${c}.100` : `${c}.400`],\n            borderColor: \"inherit\",\n            ...(isVertical\n              ? { borderEndColor: [\"white\", \"black\"] }\n              : { borderBottomColor: [\"white\", \"black\"] }),\n          },\n          ...(isVertical\n            ? {\n                roundedLeft: \"md\",\n                borderWidth: \"1px\",\n                borderStyle: \"solid\",\n                me: \"-2px\",\n              }\n            : {\n                roundedTop: \"md\",\n                borderWidth: \"1px\",\n                borderStyle: \"solid\",\n                mb: \"-2px\",\n              }),\n          _ripple: { display: \"none\" },\n        },\n      }\n    },\n    \"sticky-subtle\": ({\n      theme: t,\n      colorMode: m,\n      colorScheme: c = \"primary\",\n      orientation,\n    }) => {\n      const isVertical = orientation === \"vertical\"\n\n      return {\n        tabList: {\n          borderColor: \"inherit\",\n          ...(isVertical\n            ? { borderEndWidth: \"1px\" }\n            : { borderBottomWidth: \"1px\" }),\n        },\n        tab: {\n          borderColor: \"inherit\",\n          _notLast: {\n            ...(isVertical ? { borderBottom: \"none\" } : { borderEnd: \"none\" }),\n          },\n          _selected: {\n            bg: [\n              isGray(c) ? `${c}.50` : `${c}.100`,\n              shadeColor(`${c}.300`, 58)(t, m),\n            ],\n            color: [`${c}.800`, isGray(c) ? `${c}.50` : `${c}.200`],\n          },\n          ...(isVertical\n            ? {\n                borderWidth: \"1px\",\n                borderStyle: \"solid\",\n                me: \"-1px\",\n              }\n            : {\n                borderWidth: \"1px\",\n                borderStyle: \"solid\",\n                mb: \"-1px\",\n              }),\n        },\n      }\n    },\n    \"sticky-solid\": ({\n      theme: t,\n      colorMode: m,\n      colorScheme: c = \"primary\",\n      orientation,\n    }) => {\n      const isVertical = orientation === \"vertical\"\n\n      return {\n        tabList: {\n          borderColor: \"inherit\",\n          ...(isVertical\n            ? { borderEndWidth: \"1px\" }\n            : { borderBottomWidth: \"1px\" }),\n        },\n        tab: {\n          borderColor: \"inherit\",\n          _notLast: {\n            ...(isVertical ? { borderBottom: \"none\" } : { borderEnd: \"none\" }),\n          },\n          _selected: {\n            bg: [\n              tintColor(`${c}.600`, 24)(t, m),\n              shadeColor(`${c}.600`, 16)(t, m),\n            ],\n            color: `white`,\n          },\n          ...(isVertical\n            ? {\n                borderWidth: \"1px\",\n                borderStyle: \"solid\",\n                me: \"-1px\",\n              }\n            : {\n                borderWidth: \"1px\",\n                borderStyle: \"solid\",\n                mb: \"-1px\",\n              }),\n        },\n      }\n    },\n    rounded: ({ theme: t, colorMode: m, colorScheme: c = \"primary\" }) => {\n      const color = mode(\n        getColor(`${c}.500`)(t, m),\n        getColor(isGray(c) ? `${c}.100` : `${c}.400`)(t, m),\n      )(m)\n\n      return {\n        tabList: { gap: \"sm\" },\n        tab: {\n          borderRadius: \"full\",\n          _selected: {\n            color,\n            boxShadow: `inset 0 0 0px 1px ${color}`,\n          },\n        },\n      }\n    },\n    \"rounded-subtle\": ({\n      theme: t,\n      colorMode: m,\n      colorScheme: c = \"primary\",\n    }) => ({\n      tabList: { gap: \"sm\" },\n      tab: {\n        borderRadius: \"full\",\n        _selected: {\n          bg: [\n            isGray(c) ? `${c}.50` : `${c}.100`,\n            shadeColor(`${c}.300`, 58)(t, m),\n          ],\n          color: [`${c}.800`, isGray(c) ? `${c}.50` : `${c}.200`],\n        },\n      },\n    }),\n    \"rounded-solid\": ({\n      theme: t,\n      colorMode: m,\n      colorScheme: c = \"primary\",\n    }) => ({\n      tabList: { gap: \"sm\" },\n      tab: {\n        borderRadius: \"full\",\n        _selected: {\n          bg: [\n            tintColor(`${c}.600`, 24)(t, m),\n            shadeColor(`${c}.600`, 16)(t, m),\n          ],\n          color: `white`,\n        },\n      },\n    }),\n    unstyled: {\n      tab: {\n        _hover: { opacity: \"inherit\" },\n        _ripple: { display: \"none\" },\n      },\n    },\n  },\n\n  sizes: {\n    sm: {\n      tab: {\n        py: 1,\n        px: 3,\n        fontSize: \"sm\",\n      },\n    },\n    md: {\n      tab: {\n        fontSize: \"md\",\n        py: 2,\n        px: 4,\n      },\n    },\n    lg: {\n      tab: {\n        fontSize: \"lg\",\n        py: 3,\n        px: 5,\n      },\n    },\n  },\n\n  defaultProps: {\n    size: \"md\",\n    variant: \"line\",\n    colorScheme: \"primary\",\n  },\n}\n"],"mappings":"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","names":[]}
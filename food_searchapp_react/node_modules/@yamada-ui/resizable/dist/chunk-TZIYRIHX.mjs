"use client"
import {
  useResizableContext,
  useResizableItem
} from "./chunk-KP2DL4SB.mjs";

// src/resizable-item.tsx
import { ui, forwardRef } from "@yamada-ui/core";
import { cx } from "@yamada-ui/utils";
import { Panel } from "react-resizable-panels";
import { jsx } from "react/jsx-runtime";
var panelProps = /* @__PURE__ */ new Set(["order"]);
var UIPanel = ui(Panel, { disableStyleProp: (prop) => panelProps.has(prop) });
var ResizableItem = forwardRef(
  ({
    className,
    children,
    innerRef,
    w,
    width,
    minW,
    minWidth,
    maxW,
    maxWidth,
    h,
    height,
    minH,
    minHeight,
    maxH,
    maxHeight,
    boxSize,
    ...rest
  }, ref) => {
    const { styles } = useResizableContext();
    const { getPanelProps, getItemProps } = useResizableItem({
      ref,
      ...rest
    });
    const css = { boxSize: "100%", ...styles.item };
    return /* @__PURE__ */ jsx(
      UIPanel,
      {
        ...getPanelProps({
          w,
          width,
          minW,
          minWidth,
          maxW,
          maxWidth,
          h,
          height,
          minH,
          minHeight,
          maxH,
          maxHeight,
          boxSize
        }),
        children: /* @__PURE__ */ jsx(
          ui.div,
          {
            className: cx("ui-resizable__item", className),
            __css: css,
            ...getItemProps({}, innerRef),
            children
          }
        )
      }
    );
  }
);

export {
  ResizableItem
};
//# sourceMappingURL=chunk-TZIYRIHX.mjs.map
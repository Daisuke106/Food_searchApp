{"version":3,"sources":["../src/avatar-name.tsx","../src/avatar.tsx"],"sourcesContent":["import type { HTMLUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui } from \"@yamada-ui/core\"\nimport type { FC } from \"react\"\nimport type { AvatarProps } from \"./avatar\"\nimport { useAvatarContext } from \"./avatar\"\n\nconst defaultFormat = (name: string) => {\n  const names = name.trim().split(\" \")\n  const firstName = names[0] ?? \"\"\n  const lastName = names.length > 1 ? names[names.length - 1] : \"\"\n\n  return firstName && lastName\n    ? `${firstName.charAt(0)}${lastName.charAt(0)}`\n    : firstName.charAt(0)\n}\n\nexport type AvatarNameProps = HTMLUIProps<\"div\"> &\n  Pick<AvatarProps, \"name\" | \"format\">\n\nexport const AvatarName: FC<AvatarNameProps> = ({\n  name,\n  format = defaultFormat,\n  ...rest\n}) => {\n  const styles = useAvatarContext()\n\n  const css: CSSUIObject = { ...styles.name }\n\n  return (\n    <ui.div\n      className=\"ui-avatar__name\"\n      role=\"img\"\n      aria-label={name}\n      __css={css}\n      {...rest}\n    >\n      {name ? format(name) : null}\n    </ui.div>\n  )\n}\n","import type { CSSUIObject, HTMLUIProps, ThemeProps } from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport type { ImageProps, UseImageProps } from \"@yamada-ui/image\"\nimport { useImage } from \"@yamada-ui/image\"\nimport { createContext, cx, dataAttr, handlerAll } from \"@yamada-ui/utils\"\nimport type { FC, HTMLAttributeReferrerPolicy, ReactElement } from \"react\"\nimport { cloneElement, useState } from \"react\"\nimport { AvatarIcon } from \"./avatar-icon\"\nimport { AvatarName } from \"./avatar-name\"\n\ntype AvatarContext = Record<string, CSSUIObject>\n\nexport const [AvatarProvider, useAvatarContext] = createContext<AvatarContext>({\n  strict: false,\n  name: \"AvatarContext\",\n})\n\ntype AvatarOptions = {\n  /**\n   * The name of the person in the avatar.\n   *\n   * - If `src` has loaded, the name will be used as the `alt` attribute of the `img`\n   * - If `src` is not loaded, the name will be used to create the initials\n   */\n  name?: string\n  /**\n   * The image url of the avatar.\n   */\n  src?: ImageProps[\"src\"]\n  /**\n   * List of sources to use for different screen resolutions.\n   */\n  srcSet?: ImageProps[\"srcSet\"]\n  /**\n   * Defines loading strategy.\n   */\n  loading?: ImageProps[\"loading\"]\n  /**\n   * If `true`, opt out of the avatar's `fallback` logic and renders the `img` at all times.\n   *\n   * @default false\n   */\n  ignoreFallback?: ImageProps[\"ignoreFallback\"]\n  /**\n   * The avatar icon to use.\n   */\n  icon?: ReactElement\n  /**\n   * Function to get the initials to display.\n   */\n  format?: (name: string) => string\n  /**\n   * Defining which referrer is sent when fetching the resource.\n   */\n  referrerPolicy?: HTMLAttributeReferrerPolicy\n  /**\n   * The `HTMLImageElement` property `alt`.\n   */\n  alt?: HTMLUIProps<\"img\">[\"alt\"]\n}\n\nexport type AvatarProps = HTMLUIProps<\"span\"> &\n  ThemeProps<\"Avatar\"> &\n  AvatarOptions &\n  Pick<UseImageProps, \"onLoad\" | \"onError\" | \"crossOrigin\">\n\n/**\n * `Avatar` is a component that displays a profile picture or an icon with initials representing a user.\n *\n * @see Docs https://yamada-ui.com/components/media-and-icons/avatar\n */\nexport const Avatar = forwardRef<AvatarProps, \"span\">((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"Avatar\", props)\n  const {\n    className,\n    src,\n    srcSet,\n    name,\n    loading,\n    alt,\n    icon,\n    ignoreFallback,\n    referrerPolicy,\n    borderRadius = \"fallback(full, 9999px)\",\n    rounded = \"fallback(full, 9999px)\",\n    onError,\n    onLoad,\n    crossOrigin,\n    format,\n    children,\n    ...rest\n  } = omitThemeProps(mergedProps)\n\n  const [isLoaded, setIsLoaded] = useState<boolean>(false)\n\n  const css: CSSUIObject = {\n    position: \"relative\",\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexShrink: 0,\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    fontWeight: \"medium\",\n    ...styles.container,\n  }\n\n  return (\n    <AvatarProvider value={styles}>\n      <ui.span\n        ref={ref}\n        className={cx(\"ui-avatar\", className)}\n        data-loaded={dataAttr(isLoaded)}\n        borderRadius={borderRadius}\n        rounded={rounded}\n        __css={css}\n        {...rest}\n      >\n        <AvatarImage\n          src={src}\n          alt={alt}\n          srcSet={srcSet}\n          loading={loading}\n          borderRadius={borderRadius}\n          rounded={rounded}\n          onLoad={handlerAll(onLoad, () => setIsLoaded(true))}\n          onError={onError}\n          crossOrigin={crossOrigin}\n          format={format}\n          name={name}\n          icon={icon}\n          ignoreFallback={ignoreFallback}\n          referrerPolicy={referrerPolicy}\n        />\n        {children}\n      </ui.span>\n    </AvatarProvider>\n  )\n})\n\ntype AvatarImageProps = ImageProps &\n  Pick<AvatarProps, \"name\" | \"format\" | \"icon\" | \"ignoreFallback\">\n\nconst AvatarImage: FC<AvatarImageProps> = ({\n  src,\n  alt,\n  srcSet,\n  onError,\n  onLoad,\n  format,\n  borderRadius,\n  rounded,\n  name,\n  loading,\n  icon = <AvatarIcon />,\n  ignoreFallback,\n  crossOrigin,\n  referrerPolicy,\n}) => {\n  const status = useImage({ src, onLoad, onError, crossOrigin, ignoreFallback })\n\n  const isLoaded = status === \"loaded\"\n\n  const isFallback = !src || !isLoaded\n\n  if (isFallback)\n    return name ? (\n      <AvatarName name={name} format={format} />\n    ) : (\n      cloneElement(icon, { role: \"img\", \"aria-label\": alt ?? \"Avatar Icon\" })\n    )\n\n  const css: CSSUIObject = {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n  }\n\n  return (\n    <ui.img\n      className=\"ui-avatar__image\"\n      src={src}\n      srcSet={srcSet}\n      alt={alt ?? name}\n      loading={loading}\n      referrerPolicy={referrerPolicy}\n      borderRadius={borderRadius}\n      rounded={rounded}\n      __css={css}\n    />\n  )\n}\n"],"mappings":"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","names":["ui","jsx","ui"]}
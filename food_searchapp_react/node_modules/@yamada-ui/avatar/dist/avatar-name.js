"use client"
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/avatar-name.tsx
var avatar_name_exports = {};
__export(avatar_name_exports, {
  AvatarName: () => AvatarName
});
module.exports = __toCommonJS(avatar_name_exports);
var import_core2 = require("@yamada-ui/core");

// src/avatar.tsx
var import_core = require("@yamada-ui/core");
var import_image = require("@yamada-ui/image");
var import_utils = require("@yamada-ui/utils");
var import_react = require("react");

// src/avatar-icon.tsx
var import_icon = require("@yamada-ui/icon");
var import_jsx_runtime = require("react/jsx-runtime");
var AvatarIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(
  import_icon.Icon,
  {
    viewBox: "0 0 128 128",
    color: ["white", "black"],
    width: "100%",
    height: "100%",
    className: "ui-avatar__icon",
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
        "path",
        {
          fill: "currentColor",
          d: "M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z"
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
        "path",
        {
          fill: "currentColor",
          d: "M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24"
        }
      )
    ]
  }
);

// src/avatar.tsx
var import_jsx_runtime2 = require("react/jsx-runtime");
var [AvatarProvider, useAvatarContext] = (0, import_utils.createContext)({
  strict: false,
  name: "AvatarContext"
});
var Avatar = (0, import_core.forwardRef)((props, ref) => {
  const [styles, mergedProps] = (0, import_core.useMultiComponentStyle)("Avatar", props);
  const {
    className,
    src,
    srcSet,
    name,
    loading,
    alt,
    icon,
    ignoreFallback,
    referrerPolicy,
    borderRadius = "fallback(full, 9999px)",
    rounded = "fallback(full, 9999px)",
    onError,
    onLoad,
    crossOrigin,
    format,
    children,
    ...rest
  } = (0, import_core.omitThemeProps)(mergedProps);
  const [isLoaded, setIsLoaded] = (0, import_react.useState)(false);
  const css = {
    position: "relative",
    display: "inline-flex",
    justifyContent: "center",
    alignItems: "center",
    flexShrink: 0,
    textAlign: "center",
    textTransform: "uppercase",
    fontWeight: "medium",
    ...styles.container
  };
  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(AvatarProvider, { value: styles, children: /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)(
    import_core.ui.span,
    {
      ref,
      className: (0, import_utils.cx)("ui-avatar", className),
      "data-loaded": (0, import_utils.dataAttr)(isLoaded),
      borderRadius,
      rounded,
      __css: css,
      ...rest,
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
          AvatarImage,
          {
            src,
            alt,
            srcSet,
            loading,
            borderRadius,
            rounded,
            onLoad: (0, import_utils.handlerAll)(onLoad, () => setIsLoaded(true)),
            onError,
            crossOrigin,
            format,
            name,
            icon,
            ignoreFallback,
            referrerPolicy
          }
        ),
        children
      ]
    }
  ) });
});
var AvatarImage = ({
  src,
  alt,
  srcSet,
  onError,
  onLoad,
  format,
  borderRadius,
  rounded,
  name,
  loading,
  icon = /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(AvatarIcon, {}),
  ignoreFallback,
  crossOrigin,
  referrerPolicy
}) => {
  const status = (0, import_image.useImage)({ src, onLoad, onError, crossOrigin, ignoreFallback });
  const isLoaded = status === "loaded";
  const isFallback = !src || !isLoaded;
  if (isFallback)
    return name ? /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(AvatarName, { name, format }) : (0, import_react.cloneElement)(icon, { role: "img", "aria-label": alt != null ? alt : "Avatar Icon" });
  const css = {
    width: "100%",
    height: "100%",
    objectFit: "cover"
  };
  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
    import_core.ui.img,
    {
      className: "ui-avatar__image",
      src,
      srcSet,
      alt: alt != null ? alt : name,
      loading,
      referrerPolicy,
      borderRadius,
      rounded,
      __css: css
    }
  );
};

// src/avatar-name.tsx
var import_jsx_runtime3 = require("react/jsx-runtime");
var defaultFormat = (name) => {
  var _a;
  const names = name.trim().split(" ");
  const firstName = (_a = names[0]) != null ? _a : "";
  const lastName = names.length > 1 ? names[names.length - 1] : "";
  return firstName && lastName ? `${firstName.charAt(0)}${lastName.charAt(0)}` : firstName.charAt(0);
};
var AvatarName = ({
  name,
  format = defaultFormat,
  ...rest
}) => {
  const styles = useAvatarContext();
  const css = { ...styles.name };
  return /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
    import_core2.ui.div,
    {
      className: "ui-avatar__name",
      role: "img",
      "aria-label": name,
      __css: css,
      ...rest,
      children: name ? format(name) : null
    }
  );
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  AvatarName
});
//# sourceMappingURL=avatar-name.js.map
import { HTMLUIProps, UIPropGetter, CSSUIProps } from '@yamada-ui/core';
import { FormControlOptions } from '@yamada-ui/form-control';

type UseColorSliderOptions = {
    /**
     * The base `id` to use for the slider.
     */
    id?: string;
    /**
     * The name attribute of the hidden `input` field.
     * This is particularly useful in forms.
     */
    name?: string;
    /**
     * The value of the slider.
     */
    value?: number;
    /**
     * The initial value of the slider.
     */
    defaultValue?: number;
    /**
     * The minimum allowed value of the slider. Cannot be greater than max.
     */
    min: number;
    /**
     * The maximum allowed value of the slider. Cannot be less than min.
     */
    max: number;
    /**
     * The step in which increments or decrements have to be made.
     *
     * @default 1
     */
    step?: number;
    /**
     * Function called whenever the slider value changes.
     */
    onChange?: (value: number) => void;
    /**
     * Function called when the user starts selecting a new value.
     */
    onChangeStart?: (value: number) => void;
    /**
     * Function called when the user is done selecting a new value.
     */
    onChangeEnd?: (value: number) => void;
    /**
     * If `false`, the slider handle will not capture focus when value changes.
     *
     * @default true
     */
    focusThumbOnChange?: boolean;
    /**
     * The CSS `background` property. Used in `background` of thumb element.
     */
    thumbColor?: CSSUIProps["bg"];
};
type UseColorSliderProps = Omit<HTMLUIProps<"div">, "defaultValue" | "onChange"> & UseColorSliderOptions & FormControlOptions;
declare const useColorSlider: ({ focusThumbOnChange, ...props }: UseColorSliderProps) => {
    value: number;
    getContainerProps: UIPropGetter;
    getTrackProps: UIPropGetter;
    getInputProps: UIPropGetter<"input">;
    getThumbProps: UIPropGetter;
};
type UseColorSliderReturn = ReturnType<typeof useColorSlider>;

export { type UseColorSliderProps, type UseColorSliderReturn, useColorSlider };

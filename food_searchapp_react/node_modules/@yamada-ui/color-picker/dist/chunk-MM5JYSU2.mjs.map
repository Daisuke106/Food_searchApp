{"version":3,"sources":["../src/color-picker.tsx"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps, ThemeProps } from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport { Popover, PopoverContent, PopoverTrigger } from \"@yamada-ui/popover\"\nimport { Portal, type PortalProps } from \"@yamada-ui/portal\"\nimport { cx, getValidChildren, isValidElement } from \"@yamada-ui/utils\"\nimport { cloneElement } from \"react\"\nimport type { ColorSelectorProps } from \"./color-selector\"\nimport { ColorSelector } from \"./color-selector\"\nimport { EyeDropperIcon } from \"./color-selector-eye-dropper\"\nimport type { ColorSwatchProps } from \"./color-swatch\"\nimport { ColorSwatch } from \"./color-swatch\"\nimport type { UseColorPickerProps } from \"./use-color-picker\"\nimport {\n  ColorPickerProvider,\n  useColorPicker,\n  useColorPickerContext,\n} from \"./use-color-picker\"\n\ntype ColorPickerOptions = {\n  /**\n   * If `true`, display the color swatch component.\n   *\n   * @default true\n   */\n  withSwatch?: boolean\n  /**\n   * If `true`, display the eye dropper component.\n   *\n   * @default true\n   */\n  withEyeDropper?: boolean\n  /**\n   * The border color when the input is focused.\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the input is invalid.\n   */\n  errorBorderColor?: string\n  /**\n   * Props for color picker container element.\n   */\n  containerProps?: Omit<HTMLUIProps<\"div\">, \"children\">\n  /**\n   * Props for color picker element.\n   */\n  inputProps?: HTMLUIProps<\"input\">\n  /**\n   * Props for color swatch component.\n   */\n  swatchProps?: ColorPickerSwatchProps\n  /**\n   * Props for color eye dropper component.\n   */\n  eyeDropperProps?: ColorPickerEyeDropperProps\n  /**\n   * Props to be forwarded to the portal component.\n   *\n   * @default '{ isDisabled: true }'\n   */\n  portalProps?: Omit<PortalProps, \"children\">\n}\n\nexport type ColorPickerProps = ThemeProps<\"ColorPicker\"> &\n  UseColorPickerProps &\n  ColorPickerOptions &\n  Pick<\n    ColorSelectorProps,\n    | \"saturationSliderRef\"\n    | \"saturationSliderProps\"\n    | \"swatchesProps\"\n    | \"hueSliderRef\"\n    | \"hueSliderProps\"\n    | \"alphaSliderRef\"\n    | \"alphaSliderProps\"\n    | \"channelsProps\"\n    | \"channelProps\"\n    | \"children\"\n  >\n\n/**\n * `ColorPicker` is a component used by the user to select a color or enter an arbitrary color value.\n *\n * @see Docs https://yamada-ui.com/components/forms/color-picker\n */\nexport const ColorPicker = forwardRef<ColorPickerProps, \"input\">(\n  ({ withSwatch = true, ...props }, ref) => {\n    const [styles, mergedProps] = useMultiComponentStyle(\"ColorPicker\", {\n      withSwatch,\n      ...props,\n    })\n    let {\n      className,\n      children,\n      withEyeDropper = true,\n      color,\n      h,\n      height,\n      minH,\n      minHeight,\n      containerProps,\n      inputProps,\n      swatchProps,\n      eyeDropperProps,\n      saturationSliderRef,\n      saturationSliderProps,\n      swatchesProps,\n      hueSliderRef,\n      hueSliderProps,\n      alphaSliderRef,\n      alphaSliderProps,\n      channelsProps,\n      channelProps,\n      portalProps = { isDisabled: true },\n      ...computedProps\n    } = omitThemeProps(mergedProps, [\"withSwatch\"])\n    const {\n      allowInput,\n      eyeDropperSupported,\n      getPopoverProps,\n      getContainerProps,\n      getFieldProps,\n      getSelectorProps,\n      getEyeDropperProps,\n      ...rest\n    } = useColorPicker(computedProps)\n\n    h ??= height\n    minH ??= minHeight\n\n    const css: CSSUIObject = {\n      w: \"100%\",\n      h: \"fit-content\",\n      color,\n      ...styles.container,\n    }\n\n    return (\n      <ColorPickerProvider value={{ styles, ...rest }}>\n        <Popover {...getPopoverProps()}>\n          <ui.div\n            className={cx(\"ui-color-picker\", className)}\n            __css={css}\n            {...getContainerProps(containerProps)}\n          >\n            <ui.div\n              className=\"ui-color-picker__inner\"\n              __css={{\n                position: \"relative\",\n                cursor: !allowInput ? \"pointer\" : undefined,\n                ...styles.inner,\n              }}\n            >\n              {withSwatch ? <ColorPickerSwatch {...swatchProps} /> : null}\n\n              <PopoverTrigger>\n                <ColorPickerField\n                  h={h}\n                  minH={minH}\n                  {...getFieldProps(inputProps, ref)}\n                />\n              </PopoverTrigger>\n\n              {eyeDropperSupported && withEyeDropper ? (\n                <ColorPickerEyeDropper\n                  {...getEyeDropperProps(eyeDropperProps)}\n                />\n              ) : null}\n            </ui.div>\n\n            <Portal {...portalProps}>\n              <PopoverContent\n                className=\"ui-color-picker__popover\"\n                __css={{ ...styles.list }}\n              >\n                <ColorSelector\n                  className=\"ui-color-picker__picker\"\n                  {...getSelectorProps({\n                    saturationSliderRef,\n                    saturationSliderProps,\n                    swatchesProps,\n                    hueSliderRef,\n                    hueSliderProps,\n                    alphaSliderRef,\n                    alphaSliderProps,\n                    channelsProps,\n                    channelProps,\n                  })}\n                >\n                  {children}\n                </ColorSelector>\n              </PopoverContent>\n            </Portal>\n          </ui.div>\n        </Popover>\n      </ColorPickerProvider>\n    )\n  },\n)\n\ntype ColorPickerFieldProps = HTMLUIProps<\"input\">\n\nconst ColorPickerField = forwardRef<ColorPickerFieldProps, \"input\">(\n  ({ className, h, minH, ...rest }, ref) => {\n    const { styles } = useColorPickerContext()\n\n    const css: CSSUIObject = {\n      ps: \"2rem\",\n      pe: \"2rem\",\n      h,\n      minH,\n      display: \"flex\",\n      alignItems: \"center\",\n      ...styles.field,\n    }\n\n    return (\n      <ui.input\n        ref={ref}\n        className={cx(\"ui-color-picker__field\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n\ntype ColorPickerSwatchProps = ColorSwatchProps\n\nconst ColorPickerSwatch = forwardRef<ColorPickerSwatchProps, \"div\">(\n  ({ className, ...rest }, ref) => {\n    const { value, styles } = useColorPickerContext()\n\n    const css: CSSUIObject = {\n      position: \"absolute\",\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      zIndex: 2,\n      ...styles.swatch,\n    }\n\n    return (\n      <ColorSwatch\n        ref={ref}\n        className={cx(\"ui-color-picker__swatch\", className)}\n        __css={css}\n        color={value}\n        isRounded\n        {...rest}\n      />\n    )\n  },\n)\n\ntype ColorPickerEyeDropperProps = HTMLUIProps<\"button\">\n\nconst ColorPickerEyeDropper = forwardRef<ColorPickerEyeDropperProps, \"button\">(\n  ({ className, children, ...rest }, ref) => {\n    const { styles } = useColorPickerContext()\n\n    const css: CSSUIObject = {\n      position: \"absolute\",\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      zIndex: 1,\n      ...styles.eyeDropper,\n    }\n\n    const validChildren = getValidChildren(children)\n\n    const cloneChildren = validChildren.map((child) =>\n      cloneElement(child, {\n        focusable: false,\n        \"aria-hidden\": true,\n        style: {\n          maxWidth: \"1em\",\n          maxHeight: \"1em\",\n          color: \"currentColor\",\n        },\n      }),\n    )\n\n    return (\n      <ui.button\n        ref={ref}\n        className={cx(\"ui-color-picker__eye-dropper\", className)}\n        __css={css}\n        {...rest}\n      >\n        {isValidElement(children) ? (\n          cloneChildren\n        ) : (\n          <EyeDropperIcon className=\"ui-color-picker__eye-dropper__icon\" />\n        )}\n      </ui.button>\n    )\n  },\n)\n"],"mappings":"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","names":[]}
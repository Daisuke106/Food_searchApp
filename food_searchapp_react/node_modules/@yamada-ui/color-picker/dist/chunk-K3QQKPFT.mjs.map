{"version":3,"sources":["../src/hue-slider.tsx"],"sourcesContent":["import {\n  ui,\n  forwardRef,\n  omitThemeProps,\n  useMultiComponentStyle,\n} from \"@yamada-ui/core\"\nimport type { CSSUIObject, HTMLUIProps, ThemeProps } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport type { UseColorSliderProps } from \"./use-color-slider\"\nimport { useColorSlider } from \"./use-color-slider\"\n\nconst defaultOverlays = (\n  min: number,\n  max: number,\n  withShadow: boolean,\n): HTMLUIProps<\"div\">[] => {\n  let overlays: HTMLUIProps<\"div\">[] = [\n    {\n      bgGradient: `linear(to-r, ${[...Array(7)]\n        .map(\n          (_, index) =>\n            `hsl(${Math.round(min + ((max - min) / 6) * index)}, 100%, 50%)`,\n        )\n        .join(\", \")})`,\n    },\n  ]\n\n  if (withShadow)\n    overlays = [\n      ...overlays,\n      {\n        boxShadow: `rgba(0, 0, 0, .1) 0 0 0 1px inset, rgb(0, 0, 0, .15) 0 0 4px inset`,\n      },\n    ]\n\n  return overlays\n}\n\ntype HueSliderOptions = {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   *\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   *\n   * @default 360\n   */\n  max?: number\n  /**\n   * The step in which increments or decrements have to be made.\n   *\n   * @default 1\n   */\n  step?: number\n  /**\n   * If `true`, the slider has an inner `box-shadow`.\n   *\n   * @default true\n   */\n  withShadow?: boolean\n  /**\n   * Props for slider input element.\n   */\n  inputProps?: HTMLUIProps<\"input\">\n  /**\n   * Props for slider track element.\n   */\n  trackProps?: HTMLUIProps<\"div\">\n  /**\n   * Props for slider thumb element.\n   */\n  thumbProps?: HTMLUIProps<\"div\">\n  /**\n   * The overlay used for the slider.\n   */\n  overlays?: HTMLUIProps<\"div\">[]\n}\n\n/**\n * `HueSlider` is a component used to allow the user to select a color hue.\n *\n * @see Docs https://yamada-ui.com/components/forms/hue-slider\n */\nexport type HueSliderProps = ThemeProps<\"HueSlider\"> &\n  Partial<UseColorSliderProps> &\n  HueSliderOptions\n\nexport const HueSlider = forwardRef<HueSliderProps, \"input\">((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"HueSlider\", props)\n  const {\n    className,\n    inputProps,\n    trackProps,\n    thumbProps,\n    min = 0,\n    max = 360,\n    withShadow = true,\n    overlays = defaultOverlays(min, max, withShadow),\n    __css,\n    ...computedProps\n  } = omitThemeProps(mergedProps)\n  const { getContainerProps, getTrackProps, getInputProps, getThumbProps } =\n    useColorSlider({ min, max, step: 1, ...computedProps })\n\n  const css: CSSUIObject = {\n    position: \"relative\",\n    ...styles.container,\n    ...__css,\n  }\n\n  return (\n    <ui.div\n      className={cx(\"ui-hue-slider\", className)}\n      __css={css}\n      {...getContainerProps()}\n    >\n      <ui.input {...getInputProps(inputProps, ref)} />\n\n      {overlays.map((props, index) => (\n        <ui.div\n          key={index}\n          className=\"ui-hue-slider__overlay\"\n          __css={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            ...styles.overlay,\n          }}\n          {...props}\n        />\n      ))}\n\n      <ui.div\n        className=\"ui-hue-slider__track\"\n        __css={{ position: \"relative\", w: \"100%\", h: \"100%\", ...styles.track }}\n        {...getTrackProps(trackProps)}\n      >\n        <ui.div\n          className=\"ui-hue-slider__thumb\"\n          __css={{ ...styles.thumb }}\n          {...getThumbProps(thumbProps)}\n        />\n      </ui.div>\n    </ui.div>\n  )\n})\n"],"mappings":";;;;;;AAAA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAEP,SAAS,UAAU;AA2Gf,SAKE,KALF;AAvGJ,IAAM,kBAAkB,CACtB,KACA,KACA,eACyB;AACzB,MAAI,WAAiC;AAAA,IACnC;AAAA,MACE,YAAY,gBAAgB,CAAC,GAAG,MAAM,CAAC,CAAC,EACrC;AAAA,QACC,CAAC,GAAG,UACF,OAAO,KAAK,MAAM,OAAQ,MAAM,OAAO,IAAK,KAAK,CAAC;AAAA,MACtD,EACC,KAAK,IAAI,CAAC;AAAA,IACf;AAAA,EACF;AAEA,MAAI;AACF,eAAW;AAAA,MACT,GAAG;AAAA,MACH;AAAA,QACE,WAAW;AAAA,MACb;AAAA,IACF;AAEF,SAAO;AACT;AAsDO,IAAM,YAAY,WAAoC,CAAC,OAAO,QAAQ;AAC3E,QAAM,CAAC,QAAQ,WAAW,IAAI,uBAAuB,aAAa,KAAK;AACvE,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,WAAW,gBAAgB,KAAK,KAAK,UAAU;AAAA,IAC/C;AAAA,IACA,GAAG;AAAA,EACL,IAAI,eAAe,WAAW;AAC9B,QAAM,EAAE,mBAAmB,eAAe,eAAe,cAAc,IACrE,eAAe,EAAE,KAAK,KAAK,MAAM,GAAG,GAAG,cAAc,CAAC;AAExD,QAAM,MAAmB;AAAA,IACvB,UAAU;AAAA,IACV,GAAG,OAAO;AAAA,IACV,GAAG;AAAA,EACL;AAEA,SACE;AAAA,IAAC,GAAG;AAAA,IAAH;AAAA,MACC,WAAW,GAAG,iBAAiB,SAAS;AAAA,MACxC,OAAO;AAAA,MACN,GAAG,kBAAkB;AAAA,MAEtB;AAAA,4BAAC,GAAG,OAAH,EAAU,GAAG,cAAc,YAAY,GAAG,GAAG;AAAA,QAE7C,SAAS,IAAI,CAACA,QAAO,UACpB;AAAA,UAAC,GAAG;AAAA,UAAH;AAAA,YAEC,WAAU;AAAA,YACV,OAAO;AAAA,cACL,UAAU;AAAA,cACV,KAAK;AAAA,cACL,MAAM;AAAA,cACN,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,GAAG,OAAO;AAAA,YACZ;AAAA,YACC,GAAGA;AAAA;AAAA,UAVC;AAAA,QAWP,CACD;AAAA,QAED;AAAA,UAAC,GAAG;AAAA,UAAH;AAAA,YACC,WAAU;AAAA,YACV,OAAO,EAAE,UAAU,YAAY,GAAG,QAAQ,GAAG,QAAQ,GAAG,OAAO,MAAM;AAAA,YACpE,GAAG,cAAc,UAAU;AAAA,YAE5B;AAAA,cAAC,GAAG;AAAA,cAAH;AAAA,gBACC,WAAU;AAAA,gBACV,OAAO,EAAE,GAAG,OAAO,MAAM;AAAA,gBACxB,GAAG,cAAc,UAAU;AAAA;AAAA,YAC9B;AAAA;AAAA,QACF;AAAA;AAAA;AAAA,EACF;AAEJ,CAAC;","names":["props"]}
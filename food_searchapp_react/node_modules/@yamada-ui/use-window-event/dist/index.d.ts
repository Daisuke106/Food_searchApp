type Handler<E extends string> = E extends keyof WindowEventMap ? (ev: WindowEventMap[E]) => void : (ev: CustomEvent) => void;
type Options = boolean | AddEventListenerOptions;
/**
 * `useWindowEvent` is a custom hook that assigns an event listener to `window`.
 *
 * @see Docs https://yamada-ui.com/hooks/use-window-event
 */
declare const useWindowEvent: <E extends string>(event: E, handler: Handler<E>, options?: Options) => void;

export { useWindowEvent };

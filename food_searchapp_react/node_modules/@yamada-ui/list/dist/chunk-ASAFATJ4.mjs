"use client"

// src/list.tsx
import {
  ui,
  forwardRef,
  useMultiComponentStyle,
  omitThemeProps
} from "@yamada-ui/core";
import { Icon } from "@yamada-ui/icon";
import { createContext, cx, getValidChildren } from "@yamada-ui/utils";
import { jsx } from "react/jsx-runtime";
var [ListProvider, useList] = createContext({
  name: `ListContext`,
  errorMessage: `useList returned is 'undefined'. Seems you forgot to wrap the components in "<List />" `
});
var List = forwardRef((props, ref) => {
  const [styles, mergedProps] = useMultiComponentStyle("List", props);
  const {
    className,
    children,
    styleType: listStyleType = "none",
    stylePosition: listStylePosition,
    gap = "fallback(2, 0.5rem)",
    ...rest
  } = omitThemeProps(mergedProps);
  const validChildren = getValidChildren(children);
  const css = {
    display: "flex",
    flexDirection: "column",
    gap,
    ms: listStyleType !== "none" ? "1.4em" : void 0,
    "& > li": { ps: listStyleType === "decimal" ? "0.3em" : void 0 },
    ...styles.container
  };
  return /* @__PURE__ */ jsx(ListProvider, { value: styles, children: /* @__PURE__ */ jsx(
    ui.ul,
    {
      ref,
      listStyleType,
      listStylePosition,
      role: "list",
      className: cx("ui-list", className),
      __css: css,
      ...rest,
      children: validChildren
    }
  ) });
});
var DiscList = forwardRef(({ ...rest }, ref) => {
  return /* @__PURE__ */ jsx(List, { ref, as: "ul", styleType: "disc", ...rest });
});
var DecimalList = forwardRef(({ ...rest }, ref) => {
  return /* @__PURE__ */ jsx(List, { ref, as: "ol", styleType: "decimal", ms: "1.2em", ...rest });
});
var ListItem = forwardRef(
  ({ className, ...rest }, ref) => {
    const styles = useList();
    const css = { ...styles.item };
    return /* @__PURE__ */ jsx(
      ui.li,
      {
        ref,
        className: cx("ui-list-item", className),
        __css: css,
        ...rest
      }
    );
  }
);
var ListIcon = forwardRef(
  ({ className, ...rest }, ref) => {
    const styles = useList();
    const css = { ...styles.icon };
    return /* @__PURE__ */ jsx(
      Icon,
      {
        ref,
        className: cx("ui-list-icon", className),
        role: "presentation",
        __css: css,
        ...rest
      }
    );
  }
);

export {
  List,
  DiscList,
  DecimalList,
  ListItem,
  ListIcon
};
//# sourceMappingURL=chunk-ASAFATJ4.mjs.map
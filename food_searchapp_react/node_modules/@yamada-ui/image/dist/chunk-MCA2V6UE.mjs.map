{"version":3,"sources":["../src/use-image.ts"],"sourcesContent":["import { useSafeLayoutEffect } from \"@yamada-ui/utils\"\nimport type { ImgHTMLAttributes, SyntheticEvent } from \"react\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\n\ntype HTMLImageElementProps = ImgHTMLAttributes<HTMLImageElement>\n\nexport type UseImageProps = {\n  /**\n   * The image `src` attribute.\n   */\n  src?: string\n  /**\n   * The image `srcset` attribute.\n   */\n  srcSet?: string\n  /**\n   * The image `sizes` attribute.\n   */\n  sizes?: string\n  /**\n   * A callback for when the image `src` has been loaded.\n   */\n  onLoad?: HTMLImageElementProps[\"onLoad\"]\n  /**\n   * A callback for when there was an error loading the image `src`.\n   */\n  onError?: HTMLImageElementProps[\"onError\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`.\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n  /**\n   * The key used to set the crossOrigin on the HTMLImageElement into which the image will be loaded.\n   * This tells the browser to request cross-origin access when trying to download the image data.\n   */\n  crossOrigin?: HTMLImageElementProps[\"crossOrigin\"]\n  /**\n   * The image `loading` attribute.\n   */\n  loading?: HTMLImageElementProps[\"loading\"]\n}\n\ntype Status = \"loading\" | \"failed\" | \"pending\" | \"loaded\"\n\nexport const shouldShowFallbackImage = (\n  status: Status,\n  fallbackStrategy: \"onError\" | \"beforeLoadOrError\",\n) =>\n  (status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\") ||\n  (status === \"failed\" && fallbackStrategy === \"onError\")\n\nexport const useImage = ({\n  loading,\n  src,\n  srcSet,\n  onLoad,\n  onError,\n  crossOrigin,\n  sizes,\n  ignoreFallback,\n}: UseImageProps) => {\n  const [status, setStatus] = useState<Status>(\"pending\")\n\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\")\n  }, [src])\n\n  const imageRef = useRef<HTMLImageElement | null>()\n\n  const load = useCallback(() => {\n    if (!src) return\n\n    flush()\n\n    const img = new Image()\n\n    img.src = src\n\n    if (crossOrigin) img.crossOrigin = crossOrigin\n    if (srcSet) img.srcset = srcSet\n    if (sizes) img.sizes = sizes\n    if (loading) img.loading = loading\n\n    img.onload = (ev) => {\n      flush()\n\n      setStatus(\"loaded\")\n\n      onLoad?.(ev as unknown as SyntheticEvent<HTMLImageElement, Event>)\n    }\n\n    img.onerror = (error) => {\n      flush()\n\n      setStatus(\"failed\")\n\n      onError?.(error as any)\n    }\n\n    imageRef.current = img\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading])\n\n  const flush = () => {\n    if (!imageRef.current) return\n\n    imageRef.current.onload = null\n    imageRef.current.onerror = null\n    imageRef.current = null\n  }\n\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback) return\n\n    if (status === \"loading\") load()\n\n    return () => {\n      flush()\n    }\n  }, [status, load, ignoreFallback])\n\n  return ignoreFallback ? \"loaded\" : status\n}\n\nexport type UseImageReturn = ReturnType<typeof useImage>\n"],"mappings":";;;AAAA,SAAS,2BAA2B;AAEpC,SAAS,aAAa,WAAW,QAAQ,gBAAgB;AA4ClD,IAAM,0BAA0B,CACrC,QACA,qBAEC,WAAW,YAAY,qBAAqB,uBAC5C,WAAW,YAAY,qBAAqB;AAExC,IAAM,WAAW,CAAC;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAqB;AACnB,QAAM,CAAC,QAAQ,SAAS,IAAI,SAAiB,SAAS;AAEtD,YAAU,MAAM;AACd,cAAU,MAAM,YAAY,SAAS;AAAA,EACvC,GAAG,CAAC,GAAG,CAAC;AAER,QAAM,WAAW,OAAgC;AAEjD,QAAM,OAAO,YAAY,MAAM;AAC7B,QAAI,CAAC;AAAK;AAEV,UAAM;AAEN,UAAM,MAAM,IAAI,MAAM;AAEtB,QAAI,MAAM;AAEV,QAAI;AAAa,UAAI,cAAc;AACnC,QAAI;AAAQ,UAAI,SAAS;AACzB,QAAI;AAAO,UAAI,QAAQ;AACvB,QAAI;AAAS,UAAI,UAAU;AAE3B,QAAI,SAAS,CAAC,OAAO;AACnB,YAAM;AAEN,gBAAU,QAAQ;AAElB,uCAAS;AAAA,IACX;AAEA,QAAI,UAAU,CAAC,UAAU;AACvB,YAAM;AAEN,gBAAU,QAAQ;AAElB,yCAAU;AAAA,IACZ;AAEA,aAAS,UAAU;AAAA,EACrB,GAAG,CAAC,KAAK,aAAa,QAAQ,OAAO,QAAQ,SAAS,OAAO,CAAC;AAE9D,QAAM,QAAQ,MAAM;AAClB,QAAI,CAAC,SAAS;AAAS;AAEvB,aAAS,QAAQ,SAAS;AAC1B,aAAS,QAAQ,UAAU;AAC3B,aAAS,UAAU;AAAA,EACrB;AAEA,sBAAoB,MAAM;AACxB,QAAI;AAAgB;AAEpB,QAAI,WAAW;AAAW,WAAK;AAE/B,WAAO,MAAM;AACX,YAAM;AAAA,IACR;AAAA,EACF,GAAG,CAAC,QAAQ,MAAM,cAAc,CAAC;AAEjC,SAAO,iBAAiB,WAAW;AACrC;","names":[]}
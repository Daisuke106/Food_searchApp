{"version":3,"sources":["../src/image.tsx"],"sourcesContent":["import type { HTMLUIProps, CSSUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx, omitObject } from \"@yamada-ui/utils\"\nimport type { ReactElement } from \"react\"\nimport { isValidElement, useMemo } from \"react\"\nimport type { UseImageProps } from \"./use-image\"\nimport { shouldShowFallbackImage, useImage } from \"./use-image\"\n\ntype ImageOptions = {\n  /**\n   * Fallback image `src` or element to show if image is loading or image fails.\n   */\n  fallback?: string | ReactElement\n  /**\n   * - beforeLoadOrError: loads the fallbackImage while loading the src.\n   * - onError: loads the fallbackImage only if there is an error fetching the src.\n   *\n   * @default \"beforeLoadOrError\"\n   */\n  fallbackStrategy?: \"onError\" | \"beforeLoadOrError\"\n  /**\n   * The CSS `box-size` property.\n   */\n  size?: CSSUIProps[\"boxSize\"]\n  /**\n   * The CSS `object-fit` property.\n   */\n  fit?: CSSUIProps[\"objectFit\"]\n}\n\nexport type ImageProps = Omit<HTMLUIProps<\"img\">, keyof UseImageProps> &\n  UseImageProps &\n  ImageOptions\n\n/**\n * `Image` is a component that displays images with fallback support.\n *\n * @see Docs https://yamada-ui.com/components/media-and-icons/image\n */\nexport const Image = forwardRef<ImageProps, \"img\">((props, ref) => {\n  let {\n    fallback,\n    src,\n    srcSet,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    className,\n    fallbackStrategy = \"beforeLoadOrError\",\n    onError,\n    onLoad,\n    referrerPolicy,\n    size: boxSize,\n    fit: objectFit,\n    ...rest\n  } = props\n\n  ignoreFallback = loading != null || ignoreFallback || !fallback\n\n  const status = useImage({ ...props, ignoreFallback })\n\n  const css = useMemo(() => ({ boxSize, objectFit }), [boxSize, objectFit])\n\n  const isFallbackImage = shouldShowFallbackImage(status, fallbackStrategy)\n\n  if (isFallbackImage) {\n    if (isValidElement(fallback)) {\n      return fallback\n    } else {\n      return (\n        <ui.img\n          ref={ref}\n          className={cx(\"ui-image--fallback\", className)}\n          src={fallback as string | undefined}\n          __css={css}\n          {...(ignoreFallback ? { ...rest, onError, onLoad } : rest)}\n        />\n      )\n    }\n  }\n\n  return (\n    <ui.img\n      ref={ref}\n      src={src}\n      srcSet={srcSet}\n      crossOrigin={crossOrigin}\n      loading={loading}\n      referrerPolicy={referrerPolicy}\n      className={cx(\"ui-image\", className)}\n      __css={css}\n      {...(ignoreFallback ? rest : omitObject(rest, [\"onError\", \"onLoad\"]))}\n    />\n  )\n})\n"],"mappings":";;;;;;;AACA,SAAS,IAAI,kBAAkB;AAC/B,SAAS,IAAI,kBAAkB;AAE/B,SAAS,gBAAgB,eAAe;AAkEhC;AA/BD,IAAM,QAAQ,WAA8B,CAAC,OAAO,QAAQ;AACjE,MAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,mBAAmB;AAAA,IACnB;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM;AAAA,IACN,KAAK;AAAA,IACL,GAAG;AAAA,EACL,IAAI;AAEJ,mBAAiB,WAAW,QAAQ,kBAAkB,CAAC;AAEvD,QAAM,SAAS,SAAS,EAAE,GAAG,OAAO,eAAe,CAAC;AAEpD,QAAM,MAAM,QAAQ,OAAO,EAAE,SAAS,UAAU,IAAI,CAAC,SAAS,SAAS,CAAC;AAExE,QAAM,kBAAkB,wBAAwB,QAAQ,gBAAgB;AAExE,MAAI,iBAAiB;AACnB,QAAI,eAAe,QAAQ,GAAG;AAC5B,aAAO;AAAA,IACT,OAAO;AACL,aACE;AAAA,QAAC,GAAG;AAAA,QAAH;AAAA,UACC;AAAA,UACA,WAAW,GAAG,sBAAsB,SAAS;AAAA,UAC7C,KAAK;AAAA,UACL,OAAO;AAAA,UACN,GAAI,iBAAiB,EAAE,GAAG,MAAM,SAAS,OAAO,IAAI;AAAA;AAAA,MACvD;AAAA,IAEJ;AAAA,EACF;AAEA,SACE;AAAA,IAAC,GAAG;AAAA,IAAH;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,WAAW,GAAG,YAAY,SAAS;AAAA,MACnC,OAAO;AAAA,MACN,GAAI,iBAAiB,OAAO,WAAW,MAAM,CAAC,WAAW,QAAQ,CAAC;AAAA;AAAA,EACrE;AAEJ,CAAC;","names":[]}
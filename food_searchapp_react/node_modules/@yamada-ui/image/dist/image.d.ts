import * as _yamada_ui_core from '@yamada-ui/core';
import { HTMLUIProps, CSSUIProps } from '@yamada-ui/core';
import { ReactElement } from 'react';
import { UseImageProps } from './use-image.js';

type ImageOptions = {
    /**
     * Fallback image `src` or element to show if image is loading or image fails.
     */
    fallback?: string | ReactElement;
    /**
     * - beforeLoadOrError: loads the fallbackImage while loading the src.
     * - onError: loads the fallbackImage only if there is an error fetching the src.
     *
     * @default "beforeLoadOrError"
     */
    fallbackStrategy?: "onError" | "beforeLoadOrError";
    /**
     * The CSS `box-size` property.
     */
    size?: CSSUIProps["boxSize"];
    /**
     * The CSS `object-fit` property.
     */
    fit?: CSSUIProps["objectFit"];
};
type ImageProps = Omit<HTMLUIProps<"img">, keyof UseImageProps> & UseImageProps & ImageOptions;
/**
 * `Image` is a component that displays images with fallback support.
 *
 * @see Docs https://yamada-ui.com/components/media-and-icons/image
 */
declare const Image: _yamada_ui_core.Component<"img", ImageProps>;

export { Image, type ImageProps };

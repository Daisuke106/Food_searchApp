{"version":3,"sources":["../src/index.ts","../src/use-snacks.tsx","../src/snacks.tsx"],"sourcesContent":["export { useSnacks } from \"./use-snacks\"\nexport type { SnackProps, UseSnacksOptions } from \"./use-snacks\"\nexport { Snacks } from \"./snacks\"\nexport type { SnacksProps } from \"./snacks\"\n","import type { AlertProps } from \"@yamada-ui/alert\"\nimport {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n} from \"@yamada-ui/alert\"\nimport { CloseButton } from \"@yamada-ui/close-button\"\nimport type {\n  CSSUIObject,\n  CSSUIProps,\n  SnackComponentProps,\n  SnackConfigOptions,\n} from \"@yamada-ui/core\"\nimport { forwardRef, ui, useTheme } from \"@yamada-ui/core\"\nimport { cx, merge } from \"@yamada-ui/utils\"\nimport type { FC, ReactNode } from \"react\"\nimport { useCallback, useMemo, useState } from \"react\"\n\nconst createRender = (options: UseSnacksOptions): FC<SnackComponentProps> => {\n  const { component } = options\n\n  const Render: FC<SnackComponentProps> = (props) => {\n    if (typeof component === \"function\") {\n      return component({ ...props, ...options }) as JSX.Element\n    } else {\n      return <Snack {...props} {...options} />\n    }\n  }\n\n  return Render\n}\n\nexport type Snack = {\n  id: string | number\n  duration: UseSnacksOptions[\"duration\"]\n  status: UseSnacksOptions[\"status\"]\n  message: (props: SnackComponentProps) => ReactNode\n  onClose: () => void\n  onCloseComplete?: () => void\n  boxShadow?: CSSUIProps[\"boxShadow\"]\n  style?: CSSUIObject\n}\n\nlet counter = 0\n\ntype SnackMethodsOptions = Omit<\n  UseSnacksOptions,\n  \"direction\" | \"limit\" | \"startIndex\"\n> &\n  Partial<Pick<Snack, \"id\" | \"onCloseComplete\">>\n\nexport type UseSnacksOptions = SnackConfigOptions\n\n/**\n * `useSnacks` is a custom hook for controlling notifications used in forms and the like.\n *\n * @see Docs https://yamada-ui.com/hooks/use-snacks\n */\nexport const useSnacks = (defaultOptions: UseSnacksOptions = {}) => {\n  const [items, setItems] = useState<Snack[]>([])\n  const { theme } = useTheme()\n\n  const themeOptions = useMemo(\n    () => theme.__config.snacks?.options ?? {},\n    [theme],\n  )\n\n  const computedOptions = useMemo(\n    () => merge<UseSnacksOptions>(themeOptions, defaultOptions),\n    [defaultOptions, themeOptions],\n  )\n  const { direction, startIndex, limit = 3 } = computedOptions\n\n  const getOptions = useCallback(\n    (options: SnackMethodsOptions) => merge(computedOptions, options),\n    [computedOptions],\n  )\n\n  const snack = useMemo(() => {\n    const methods = (options: SnackMethodsOptions = {}) => {\n      options = getOptions(options)\n\n      const message = createRender(options)\n\n      counter += 1\n\n      let {\n        id = counter,\n        duration,\n        onCloseComplete,\n        status,\n        boxShadow,\n        style,\n      } = options\n\n      const onClose = () =>\n        setItems((prev) => prev.filter((child) => child.id !== id))\n\n      const snack: Snack = {\n        id,\n        status,\n        duration,\n        message,\n        onClose,\n        onCloseComplete,\n        boxShadow,\n        style,\n      }\n\n      setItems((prev) => [\n        ...prev.splice(-1 * ((limit ?? Infinity) - 1)),\n        snack,\n      ])\n\n      return id\n    }\n\n    methods.update = (\n      id: string | number,\n      options: Omit<SnackMethodsOptions, \"id\">,\n    ) => {\n      options = getOptions(options)\n\n      setItems((prev) =>\n        prev.map((props) => {\n          if (props.id === id) {\n            return { ...props, ...options, message: createRender(options) }\n          } else {\n            return props\n          }\n        }),\n      )\n    }\n\n    methods.closeAll = () => {\n      setItems([])\n    }\n\n    methods.close = (id: string | number) => {\n      setItems((prev) => prev.filter((props) => props.id !== id))\n    }\n\n    methods.isActive = (id: string | number) =>\n      !!items.find((props) => props.id === id)\n\n    return methods\n  }, [items, limit, getOptions])\n\n  const snacks = useMemo(\n    () => ({ direction, startIndex, items }),\n    [direction, startIndex, items],\n  )\n\n  return { snack, snacks }\n}\n\nexport type UseSnacksReturn = ReturnType<typeof useSnacks>\n\nexport type SnackProps = Omit<AlertProps, keyof UseSnacksOptions> &\n  UseSnacksOptions & {\n    index: number\n    onClose?: () => void\n  }\n\nconst defaultBoxShadow: CSSUIProps[\"boxShadow\"] = [\n  \"0 -1px 3px 0 rgba(0, 0, 0, 0.1), 0 -1px 2px 0 rgba(0, 0, 0, 0.06), 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)\",\n  \"0px 0px 0px 1px rgba(0, 0, 0, 0.1), 0px -1px 2px rgba(0, 0, 0, 0.2), 0px 1px 2px rgba(0, 0, 0, 0.2)\",\n]\n\nconst Snack = forwardRef<SnackProps, \"div\">(\n  (\n    {\n      variant = \"basic\",\n      colorScheme,\n      status,\n      icon,\n      title,\n      description,\n      isClosable = true,\n      boxShadow = defaultBoxShadow,\n      className,\n      index,\n      onClose,\n    },\n    ref,\n  ) => {\n    return (\n      <Alert\n        ref={ref}\n        className={cx(\"ui-snack\", className)}\n        status={status}\n        variant={variant}\n        colorScheme={colorScheme}\n        alignItems=\"start\"\n        boxShadow={index ? boxShadow : undefined}\n        pe={isClosable ? 8 : undefined}\n      >\n        <AlertIcon\n          variant={icon?.variant}\n          className=\"ui-snack__icon\"\n          {...(icon?.color ? { color: icon.color } : {})}\n        >\n          {icon?.children}\n        </AlertIcon>\n\n        <ui.div flex=\"1\">\n          {title ? (\n            <AlertTitle className=\"ui-snack__title\" lineClamp={1}>\n              {title}\n            </AlertTitle>\n          ) : null}\n          {description ? (\n            <AlertDescription className=\"ui-snack__desc\" lineClamp={3}>\n              {description}\n            </AlertDescription>\n          ) : null}\n        </ui.div>\n\n        {isClosable ? (\n          <CloseButton\n            className=\"ui-snack__close-button\"\n            size=\"sm\"\n            onClick={onClose}\n            position=\"absolute\"\n            top={2}\n            right={2}\n          />\n        ) : null}\n      </Alert>\n    )\n  },\n)\n","import type { CSSUIObject, ThemeConfig } from \"@yamada-ui/core\"\nimport { ui, forwardRef, useTheme } from \"@yamada-ui/core\"\nimport type { MotionProps, MotionVariants } from \"@yamada-ui/motion\"\nimport { AnimatePresence, Motion, useIsPresent } from \"@yamada-ui/motion\"\nimport { useTimeout } from \"@yamada-ui/use-timeout\"\nimport { useToken } from \"@yamada-ui/use-token\"\nimport { useValue } from \"@yamada-ui/use-value\"\nimport { calc, cx, noop, runIfFunc, useUpdateEffect } from \"@yamada-ui/utils\"\nimport type { RefObject } from \"react\"\nimport { createRef, memo, useEffect, useMemo, useRef, useState } from \"react\"\nimport type { Snack, UseSnacksOptions, UseSnacksReturn } from \"./use-snacks\"\n\nconst defaultContainerVariants: MotionVariants = {\n  initial: { padding: 0 },\n  animate: ({ gutter }) => ({\n    padding: `${gutter[0]} 0 ${gutter[1]}`,\n    transition: { duration: 0.4 },\n  }),\n  exit: { padding: 0 },\n}\n\nconst defaultListVariants: MotionVariants = {\n  initial: { opacity: 1, height: 0 },\n  animate: ({ height }) => ({\n    opacity: 1,\n    height,\n    transition: { duration: 0.4 },\n  }),\n  exit: { opacity: 0, height: 0 },\n}\n\ntype SnacksOptions = {\n  snacks: UseSnacksReturn[\"snacks\"]\n  /**\n   * The variants of the snacks container.\n   * Check the docs to see the variants of possible modifiers you can pass.\n   *\n   * @see Docs https://www.framer.com/motion/animation/#variants\n   */\n  containerVariants?: MotionVariants\n  /**\n   * The variants of the snacks list.\n   * Check the docs to see the variants of possible modifiers you can pass.\n   *\n   * @see Docs https://www.framer.com/motion/animation/#variants\n   */\n  listVariants?: MotionVariants\n  /**\n   * Props for the snacks list element.\n   */\n  listProps?: MotionProps\n}\n\nexport type SnacksProps = Omit<MotionProps<\"div\">, \"direction\"> &\n  SnacksOptions &\n  Pick<UseSnacksOptions, \"direction\" | \"startIndex\"> &\n  Pick<Required<ThemeConfig>[\"snacks\"], \"variants\" | \"gutter\" | \"negateMargin\">\n\nexport const Snacks = forwardRef<SnacksProps, \"div\">(\n  (\n    {\n      className,\n      snacks,\n      containerVariants = defaultContainerVariants,\n      listVariants = defaultListVariants,\n      listProps,\n      ...props\n    },\n    ref,\n  ) => {\n    const { items, ...computedSnacks } = snacks\n    const count = items.length\n\n    const refMap = useRef<Map<number, RefObject<HTMLLIElement>>>(new Map())\n    const [height, setHeight] = useState<number>(0)\n    const [isExist, setIsExist] = useState<boolean>(!!count)\n    const { theme } = useTheme()\n    const {\n      variants,\n      direction = \"top\",\n      startIndex = 0,\n      gutter = [0, 0],\n      gap = \"fallback(4, 1rem)\",\n      negateMargin = true,\n      ...rest\n    } = useMemo(\n      () => ({ ...computedSnacks, ...theme.__config.snacks, ...props }),\n      [computedSnacks, theme, props],\n    )\n    const top = useToken<string | number>(\"spaces\", useValue(gutter[0])) ?? 0\n    const bottom = useToken<string | number>(\"spaces\", useValue(gutter[1])) ?? 0\n    const negatedTop = calc(top).negate().toString()\n    const negatedBottom = calc(bottom).negate().toString()\n    const isShow = !!count || isExist\n\n    const css: CSSUIObject = {\n      w: \"100%\",\n      var: [{ __prefix: \"ui\", name: \"space\", token: \"spaces\", value: gap }],\n      margin: negateMargin ? `${negatedTop} 0 ${negatedBottom}` : undefined,\n    }\n\n    useEffect(() => {\n      let height = 0\n\n      if (!count) return\n\n      const refs = [...refMap.current.values()].slice(0, count)\n\n      for (const ref of refs) {\n        if (!ref.current) continue\n\n        let { offsetHeight, offsetTop } = ref.current\n\n        offsetHeight += offsetTop\n\n        if (offsetHeight > height) height = offsetHeight\n      }\n\n      setHeight(height)\n    }, [count, direction])\n\n    useUpdateEffect(() => {\n      if (!!count) setIsExist(true)\n    }, [count])\n\n    return (\n      <AnimatePresence initial={false}>\n        {isShow ? (\n          <Motion\n            ref={ref}\n            className={cx(\"ui-snacks\", className)}\n            __css={css}\n            variants={containerVariants}\n            custom={{ gutter: [top, bottom] }}\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            {...rest}\n          >\n            <Motion\n              as=\"ul\"\n              className=\"ui-snacks__list\"\n              variants={listVariants}\n              custom={{ height }}\n              initial=\"initial\"\n              animate=\"animate\"\n              exit=\"exit\"\n              __css={{\n                position: \"relative\",\n                w: \"100%\",\n              }}\n              {...listProps}\n            >\n              <AnimatePresence\n                onExitComplete={() => {\n                  if (!count) setIsExist(false)\n                }}\n              >\n                {items.map((props, index) => {\n                  const ref = createRef<HTMLLIElement>()\n\n                  refMap.current.set(index, ref)\n\n                  return (\n                    <SnackComponent\n                      key={props.id}\n                      ref={ref}\n                      index={index}\n                      lastIndex={count - index - 1}\n                      startIndex={startIndex}\n                      variants={variants}\n                      direction={direction}\n                      {...props}\n                    />\n                  )\n                })}\n              </AnimatePresence>\n            </Motion>\n          </Motion>\n        ) : null}\n      </AnimatePresence>\n    )\n  },\n)\n\nconst defaultItemVariants: MotionVariants = {\n  initial: ({ index, direction }) => ({\n    opacity: 0,\n    ...(index ? { y: (direction === \"top\" ? -1 : 1) * 16 } : {}),\n  }),\n  animate: ({ index }) => ({\n    opacity: 1,\n    y: 0,\n    transition: {\n      delay: !index ? 0.4 : 0,\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  }),\n  exit: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n}\n\ntype SnackComponentOptions = {\n  index: number\n  lastIndex: number\n}\n\ntype SnackComponentProps = Snack &\n  Pick<SnacksProps, \"variants\"> &\n  Pick<Required<SnacksProps>, \"direction\" | \"startIndex\"> &\n  SnackComponentOptions\n\nconst SnackComponent = memo(\n  forwardRef<SnackComponentProps, \"li\">(\n    (\n      {\n        index,\n        lastIndex,\n        startIndex,\n        direction,\n        variants = defaultItemVariants,\n        duration = null,\n        message,\n        onClose: onCloseProp,\n        onCloseComplete,\n        style,\n      },\n      ref,\n    ) => {\n      const [delay, setDelay] = useState(duration)\n      const isPresent = useIsPresent()\n\n      const onClose = isPresent ? onCloseProp : noop\n      const onMouseEnter = () => setDelay(null)\n      const onMouseLeave = () => setDelay(duration)\n\n      const zIndex = startIndex + index\n      const space = `calc(var(--ui-space) * ${\n        direction === \"top\" ? lastIndex : index\n      })`\n\n      const css: CSSUIObject = {\n        position: \"absolute\",\n        top: space,\n        left: 0,\n        right: 0,\n        zIndex,\n        w: \"100%\",\n        maxW: \"100%\",\n        ...style,\n      }\n\n      useUpdateEffect(() => {\n        if (!isPresent) onCloseComplete?.()\n      }, [isPresent])\n\n      useUpdateEffect(() => {\n        setDelay(duration)\n      }, [duration])\n\n      useTimeout(onClose, delay)\n\n      return (\n        <ui.li ref={ref} className=\"ui-snacks__item\" __css={css}>\n          <Motion\n            className=\"ui-snacks__item-inner\"\n            layout\n            variants={variants}\n            custom={{ index, lastIndex, direction }}\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            onHoverStart={onMouseEnter}\n            onHoverEnd={onMouseLeave}\n          >\n            {runIfFunc(message, { index, onClose })}\n          </Motion>\n        </ui.li>\n      )\n    },\n  ),\n)\n\nSnackComponent.displayName = \"SnackComponent\"\n"],"mappings":"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","names":["snack","import_core","import_utils","import_react","import_jsx_runtime","height","ref","props"]}
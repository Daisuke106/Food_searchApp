{"version":3,"sources":["../src/range-slider.tsx"],"sourcesContent":["import type {\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n  CSSUIProps,\n  UIPropGetter,\n  RequiredUIPropGetter,\n} from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport type { FormControlOptions } from \"@yamada-ui/form-control\"\nimport {\n  useFormControlProps,\n  formControlProperties,\n} from \"@yamada-ui/form-control\"\nimport { useControllableState } from \"@yamada-ui/use-controllable-state\"\nimport { useLatestRef } from \"@yamada-ui/use-latest-ref\"\nimport { usePanEvent } from \"@yamada-ui/use-pan-event\"\nimport { useSizes } from \"@yamada-ui/use-size\"\nimport {\n  clampNumber,\n  createContext,\n  cx,\n  dataAttr,\n  omitChildren,\n  findChildren,\n  getValidChildren,\n  handlerAll,\n  isArray,\n  isEmpty,\n  mergeRefs,\n  percentToValue,\n  pickObject,\n  roundNumberToStep,\n  useCallbackRef,\n  useUpdateEffect,\n  valueToPercent,\n  includesChildren,\n} from \"@yamada-ui/utils\"\nimport type { CSSProperties, KeyboardEvent, KeyboardEventHandler } from \"react\"\nimport { useCallback, useId, useRef, useState } from \"react\"\n\nexport type UseRangeSliderProps = FormControlOptions & {\n  /**\n   * The base `id` to use for the slider.\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms.\n   */\n  name?: string | [string, string]\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   *\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   *\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments or decrements have to be made.\n   *\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider.\n   */\n  value?: [number, number]\n  /**\n   * The initial value of the slider.\n   */\n  defaultValue?: [number, number]\n  /**\n   * The orientation of the slider.\n   *\n   * @default 'horizontal'\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   */\n  isReversed?: boolean\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   *\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * The minimum distance between slider thumbs.\n   * Useful for preventing the thumbs from being too close together.\n   *\n   * @default 0\n   */\n  betweenThumbs?: number\n  /**\n   * Function called when the user starts selecting a new value.\n   */\n  onChangeStart?: (value: [number, number]) => void\n  /**\n   * Function called when the user is done selecting a new value.\n   */\n  onChangeEnd?: (value: [number, number]) => void\n  /**\n   * Function called whenever the slider value changes.\n   */\n  onChange?: (value: [number, number]) => void\n}\n\nexport const useRangeSlider = ({\n  focusThumbOnChange = true,\n  ...props\n}: UseRangeSliderProps) => {\n  if (!focusThumbOnChange) props.isReadOnly = true\n\n  let {\n    id,\n    name,\n    min = 0,\n    max = 100,\n    step = 1,\n    defaultValue,\n    orientation = \"horizontal\",\n    isReversed,\n    betweenThumbs = 0,\n    required,\n    disabled,\n    readOnly,\n    value: valueProp,\n    onChange,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    onFocus,\n    onBlur,\n    \"aria-readonly\": ariaReadonly,\n    ...rest\n  } = useFormControlProps(props)\n\n  const formControlProps = pickObject(rest, formControlProperties)\n\n  defaultValue = defaultValue ?? [min + (max - min) / 4, max - (max - min) / 4]\n\n  if (max < min)\n    throw new Error(\"Do not assign a number less than 'min' to 'max'\")\n\n  const onChangeStart = useCallbackRef(onChangeStartProp)\n  const onChangeEnd = useCallbackRef(onChangeEndProp)\n\n  const [computedValues, setValues] = useControllableState({\n    value: valueProp,\n    defaultValue,\n    onChange,\n  })\n\n  const [isDragging, setDragging] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const [activeIndex, setActiveIndex] = useState(-1)\n  const isInteractive = !(disabled || readOnly)\n\n  const tenStep = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n  const spacing = betweenThumbs * step\n\n  const values = computedValues.map((value) =>\n    clampNumber(value, min, max),\n  ) as [number, number]\n  const [startValue, endValue] = values\n  const reversedValues = values.map((value) => max - value + min) as [\n    number,\n    number,\n  ]\n  const thumbValues = isReversed ? reversedValues : values\n  const thumbPercents = thumbValues.map((value) =>\n    valueToPercent(value, min, max),\n  ) as [number, number]\n  const valueBounds = [\n    { min, max: endValue - spacing },\n    { min: startValue + spacing, max },\n  ]\n\n  const isVertical = orientation === \"vertical\"\n\n  const latestRef = useLatestRef({\n    min,\n    max,\n    step,\n    disabled,\n    values,\n    valueBounds,\n    isInteractive,\n    isReversed,\n    isVertical,\n    focusThumbOnChange,\n    betweenThumbs,\n    orientation,\n  })\n\n  const eventSourceRef = useRef<\"pointer\" | \"keyboard\" | null>(null)\n  const containerRef = useRef<HTMLElement>(null)\n  const trackRef = useRef<HTMLElement>(null)\n\n  const thumbSizes = useSizes({\n    getNodes: () => {\n      const nodes =\n        containerRef.current?.querySelectorAll<HTMLElement>(\"[role=slider]\")\n\n      return nodes ? Array.from(nodes) : []\n    },\n  })\n\n  id ??= useId()\n  name ??= id\n\n  const getThumbId = useCallback((i: number) => `slider-thumb-${id}-${i}`, [id])\n  const getInputId = useCallback((i: number) => `slider-input-${id}-${i}`, [id])\n  const getMarkerId = useCallback(\n    (i: number) => `slider-marker-${id}-${i}`,\n    [id],\n  )\n\n  usePanEvent(containerRef, {\n    onSessionStart: (ev) => {\n      const { isInteractive, values } = latestRef.current\n\n      if (!isInteractive) return\n\n      setDragging(true)\n\n      const pointValue = getValueFromPointer(ev) || 0\n      const distances = values.map((value) => Math.abs(value - pointValue)) as [\n        number,\n        number,\n      ]\n      const closest = Math.min(...distances)\n\n      let i = distances.indexOf(closest)\n\n      const thumbsPosition = distances.filter(\n        (distance) => distance === closest,\n      )\n      const isThumbStacked = thumbsPosition.length > 1\n\n      if (isThumbStacked && pointValue > values[i])\n        i = i + thumbsPosition.length - 1\n\n      setActiveIndex(i)\n      constrain(i, pointValue)\n      focusThumb(i)\n\n      onChangeStart(values)\n    },\n    onSessionEnd: () => {\n      const { isInteractive, values } = latestRef.current\n\n      if (!isInteractive) return\n\n      setDragging(false)\n      onChangeEnd(values)\n    },\n    onMove: (ev) => {\n      const { isInteractive } = latestRef.current\n\n      if (!isInteractive || activeIndex == -1) return\n\n      const pointValue = getValueFromPointer(ev) || 0\n\n      setActiveIndex(activeIndex)\n\n      constrain(activeIndex, pointValue)\n\n      focusThumb(activeIndex)\n    },\n  })\n\n  const getValueFromPointer = useCallback(\n    (ev: any) => {\n      if (!trackRef.current) return\n\n      const { min, max } = latestRef.current\n\n      eventSourceRef.current = \"pointer\"\n\n      const { bottom, left, height, width } =\n        trackRef.current.getBoundingClientRect()\n      const { clientX, clientY } = ev.touches?.[0] ?? ev\n\n      const diff = isVertical ? bottom - clientY : clientX - left\n\n      const length = isVertical ? height : width\n\n      let percent = diff / length\n\n      if (isReversed) percent = 1 - percent\n\n      let nextValue = percentToValue(percent, min, max)\n\n      return nextValue\n    },\n    [latestRef, isVertical, isReversed],\n  )\n\n  const focusThumb = useCallback(\n    (i?: number) => {\n      i ??= activeIndex\n\n      if (i === -1 || !focusThumbOnChange) return\n\n      const id = getThumbId(i)\n\n      const el = containerRef.current?.ownerDocument.getElementById(id)\n\n      if (el) setTimeout(() => el.focus())\n    },\n    [activeIndex, focusThumbOnChange, getThumbId],\n  )\n\n  const constrain = useCallback(\n    (i: number, value: number) => {\n      const { isInteractive, valueBounds, values } = latestRef.current\n\n      if (!isInteractive) return\n\n      const { min, max } = valueBounds[i]\n\n      value = parseFloat(roundNumberToStep(value, min, oneStep))\n      value = clampNumber(value, min, max)\n\n      const nextValues = [...values] as [number, number]\n\n      nextValues[i] = value\n\n      setValues(nextValues)\n    },\n    [latestRef, oneStep, setValues],\n  )\n\n  const stepUp = useCallback(\n    (i: number, step = oneStep) => {\n      const { values } = latestRef.current\n\n      const value = values[i]\n\n      constrain(i, isReversed ? value - step : value + step)\n    },\n    [constrain, isReversed, latestRef, oneStep],\n  )\n\n  const stepDown = useCallback(\n    (i: number, step = oneStep) => {\n      const { values } = latestRef.current\n\n      const value = values[i]\n\n      constrain(i, isReversed ? value + step : value - step)\n    },\n    [constrain, isReversed, latestRef, oneStep],\n  )\n\n  const reset = useCallback(\n    () => setValues(defaultValue as [number, number]),\n    [defaultValue, setValues],\n  )\n\n  const onKeyDown = useCallback(\n    (ev: KeyboardEvent<HTMLElement>) => {\n      const { valueBounds } = latestRef.current\n      const { min, max } = valueBounds[activeIndex]\n\n      const actions: Record<string, KeyboardEventHandler> = {\n        ArrowRight: () => stepUp(activeIndex),\n        ArrowUp: () => stepUp(activeIndex),\n        ArrowLeft: () => stepDown(activeIndex),\n        ArrowDown: () => stepDown(activeIndex),\n        PageUp: () => stepUp(activeIndex, tenStep),\n        PageDown: () => stepDown(activeIndex, tenStep),\n        Home: () => constrain(activeIndex, min),\n        End: () => constrain(activeIndex, max),\n      }\n\n      const action = actions[ev.key]\n\n      if (!action) return\n\n      ev.preventDefault()\n      ev.stopPropagation()\n\n      action(ev)\n\n      eventSourceRef.current = \"keyboard\"\n    },\n    [activeIndex, constrain, latestRef, stepDown, stepUp, tenStep],\n  )\n\n  useUpdateEffect(() => {\n    const { values } = latestRef.current\n\n    if (eventSourceRef.current === \"keyboard\") onChangeEnd(values)\n  }, [startValue, endValue, onChangeEnd])\n\n  const getContainerProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const z = { width: 0, height: 0 }\n      const p = isVertical ? \"height\" : \"width\"\n      const { width: w, height: h } =\n        thumbSizes.reduce((a = z, b = z) => (a[p] > b[p] ? a : b), z) ?? {}\n\n      const style: CSSProperties = {\n        ...props.style,\n        position: \"relative\",\n        userSelect: \"none\",\n        touchAction: \"none\",\n        WebkitTapHighlightColor: \"rgba(0, 0, 0, 0)\",\n        outline: 0,\n        ...(isVertical\n          ? w\n            ? { paddingLeft: w / 2, paddingRight: w / 2 }\n            : {}\n          : h\n            ? { paddingTop: h / 2, paddingBottom: h / 2 }\n            : {}),\n      }\n\n      return {\n        ...rest,\n        ...props,\n        id: `slider-container-${id}`,\n        ref: mergeRefs(ref, containerRef),\n        tabIndex: -1,\n        style,\n      }\n    },\n    [id, isVertical, rest, thumbSizes],\n  )\n\n  const getInputProps: RequiredUIPropGetter<\"input\", { index: number }> =\n    useCallback(\n      ({ index: i, ...props }, ref = null) => ({\n        \"aria-readonly\": ariaReadonly,\n        ...formControlProps,\n        ...props,\n        ref,\n        id: getInputId(i),\n        type: \"hidden\",\n        name: isArray(name) ? name[i] : `${name}-${i}`,\n        value: values[i],\n        required,\n        disabled,\n        readOnly,\n      }),\n      [\n        ariaReadonly,\n        disabled,\n        getInputId,\n        name,\n        readOnly,\n        required,\n        formControlProps,\n        values,\n      ],\n    )\n\n  const getTrackProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const style: CSSProperties = {\n        ...props.style,\n        position: \"absolute\",\n        ...(isVertical\n          ? {\n              left: \"50%\",\n              transform: \"translateX(-50%)\",\n              height: \"100%\",\n            }\n          : {\n              top: \"50%\",\n              transform: \"translateY(-50%)\",\n              width: \"100%\",\n            }),\n      }\n\n      return {\n        ...formControlProps,\n        ...props,\n        id: `slider-track-${id}`,\n        ref: mergeRefs(ref, trackRef),\n        style,\n      }\n    },\n    [id, isVertical, formControlProps],\n  )\n\n  const getFilledTrackProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const n = Math.abs(thumbPercents[1] - thumbPercents[0])\n      const s = isReversed ? 100 - thumbPercents[0] : thumbPercents[0]\n\n      const style: CSSProperties = {\n        ...props.style,\n        position: \"absolute\",\n        ...(isVertical\n          ? {\n              left: \"50%\",\n              transform: \"translateX(-50%)\",\n              height: `${n}%`,\n              ...(isReversed ? { top: `${s}%` } : { bottom: `${s}%` }),\n            }\n          : {\n              top: \"50%\",\n              transform: \"translateY(-50%)\",\n              width: `${n}%`,\n              ...(isReversed ? { right: `${s}%` } : { left: `${s}%` }),\n            }),\n      }\n\n      return {\n        ...formControlProps,\n        ...props,\n        id: `slider-filled-track-${id}`,\n        ref,\n        style,\n      }\n    },\n    [id, isReversed, isVertical, formControlProps, thumbPercents],\n  )\n\n  const getMarkProps: RequiredUIPropGetter<\"div\", { value: number }> =\n    useCallback(\n      (props, ref = null) => {\n        let n = valueToPercent(props.value, min, max)\n        n = isReversed ? 100 - n : n\n\n        const style: CSSProperties = {\n          ...props.style,\n          position: \"absolute\",\n          pointerEvents: \"none\",\n          ...(isVertical ? { bottom: `${n}%` } : { left: `${n}%` }),\n        }\n\n        return {\n          ...formControlProps,\n          ...props,\n          ref,\n          id: getMarkerId(props.value),\n          \"aria-hidden\": true,\n          \"data-invalid\": dataAttr(props.value < min || max < props.value),\n          \"data-highlighted\": dataAttr(\n            values[0] <= props.value && props.value <= values[1],\n          ),\n          style,\n        }\n      },\n      [getMarkerId, isReversed, isVertical, max, min, formControlProps, values],\n    )\n\n  const getThumbProps: RequiredUIPropGetter<\"div\", { index: number }> =\n    useCallback(\n      ({ index: i, ...props }, ref = null) => {\n        const n = thumbPercents[i]\n        const { width: w, height: h } = thumbSizes[i] ?? { width: 0, height: 0 }\n\n        const style: CSSProperties = {\n          ...props.style,\n          position: \"absolute\",\n          userSelect: \"none\",\n          touchAction: \"none\",\n          ...(isVertical\n            ? { bottom: `calc(${n}% - ${h / 2}px)` }\n            : { left: `calc(${n}% - ${w / 2}px)` }),\n        }\n\n        const value = values[i]\n\n        if (value == null)\n          throw new Error(\n            `Cannot find value at index '${i}'. The 'value' or 'defaultValue'`,\n          )\n\n        return {\n          \"aria-label\": \"Slider thumb\",\n          \"aria-readonly\": ariaReadonly,\n          ...formControlProps,\n          ...props,\n          ref,\n          id: getThumbId(i),\n          tabIndex: isInteractive && focusThumbOnChange ? 0 : undefined,\n          role: \"slider\",\n          \"aria-valuemin\": min,\n          \"aria-valuemax\": max,\n          \"aria-valuenow\": value,\n          \"data-active\": dataAttr(\n            isDragging && focusThumbOnChange && activeIndex === i,\n          ),\n          \"aria-orientation\": orientation,\n          onKeyDown: handlerAll(props.onKeyDown, onKeyDown),\n          onFocus: handlerAll(props.onFocus, onFocus, () => {\n            setFocused(true)\n            setActiveIndex(i)\n          }),\n          onBlur: handlerAll(props.onBlur, onBlur, () => {\n            setFocused(false)\n            setActiveIndex(-1)\n          }),\n          style,\n        }\n      },\n      [\n        thumbPercents,\n        thumbSizes,\n        isVertical,\n        values,\n        ariaReadonly,\n        formControlProps,\n        getThumbId,\n        isInteractive,\n        focusThumbOnChange,\n        min,\n        max,\n        isDragging,\n        activeIndex,\n        orientation,\n        onKeyDown,\n        onFocus,\n        onBlur,\n      ],\n    )\n\n  return {\n    values,\n    isFocused,\n    isDragging,\n    isVertical,\n    stepUp,\n    stepDown,\n    reset,\n    setActiveIndex,\n    getThumbId,\n    getInputId,\n    getMarkerId,\n    getContainerProps,\n    getInputProps,\n    getTrackProps,\n    getFilledTrackProps,\n    getMarkProps,\n    getThumbProps,\n  }\n}\n\nexport type ReturnUseRangeSliderProps = ReturnType<typeof useRangeSlider>\n\ntype RangeSliderContext = Pick<\n  ReturnUseRangeSliderProps,\n  | \"isVertical\"\n  | \"getTrackProps\"\n  | \"getFilledTrackProps\"\n  | \"getMarkProps\"\n  | \"getThumbProps\"\n  | \"getInputProps\"\n> &\n  RangeSliderOptions & {\n    styles: Record<string, CSSUIObject>\n  }\n\nconst [RangeSliderProvider, useRangeSliderContext] =\n  createContext<RangeSliderContext>({\n    name: \"RangeSliderContext\",\n    errorMessage: `useRangeSliderContext returned is 'undefined'. Seems you forgot to wrap the components in \"<RangeSlider />\" `,\n  })\n\ntype RangeSliderOptions = {\n  /**\n   * Props for range slider input element.\n   */\n  inputProps?: HTMLUIProps<\"input\">\n  /**\n   * Props for range slider track element.\n   */\n  trackProps?: RangeSliderTrackProps\n  /**\n   * Props for range slider filled track element.\n   */\n  filledTrackProps?: RangeSliderFilledTrackProps\n  /**\n   * Props for range slider thumb element.\n   */\n  thumbProps?: RangeSliderThumbProps\n  /**\n   * The CSS `color` property. Used in `color` of track element.\n   */\n  trackColor?: CSSUIProps[\"color\"]\n  /**\n   * The CSS `color` property. Used in `color` of filled track element.\n   */\n  filledTrackColor?: CSSUIProps[\"color\"]\n  /**\n   * The CSS `height` property. Used in `height` of track element.\n   */\n  trackSize?: CSSUIProps[\"h\"]\n  /**\n   * The CSS `background` property. Used in `background` of thumb element.\n   */\n  thumbColor?: CSSUIProps[\"bg\"]\n  /**\n   * The CSS `box-size` property. Used in `box-size` of thumb element.\n   */\n  thumbSize?: CSSUIProps[\"boxSize\"]\n}\n\nexport type RangeSliderProps = Omit<\n  HTMLUIProps<\"div\">,\n  keyof UseRangeSliderProps\n> &\n  ThemeProps<\"RangeSlider\"> &\n  UseRangeSliderProps &\n  RangeSliderOptions\n\n/**\n * `RangeSlider` is a component used for users to select a range of related values.\n *\n * @see Docs https://yamada-ui.com/components/forms/range-slider\n */\nexport const RangeSlider = forwardRef<RangeSliderProps, \"div\">((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"RangeSlider\", props)\n  const {\n    className,\n    children,\n    inputProps,\n    trackProps,\n    filledTrackProps,\n    thumbProps,\n    trackColor,\n    filledTrackColor,\n    trackSize,\n    thumbColor,\n    thumbSize,\n    ...rest\n  } = omitThemeProps(mergedProps)\n  const {\n    isVertical,\n    getContainerProps,\n    getInputProps,\n    getTrackProps,\n    getFilledTrackProps,\n    getMarkProps,\n    getThumbProps,\n  } = useRangeSlider(rest)\n\n  const css: CSSUIObject = { ...styles.container }\n\n  const validChildren = getValidChildren(children)\n\n  const [customRangeSliderTrack] = findChildren(validChildren, RangeSliderTrack)\n  const [customRangeSliderStartThumb] = findChildren(\n    validChildren,\n    RangeSliderStartThumb,\n  )\n  const [customRangeSliderEndThumb] = findChildren(\n    validChildren,\n    RangeSliderEndThumb,\n  )\n\n  const hasRangeSliderStartThumb = includesChildren(\n    validChildren,\n    RangeSliderStartThumb,\n  )\n  const hasRangeSliderEndThumb = includesChildren(\n    validChildren,\n    RangeSliderEndThumb,\n  )\n\n  const cloneChildren = !isEmpty(validChildren)\n    ? omitChildren(\n        validChildren,\n        RangeSliderTrack,\n        RangeSliderStartThumb,\n        RangeSliderEndThumb,\n      )\n    : children\n\n  return (\n    <RangeSliderProvider\n      value={{\n        isVertical,\n        getTrackProps,\n        getFilledTrackProps,\n        getMarkProps,\n        getThumbProps,\n        getInputProps,\n        trackProps,\n        trackColor,\n        trackSize,\n        filledTrackProps,\n        filledTrackColor,\n        thumbProps,\n        thumbColor,\n        thumbSize,\n        inputProps,\n        styles,\n      }}\n    >\n      <ui.div\n        className={cx(\"ui-slider\", className)}\n        __css={css}\n        {...getContainerProps({}, ref)}\n      >\n        {customRangeSliderTrack ?? <RangeSliderTrack />}\n\n        {cloneChildren}\n\n        {customRangeSliderStartThumb ??\n          (!hasRangeSliderStartThumb ? <RangeSliderStartThumb /> : null)}\n        {customRangeSliderEndThumb ??\n          (!hasRangeSliderEndThumb ? <RangeSliderEndThumb /> : null)}\n      </ui.div>\n    </RangeSliderProvider>\n  )\n})\n\nexport type RangeSliderTrackProps = HTMLUIProps<\"div\"> &\n  Pick<RangeSliderOptions, \"filledTrackProps\">\n\nexport const RangeSliderTrack = forwardRef<RangeSliderTrackProps, \"div\">(\n  ({ className, children, filledTrackProps, ...rest }, ref) => {\n    const {\n      styles,\n      trackProps,\n      trackColor,\n      trackSize,\n      isVertical,\n      getTrackProps,\n    } = useRangeSliderContext()\n\n    const css: CSSUIObject = { ...styles.track }\n\n    return (\n      <ui.div\n        className={cx(\"ui-slider__track\", className)}\n        __css={css}\n        {...getTrackProps(\n          {\n            ...(trackColor ? { bg: trackColor } : {}),\n            ...(trackSize\n              ? isVertical\n                ? { w: trackSize }\n                : { h: trackSize }\n              : {}),\n            ...trackProps,\n            ...rest,\n          },\n          ref,\n        )}\n      >\n        {children ?? <RangeSliderFilledTrack {...filledTrackProps} />}\n      </ui.div>\n    )\n  },\n)\n\nexport type RangeSliderFilledTrackProps = HTMLUIProps<\"div\">\n\nexport const RangeSliderFilledTrack = forwardRef<\n  RangeSliderFilledTrackProps,\n  \"div\"\n>(({ className, ...rest }, ref) => {\n  const { styles, filledTrackProps, filledTrackColor, getFilledTrackProps } =\n    useRangeSliderContext()\n\n  const css: CSSUIObject = { ...styles.filledTrack }\n\n  return (\n    <ui.div\n      className={cx(\"ui-slider__track-filled\", className)}\n      __css={css}\n      {...getFilledTrackProps(\n        {\n          ...(filledTrackColor ? { bg: filledTrackColor } : {}),\n          ...filledTrackProps,\n          ...rest,\n        },\n        ref,\n      )}\n    />\n  )\n})\n\nexport type RangeSliderMarkProps = HTMLUIProps<\"div\"> & { value: number }\n\nexport const RangeSliderMark = forwardRef<RangeSliderMarkProps, \"div\">(\n  ({ className, ...rest }, ref) => {\n    const { styles, getMarkProps } = useRangeSliderContext()\n\n    const css: CSSUIObject = {\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      ...styles.mark,\n    }\n\n    return (\n      <ui.div\n        className={cx(\"ui-slider__mark\", className)}\n        __css={css}\n        {...getMarkProps(rest, ref)}\n      />\n    )\n  },\n)\n\nexport type RangeSliderThumbProps = HTMLUIProps<\"div\">\n\nconst RangeSliderThumb = forwardRef<\n  RangeSliderThumbProps & { index: number },\n  \"div\"\n>(({ className, index, children, ...rest }, ref) => {\n  const {\n    styles,\n    thumbProps,\n    thumbColor,\n    thumbSize,\n    inputProps,\n    getThumbProps,\n    getInputProps,\n  } = useRangeSliderContext()\n\n  const css: CSSUIObject = { ...styles.thumb }\n\n  const { children: propChildren } = thumbProps ?? {}\n\n  return (\n    <ui.div\n      className={cx(\"ui-slider__thumb\", className)}\n      __css={css}\n      {...getThumbProps(\n        {\n          index,\n          ...(thumbColor ? { bg: thumbColor } : {}),\n          ...(thumbSize ? { boxSize: thumbSize } : {}),\n          ...thumbProps,\n          ...rest,\n        },\n        ref,\n      )}\n    >\n      <ui.input {...getInputProps({ ...inputProps, index }, ref)} />\n      {children ?? propChildren}\n    </ui.div>\n  )\n})\n\nexport const RangeSliderStartThumb = forwardRef<RangeSliderThumbProps, \"div\">(\n  (rest, ref) => {\n    return <RangeSliderThumb ref={ref} index={0} {...rest} />\n  },\n)\n\nexport const RangeSliderEndThumb = forwardRef<RangeSliderThumbProps, \"div\">(\n  (rest, ref) => {\n    return <RangeSliderThumb ref={ref} index={1} {...rest} />\n  },\n)\n"],"mappings":"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","names":["isInteractive","values","min","max","id","valueBounds","step","props"]}
{"version":3,"sources":["../src/progress.tsx"],"sourcesContent":["import type {\n  HTMLUIProps,\n  ThemeProps,\n  CSSUIObject,\n  Interpolation,\n  ColorModeToken,\n  CSS,\n} from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport { useAnimation } from \"@yamada-ui/use-animation\"\nimport { createContext, cx, valueToPercent } from \"@yamada-ui/utils\"\nimport type { FC } from \"react\"\n\nconst [ProgressProvider, useProgress] = createContext<\n  Record<string, CSSUIObject>\n>({\n  name: `ProgressStylesContext`,\n  errorMessage: `useProgress returned is 'undefined'. Seems you forgot to wrap the components in \"<Progress />\" `,\n})\n\ntype ProgressOptions = {\n  /**\n   * The value of the progress.\n   *\n   * @default 0\n   */\n  value?: number\n  /**\n   * The minimum value of the progress.\n   *\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum value of the progress.\n   *\n   * @default 100\n   */\n  max?: number\n  /**\n   * If `true`, the progress bar will show stripe.\n   *\n   * @default false\n   */\n  hasStripe?: boolean\n  /**\n   * If `true`, and hasStripe is `true`, the stripes will be animated.\n   *\n   * @default false\n   */\n  isStripeAnimation?: boolean\n  /**\n   * If `true`, the progress will be indeterminate and the `value` prop will be ignored.\n   *\n   * @default false\n   */\n  isAnimation?: boolean\n  /**\n   * The animation speed in seconds.\n   *\n   * @default '1.4s'\n   */\n  speed?: string | number\n  /**\n   * The CSS `color` property.\n   */\n  filledTrackColor?: ColorModeToken<CSS.Property.Color, \"colors\">\n}\n\nexport type ProgressProps = HTMLUIProps<\"div\"> &\n  ThemeProps<\"Progress\"> &\n  ProgressOptions\n\n/**\n * `Progress` is a component for visually indicating progress.\n *\n * @see Docs https://yamada-ui.com/components/feedback/progress\n */\nexport const Progress = forwardRef<ProgressProps, \"div\">((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"Progress\", props)\n  const {\n    className,\n    children,\n    value,\n    min,\n    max,\n    hasStripe,\n    isStripeAnimation,\n    isAnimation,\n    speed,\n    borderRadius: _borderRadius,\n    rounded,\n    ...rest\n  } = omitThemeProps(mergedProps, [\"filledTrackColor\"])\n\n  const borderRadius =\n    _borderRadius ?? rounded ?? (styles.track.borderRadius as string | number)\n\n  const css: CSSUIObject = {\n    w: \"100%\",\n    overflow: \"hidden\",\n    pos: \"relative\",\n    ...styles.track,\n  }\n\n  return (\n    <ProgressProvider value={styles}>\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-progress\", className)}\n        __css={css}\n        borderRadius={borderRadius}\n        {...rest}\n      >\n        <ProgressFilledTrack\n          min={min}\n          max={max}\n          value={value}\n          hasStripe={hasStripe}\n          isStripeAnimation={isStripeAnimation}\n          isAnimation={isAnimation}\n          speed={speed}\n          borderRadius={borderRadius}\n        />\n        {children}\n      </ui.div>\n    </ProgressProvider>\n  )\n})\n\ntype ProgressFilledTrackProps = HTMLUIProps<\"div\"> & ProgressProps\n\nconst ProgressFilledTrack: FC<ProgressFilledTrackProps> = ({\n  value = 0,\n  min = 0,\n  max = 100,\n  hasStripe,\n  isStripeAnimation,\n  isAnimation,\n  speed = \"1.4s\",\n  ...rest\n}) => {\n  const percent = valueToPercent(value, min, max)\n\n  const styles = useProgress()\n\n  const stripeAnimation = useAnimation({\n    keyframes: {\n      \"0%\": { bgPosition: \"1rem 0\" },\n      \"100%\": { bgPosition: \"0 0\" },\n    },\n    duration: typeof speed === \"string\" ? speed : `${speed}s`,\n    iterationCount: \"infinite\",\n    timingFunction: \"linear\",\n  })\n\n  const interpolationAnimation = useAnimation({\n    keyframes: {\n      \"0%\": { left: \"-40%\" },\n      \"100%\": { left: \"100%\" },\n    },\n    duration: typeof speed === \"string\" ? speed : `${speed}s`,\n    iterationCount: \"infinite\",\n    timingFunction: \"ease\",\n  })\n\n  isStripeAnimation = !isAnimation && hasStripe && isStripeAnimation\n\n  const css: Interpolation<{}> = {\n    ...(isStripeAnimation\n      ? {\n          animation: stripeAnimation,\n        }\n      : {}),\n    ...(isAnimation\n      ? {\n          position: \"absolute\",\n          willChange: \"left\",\n          minWidth: \"50%\",\n          animation: interpolationAnimation,\n        }\n      : {}),\n  }\n\n  const __css: CSSUIObject = {\n    w: `${percent}%`,\n    h: \"100%\",\n    ...styles.filledTrack,\n  }\n\n  return <ui.div css={css} __css={__css} {...rest} />\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,kBAKO;AACP,2BAA6B;AAC7B,mBAAkD;AAiG5C;AA9FN,IAAM,CAAC,kBAAkB,WAAW,QAAI,4BAEtC;AAAA,EACA,MAAM;AAAA,EACN,cAAc;AAChB,CAAC;AA4DM,IAAM,eAAW,wBAAiC,CAAC,OAAO,QAAQ;AAnFzE;AAoFE,QAAM,CAAC,QAAQ,WAAW,QAAI,oCAAuB,YAAY,KAAK;AACtE,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,cAAc;AAAA,IACd;AAAA,IACA,GAAG;AAAA,EACL,QAAI,4BAAe,aAAa,CAAC,kBAAkB,CAAC;AAEpD,QAAM,gBACJ,6CAAiB,YAAjB,YAA6B,OAAO,MAAM;AAE5C,QAAM,MAAmB;AAAA,IACvB,GAAG;AAAA,IACH,UAAU;AAAA,IACV,KAAK;AAAA,IACL,GAAG,OAAO;AAAA,EACZ;AAEA,SACE,4CAAC,oBAAiB,OAAO,QACvB;AAAA,IAAC,eAAG;AAAA,IAAH;AAAA,MACC;AAAA,MACA,eAAW,iBAAG,eAAe,SAAS;AAAA,MACtC,OAAO;AAAA,MACP;AAAA,MACC,GAAG;AAAA,MAEJ;AAAA;AAAA,UAAC;AAAA;AAAA,YACC;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,QACF;AAAA,QACC;AAAA;AAAA;AAAA,EACH,GACF;AAEJ,CAAC;AAID,IAAM,sBAAoD,CAAC;AAAA,EACzD,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AAAA,EACN;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAQ;AAAA,EACR,GAAG;AACL,MAAM;AACJ,QAAM,cAAU,6BAAe,OAAO,KAAK,GAAG;AAE9C,QAAM,SAAS,YAAY;AAE3B,QAAM,sBAAkB,mCAAa;AAAA,IACnC,WAAW;AAAA,MACT,MAAM,EAAE,YAAY,SAAS;AAAA,MAC7B,QAAQ,EAAE,YAAY,MAAM;AAAA,IAC9B;AAAA,IACA,UAAU,OAAO,UAAU,WAAW,QAAQ,GAAG,KAAK;AAAA,IACtD,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,EAClB,CAAC;AAED,QAAM,6BAAyB,mCAAa;AAAA,IAC1C,WAAW;AAAA,MACT,MAAM,EAAE,MAAM,OAAO;AAAA,MACrB,QAAQ,EAAE,MAAM,OAAO;AAAA,IACzB;AAAA,IACA,UAAU,OAAO,UAAU,WAAW,QAAQ,GAAG,KAAK;AAAA,IACtD,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,EAClB,CAAC;AAED,sBAAoB,CAAC,eAAe,aAAa;AAEjD,QAAM,MAAyB;AAAA,IAC7B,GAAI,oBACA;AAAA,MACE,WAAW;AAAA,IACb,IACA,CAAC;AAAA,IACL,GAAI,cACA;AAAA,MACE,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,WAAW;AAAA,IACb,IACA,CAAC;AAAA,EACP;AAEA,QAAM,QAAqB;AAAA,IACzB,GAAG,GAAG,OAAO;AAAA,IACb,GAAG;AAAA,IACH,GAAG,OAAO;AAAA,EACZ;AAEA,SAAO,4CAAC,eAAG,KAAH,EAAO,KAAU,OAAe,GAAG,MAAM;AACnD;","names":[]}
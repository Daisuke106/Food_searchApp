{"version":3,"sources":["../src/step-status.tsx","../src/step.tsx","../src/use-stepper.ts"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport type { IconProps } from \"@yamada-ui/icon\"\nimport { Icon } from \"@yamada-ui/icon\"\nimport { cx, runIfFunc } from \"@yamada-ui/utils\"\nimport type { ComponentProps, ReactNode } from \"react\"\nimport type { StepContext } from \"./step\"\nimport { useStepContext } from \"./step\"\nimport { useStepperContext } from \"./use-stepper\"\n\nexport type StepStatusProps = {\n  [key in \"complete\" | \"active\" | \"incomplete\"]?:\n    | ReactNode\n    | ((props: Omit<StepContext, \"status\">) => ReactNode)\n}\n\nexport const StepStatus = forwardRef<StepStatusProps, \"div\">(\n  (\n    {\n      className,\n      complete = <StepIcon />,\n      incomplete = <StepNumber />,\n      active = <StepNumber />,\n      ...rest\n    },\n    ref,\n  ) => {\n    const { styles } = useStepperContext()\n    const { status, ...props } = useStepContext()\n\n    const css: CSSUIObject = { ...styles.status }\n\n    let component: ReactNode | null = null\n\n    switch (status) {\n      case \"complete\":\n        component = runIfFunc(complete, props)\n\n        break\n      case \"incomplete\":\n        component = runIfFunc(incomplete, props)\n\n        break\n      case \"active\":\n        component = runIfFunc(active, props)\n\n        break\n    }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-step__status\", className)}\n        data-status={status}\n        __css={css}\n        {...rest}\n      >\n        {component ? <>{component}</> : null}\n      </ui.div>\n    )\n  },\n)\n\nexport type StepNumberProps = HTMLUIProps<\"div\">\n\nexport const StepNumber = forwardRef<StepNumberProps, \"div\">(\n  ({ className, children, ...rest }, ref) => {\n    const { styles } = useStepperContext()\n    const { status, index } = useStepContext()\n\n    const css: CSSUIObject = { ...styles.number }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-step__number\", className)}\n        data-status={status}\n        __css={css}\n        {...rest}\n      >\n        {children || index + 1}\n      </ui.div>\n    )\n  },\n)\n\nexport type StepIconProps = IconProps\n\nexport const StepIcon = forwardRef<StepIconProps, \"svg\">(\n  ({ className, ...rest }, ref) => {\n    const { styles } = useStepperContext()\n    const { status } = useStepContext()\n\n    const as = status === \"complete\" ? CheckIcon : undefined\n\n    const css: CSSUIObject = { ...styles.icon }\n\n    return (\n      <Icon\n        ref={ref}\n        as={as}\n        className={cx(\"ui-step__icon\", className)}\n        data-status={status}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n\nconst CheckIcon = (props: ComponentProps<\"svg\">) => {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth=\"0\"\n      viewBox=\"0 0 20 20\"\n      aria-hidden=\"true\"\n      height=\"1em\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  )\n}\n","import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx, createContext, dataAttr } from \"@yamada-ui/utils\"\nimport type { UseStepReturn } from \"./use-stepper\"\nimport { useStep, useStepperContext } from \"./use-stepper\"\n\nexport type StepContext = Omit<UseStepReturn, \"getStepProps\">\n\nexport const [StepProvider, useStepContext] = createContext<StepContext>({\n  name: \"StepperContext\",\n  errorMessage: `useStepContext returned is 'undefined'. Seems you forgot to wrap the components in \"<Step />\"`,\n})\n\nexport type StepProps = HTMLUIProps<\"div\">\n\nexport const Step = forwardRef<StepProps, \"div\">(\n  ({ className, ...rest }, ref) => {\n    const { orientation, showLastSeparator, styles } = useStepperContext()\n    const { index, status, isFirst, isLast, getStepProps } = useStep()\n\n    const css: CSSUIObject = { ...styles.step }\n\n    return (\n      <StepProvider value={{ index, status, isFirst, isLast }}>\n        <ui.div\n          className={cx(\"ui-step\", className)}\n          __css={css}\n          data-orientation={orientation}\n          data-stretch={dataAttr(showLastSeparator)}\n          {...getStepProps(rest, ref)}\n        />\n      </StepProvider>\n    )\n  },\n)\n","import type { CSSUIObject, HTMLUIProps, UIPropGetter } from \"@yamada-ui/core\"\nimport { createDescendant } from \"@yamada-ui/use-descendant\"\nimport { createContext, mergeRefs } from \"@yamada-ui/utils\"\nimport { useCallback } from \"react\"\n\ntype StepperContext = Omit<\n  UseStepperReturn,\n  \"descendants\" | \"getContainerProps\"\n> & {\n  styles: Record<string, CSSUIObject>\n}\n\nexport const {\n  DescendantsContextProvider: StepperDescendantsContextProvider,\n  useDescendants: useStepperDescendants,\n  useDescendant: useStepperDescendant,\n} = createDescendant<HTMLDivElement>()\n\nexport const [StepperProvider, useStepperContext] =\n  createContext<StepperContext>({\n    name: \"StepperContext\",\n    errorMessage: `useStepperContext returned is 'undefined'. Seems you forgot to wrap the components in \"<Stepper />\"`,\n  })\n\nexport type UseStepperProps = HTMLUIProps<\"div\"> & {\n  /**\n   * The active step index.\n   */\n  index: number\n  /**\n   * The orientation of the stepper.\n   *\n   * @default 'horizontal'\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * Whether to show or not the last separator while in vertical orientation.\n   *\n   * @default false\n   */\n  showLastSeparator?: boolean\n}\n\nexport const useStepper = ({\n  index,\n  orientation = \"horizontal\",\n  showLastSeparator = false,\n  ...rest\n}: UseStepperProps) => {\n  const descendants = useStepperDescendants()\n\n  const getStepStatus = useCallback(\n    (step: number): \"complete\" | \"active\" | \"incomplete\" => {\n      if (step < index) return \"complete\"\n      if (step > index) return \"incomplete\"\n\n      return \"active\"\n    },\n    [index],\n  )\n\n  const getContainerProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...rest,\n      ...props,\n      ref,\n      \"data-orientation\": orientation,\n    }),\n    [orientation, rest],\n  )\n\n  return {\n    descendants,\n    index,\n    orientation,\n    showLastSeparator,\n    getStepStatus,\n    getContainerProps,\n  }\n}\n\nexport type UseStepperReturn = ReturnType<typeof useStepper>\n\nexport const useStep = () => {\n  const { orientation, getStepStatus } = useStepperContext()\n\n  const { index, register, descendants } = useStepperDescendant()\n\n  const isFirst = index === 0\n  const isLast = index === descendants.lastValue()?.index\n\n  const status = getStepStatus(index)\n\n  const getStepProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(ref, register),\n      \"data-status\": status,\n      \"data-orientation\": orientation,\n    }),\n    [orientation, register, status],\n  )\n\n  return { index, status, isFirst, isLast, getStepProps }\n}\n\nexport type UseStepReturn = ReturnType<typeof useStep>\n"],"mappings":"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","names":["import_core","import_utils","import_utils","import_jsx_runtime"]}
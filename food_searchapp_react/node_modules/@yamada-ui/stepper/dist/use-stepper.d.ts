import * as react from 'react';
import * as _yamada_ui_use_descendant from '@yamada-ui/use-descendant';
import { HTMLUIProps, UIPropGetter, CSSUIObject } from '@yamada-ui/core';

type StepperContext = Omit<UseStepperReturn, "descendants" | "getContainerProps"> & {
    styles: Record<string, CSSUIObject>;
};
declare const StepperDescendantsContextProvider: react.Provider<{
    register: (nodeOrOptions: HTMLDivElement | {
        disabled?: boolean | undefined;
        id?: string | undefined;
        filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined;
    } | null) => void | ((node: HTMLDivElement | null) => void);
    unregister: (node: HTMLDivElement) => void;
    destroy: () => void;
    count: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => number;
    values: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}>[];
    value: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    indexOf: (node: HTMLDivElement | null) => number;
    firstValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    lastValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    prevValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    nextValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    enabledCount: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => number;
    enabledValues: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}>[];
    enabledValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    enabledIndexOf: (node: HTMLDivElement | null, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => number;
    enabledFirstValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    enabledLastValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    enabledPrevValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    enabledNextValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
}>;
declare const useStepperDescendants: () => {
    register: (nodeOrOptions: HTMLDivElement | {
        disabled?: boolean | undefined;
        id?: string | undefined;
        filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined;
    } | null) => void | ((node: HTMLDivElement | null) => void);
    unregister: (node: HTMLDivElement) => void;
    destroy: () => void;
    count: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => number;
    values: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}>[];
    value: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    indexOf: (node: HTMLDivElement | null) => number;
    firstValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    lastValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    prevValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    nextValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    enabledCount: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => number;
    enabledValues: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}>[];
    enabledValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    enabledIndexOf: (node: HTMLDivElement | null, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => number;
    enabledFirstValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    enabledLastValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    enabledPrevValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    enabledNextValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
};
declare const useStepperDescendant: (options?: {
    disabled?: boolean | undefined;
    id?: string | undefined;
    filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined;
} | undefined) => {
    descendants: {
        register: (nodeOrOptions: HTMLElement | _yamada_ui_use_descendant.DescendantOptions<HTMLElement, Record<string, any>> | null) => void | ((node: HTMLElement | null) => void);
        unregister: (node: HTMLElement) => void;
        destroy: () => void;
        count: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined) => number;
        values: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLElement, Record<string, any>>[];
        value: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLElement, Record<string, any>> | undefined;
        indexOf: (node: HTMLElement | null) => number;
        firstValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLElement, Record<string, any>> | undefined;
        lastValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLElement, Record<string, any>> | undefined;
        prevValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLElement, Record<string, any>> | undefined;
        nextValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLElement, Record<string, any>> | undefined;
        enabledCount: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined) => number;
        enabledValues: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLElement, Record<string, any>>[];
        enabledValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLElement, Record<string, any>> | undefined;
        enabledIndexOf: (node: HTMLElement | null, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined) => number;
        enabledFirstValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLElement, Record<string, any>> | undefined;
        enabledLastValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLElement, Record<string, any>> | undefined;
        enabledPrevValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLElement, Record<string, any>> | undefined;
        enabledNextValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLElement, Record<string, any>> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLElement, Record<string, any>> | undefined;
    };
    index: number;
    enabledIndex: number;
    register: (node: HTMLDivElement | null) => void;
};
declare const StepperProvider: react.Provider<StepperContext>;
declare const useStepperContext: () => StepperContext;
type UseStepperProps = HTMLUIProps<"div"> & {
    /**
     * The active step index.
     */
    index: number;
    /**
     * The orientation of the stepper.
     *
     * @default 'horizontal'
     */
    orientation?: "horizontal" | "vertical";
    /**
     * Whether to show or not the last separator while in vertical orientation.
     *
     * @default false
     */
    showLastSeparator?: boolean;
};
declare const useStepper: ({ index, orientation, showLastSeparator, ...rest }: UseStepperProps) => {
    descendants: {
        register: (nodeOrOptions: HTMLDivElement | {
            disabled?: boolean | undefined;
            id?: string | undefined;
            filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined;
        } | null) => void | ((node: HTMLDivElement | null) => void);
        unregister: (node: HTMLDivElement) => void;
        destroy: () => void;
        count: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => number;
        values: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}>[];
        value: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
        indexOf: (node: HTMLDivElement | null) => number;
        firstValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
        lastValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
        prevValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
        nextValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
        enabledCount: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => number;
        enabledValues: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}>[];
        enabledValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
        enabledIndexOf: (node: HTMLDivElement | null, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => number;
        enabledFirstValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
        enabledLastValue: (filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
        enabledPrevValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
        enabledNextValue: (index: number, filter?: _yamada_ui_use_descendant.FilterDescendant<HTMLDivElement, {}> | undefined, loop?: boolean) => _yamada_ui_use_descendant.Descendant<HTMLDivElement, {}> | undefined;
    };
    index: number;
    orientation: "vertical" | "horizontal";
    showLastSeparator: boolean;
    getStepStatus: (step: number) => "complete" | "active" | "incomplete";
    getContainerProps: UIPropGetter;
};
type UseStepperReturn = ReturnType<typeof useStepper>;
declare const useStep: () => {
    index: number;
    status: "active" | "complete" | "incomplete";
    isFirst: boolean;
    isLast: boolean;
    getStepProps: UIPropGetter;
};
type UseStepReturn = ReturnType<typeof useStep>;

export { StepperDescendantsContextProvider, StepperProvider, type UseStepReturn, type UseStepperProps, type UseStepperReturn, useStep, useStepper, useStepperContext, useStepperDescendant, useStepperDescendants };

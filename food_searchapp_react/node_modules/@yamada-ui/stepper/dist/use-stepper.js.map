{"version":3,"sources":["../src/use-stepper.ts"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps, UIPropGetter } from \"@yamada-ui/core\"\nimport { createDescendant } from \"@yamada-ui/use-descendant\"\nimport { createContext, mergeRefs } from \"@yamada-ui/utils\"\nimport { useCallback } from \"react\"\n\ntype StepperContext = Omit<\n  UseStepperReturn,\n  \"descendants\" | \"getContainerProps\"\n> & {\n  styles: Record<string, CSSUIObject>\n}\n\nexport const {\n  DescendantsContextProvider: StepperDescendantsContextProvider,\n  useDescendants: useStepperDescendants,\n  useDescendant: useStepperDescendant,\n} = createDescendant<HTMLDivElement>()\n\nexport const [StepperProvider, useStepperContext] =\n  createContext<StepperContext>({\n    name: \"StepperContext\",\n    errorMessage: `useStepperContext returned is 'undefined'. Seems you forgot to wrap the components in \"<Stepper />\"`,\n  })\n\nexport type UseStepperProps = HTMLUIProps<\"div\"> & {\n  /**\n   * The active step index.\n   */\n  index: number\n  /**\n   * The orientation of the stepper.\n   *\n   * @default 'horizontal'\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * Whether to show or not the last separator while in vertical orientation.\n   *\n   * @default false\n   */\n  showLastSeparator?: boolean\n}\n\nexport const useStepper = ({\n  index,\n  orientation = \"horizontal\",\n  showLastSeparator = false,\n  ...rest\n}: UseStepperProps) => {\n  const descendants = useStepperDescendants()\n\n  const getStepStatus = useCallback(\n    (step: number): \"complete\" | \"active\" | \"incomplete\" => {\n      if (step < index) return \"complete\"\n      if (step > index) return \"incomplete\"\n\n      return \"active\"\n    },\n    [index],\n  )\n\n  const getContainerProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...rest,\n      ...props,\n      ref,\n      \"data-orientation\": orientation,\n    }),\n    [orientation, rest],\n  )\n\n  return {\n    descendants,\n    index,\n    orientation,\n    showLastSeparator,\n    getStepStatus,\n    getContainerProps,\n  }\n}\n\nexport type UseStepperReturn = ReturnType<typeof useStepper>\n\nexport const useStep = () => {\n  const { orientation, getStepStatus } = useStepperContext()\n\n  const { index, register, descendants } = useStepperDescendant()\n\n  const isFirst = index === 0\n  const isLast = index === descendants.lastValue()?.index\n\n  const status = getStepStatus(index)\n\n  const getStepProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(ref, register),\n      \"data-status\": status,\n      \"data-orientation\": orientation,\n    }),\n    [orientation, register, status],\n  )\n\n  return { index, status, isFirst, isLast, getStepProps }\n}\n\nexport type UseStepReturn = ReturnType<typeof useStep>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,4BAAiC;AACjC,mBAAyC;AACzC,mBAA4B;AASrB,IAAM;AAAA,EACX,4BAA4B;AAAA,EAC5B,gBAAgB;AAAA,EAChB,eAAe;AACjB,QAAI,wCAAiC;AAE9B,IAAM,CAAC,iBAAiB,iBAAiB,QAC9C,4BAA8B;AAAA,EAC5B,MAAM;AAAA,EACN,cAAc;AAChB,CAAC;AAqBI,IAAM,aAAa,CAAC;AAAA,EACzB;AAAA,EACA,cAAc;AAAA,EACd,oBAAoB;AAAA,EACpB,GAAG;AACL,MAAuB;AACrB,QAAM,cAAc,sBAAsB;AAE1C,QAAM,oBAAgB;AAAA,IACpB,CAAC,SAAuD;AACtD,UAAI,OAAO;AAAO,eAAO;AACzB,UAAI,OAAO;AAAO,eAAO;AAEzB,aAAO;AAAA,IACT;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAEA,QAAM,wBAAkC;AAAA,IACtC,CAAC,QAAQ,CAAC,GAAG,MAAM,UAAU;AAAA,MAC3B,GAAG;AAAA,MACH,GAAG;AAAA,MACH;AAAA,MACA,oBAAoB;AAAA,IACtB;AAAA,IACA,CAAC,aAAa,IAAI;AAAA,EACpB;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAIO,IAAM,UAAU,MAAM;AAnF7B;AAoFE,QAAM,EAAE,aAAa,cAAc,IAAI,kBAAkB;AAEzD,QAAM,EAAE,OAAO,UAAU,YAAY,IAAI,qBAAqB;AAE9D,QAAM,UAAU,UAAU;AAC1B,QAAM,SAAS,YAAU,iBAAY,UAAU,MAAtB,mBAAyB;AAElD,QAAM,SAAS,cAAc,KAAK;AAElC,QAAM,mBAA6B;AAAA,IACjC,CAAC,QAAQ,CAAC,GAAG,MAAM,UAAU;AAAA,MAC3B,GAAG;AAAA,MACH,SAAK,wBAAU,KAAK,QAAQ;AAAA,MAC5B,eAAe;AAAA,MACf,oBAAoB;AAAA,IACtB;AAAA,IACA,CAAC,aAAa,UAAU,MAAM;AAAA,EAChC;AAEA,SAAO,EAAE,OAAO,QAAQ,SAAS,QAAQ,aAAa;AACxD;","names":[]}
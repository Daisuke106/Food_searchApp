import * as _yamada_ui_core from '@yamada-ui/core';
import { ColorModeToken, CSS } from '@yamada-ui/core';
import { ButtonProps } from '@yamada-ui/button';
import { FormControlOptions } from '@yamada-ui/form-control';
import { ReactNode, ForwardedRef } from 'react';

type Props = {
    onClick: () => void;
    disabled?: boolean;
    readOnly?: boolean;
    required?: boolean;
} & FormControlOptions;
type FileButtonOptions = {
    /**
     * The border color when the button is invalid.
     */
    errorBorderColor?: ColorModeToken<CSS.Property.BorderColor, "colors">;
    /**
     * Function to be called when a file change event occurs.
     */
    onChange?: (files: File[] | undefined) => void;
    children?: ReactNode | ((props: Props) => ReactNode);
    /**
     * Ref to a reset function.
     */
    resetRef?: ForwardedRef<() => void>;
};
type InputProps = Partial<Pick<HTMLInputElement, "accept" | "multiple">>;
type FileButtonProps = Omit<ButtonProps, "onChange" | "children"> & InputProps & FileButtonOptions & FormControlOptions;
/**
 * `FileButton` is a button component used for users to select files.
 *
 * @see Docs https://yamada-ui.com/components/forms/file-button
 */
declare const FileButton: _yamada_ui_core.Component<"input", FileButtonProps>;

export { FileButton, type FileButtonProps };

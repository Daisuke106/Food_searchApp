import * as _yamada_ui_core from '@yamada-ui/core';
import { ThemeProps, HTMLUIProps } from '@yamada-ui/core';
import { PortalProps } from '@yamada-ui/portal';
import { FC, MouseEventHandler } from 'react';
import { SelectIconProps } from './select-icon.mjs';
import { SelectListProps } from './select-list.mjs';
import { U as UseSelectProps } from './option-JnGtgg17.mjs';
import { SelectItem } from './select.mjs';
import '@yamada-ui/motion';
import '@yamada-ui/use-descendant';
import '@yamada-ui/form-control';
import '@yamada-ui/popover';

type MultiSelectOptions = {
    /**
     * If provided, generate options based on items.
     */
    items?: SelectItem[];
    /**
     * The custom display value to use.
     */
    component?: FC<{
        value: string | number;
        label: string;
        index: number;
        onRemove: MouseEventHandler<HTMLElement>;
    }>;
    /**
     * The visual separator between each value.
     *
     * @default ','
     */
    separator?: string;
    /**
     * If `true`, display the select clear icon.
     *
     * @default true
     */
    isClearable?: boolean;
    /**
     * The border color when the input is focused.
     */
    focusBorderColor?: string;
    /**
     * The border color when the input is invalid.
     */
    errorBorderColor?: string;
    /**
     * Props for select container element.
     */
    containerProps?: Omit<HTMLUIProps<"div">, "children">;
    /**
     * Props for select list element.
     */
    listProps?: Omit<SelectListProps, "children">;
    /**
     * Props for select icon element.
     */
    iconProps?: SelectIconProps;
    /**
     * Props for select clear icon element.
     */
    clearIconProps?: SelectIconProps;
    /**
     * Props to be forwarded to the portal component.
     *
     * @default '{ isDisabled: true }'
     */
    portalProps?: Omit<PortalProps, "children">;
};
type MultiSelectProps = ThemeProps<"MultiSelect"> & Omit<UseSelectProps<string[]>, "placeholderInOptions" | "isEmpty"> & MultiSelectOptions;
/**
 * `MultiSelect` is a component used for allowing users to select multiple values from a list of options.
 *
 * @see Docs https://yamada-ui.com/components/forms/multi-select
 */
declare const MultiSelect: _yamada_ui_core.Component<"div", MultiSelectProps>;

export { MultiSelect, type MultiSelectProps };

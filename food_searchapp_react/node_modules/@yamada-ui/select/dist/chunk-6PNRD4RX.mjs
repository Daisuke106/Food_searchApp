"use client"
import {
  useSelectContext,
  useSelectOption
} from "./chunk-VOZ36AIW.mjs";

// src/option.tsx
import { ui, forwardRef } from "@yamada-ui/core";
import { cx } from "@yamada-ui/utils";
import { jsx, jsxs } from "react/jsx-runtime";
var Option = forwardRef(
  ({ className, icon, ...rest }, ref) => {
    const { styles } = useSelectContext();
    const { isSelected, customIcon, children, getOptionProps } = useSelectOption(ref, rest);
    icon != null ? icon : icon = customIcon;
    const css = {
      textDecoration: "none",
      color: "inherit",
      userSelect: "none",
      display: "flex",
      width: "100%",
      alignItems: "center",
      textAlign: "start",
      flex: "0 0 auto",
      outline: 0,
      gap: "0.75rem",
      ...styles.item
    };
    return /* @__PURE__ */ jsxs(
      ui.li,
      {
        className: cx("ui-select__item", className),
        __css: css,
        ...getOptionProps(),
        children: [
          icon !== null ? /* @__PURE__ */ jsx(OptionIcon, { opacity: isSelected ? 1 : 0, children: icon || /* @__PURE__ */ jsx(CheckIcon, {}) }) : null,
          /* @__PURE__ */ jsx(ui.span, { style: { flex: 1 }, "data-label": true, children })
        ]
      }
    );
  }
);
var OptionIcon = forwardRef(
  ({ className, ...rest }, ref) => {
    const { styles } = useSelectContext();
    const css = {
      flexShrink: 0,
      display: "inline-flex",
      justifyContent: "center",
      alignItems: "center",
      fontSize: "0.85em",
      ...styles.itemIcon
    };
    return /* @__PURE__ */ jsx(
      ui.span,
      {
        ref,
        className: cx("ui-select__item__icon", className),
        __css: css,
        ...rest
      }
    );
  }
);
var CheckIcon = () => /* @__PURE__ */ jsx("svg", { viewBox: "0 0 14 14", width: "1em", height: "1em", children: /* @__PURE__ */ jsx(
  "polygon",
  {
    fill: "currentColor",
    points: "5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039"
  }
) });

export {
  Option
};
//# sourceMappingURL=chunk-6PNRD4RX.mjs.map
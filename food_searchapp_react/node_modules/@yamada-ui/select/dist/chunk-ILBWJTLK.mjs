"use client"
import {
  useSelectContext
} from "./chunk-VOZ36AIW.mjs";

// src/select-icon.tsx
import { ui, forwardRef } from "@yamada-ui/core";
import { ChevronIcon, CloseIcon } from "@yamada-ui/icon";
import { useClickable } from "@yamada-ui/use-clickable";
import { cx, getValidChildren, isValidElement } from "@yamada-ui/utils";
import { cloneElement, useRef } from "react";
import { jsx } from "react/jsx-runtime";
var SelectIcon = forwardRef(
  ({ className, children, __css, ...rest }, ref) => {
    const { styles } = useSelectContext();
    const css = {
      position: "absolute",
      top: "50%",
      transform: "translateY(-50%)",
      display: "inline-flex",
      alignItems: "center",
      justifyContent: "center",
      pointerEvents: "none",
      cursor: "pointer",
      ...styles.icon,
      ...__css
    };
    const validChildren = getValidChildren(children);
    const cloneChildren = validChildren.map(
      (child) => cloneElement(child, {
        focusable: false,
        "aria-hidden": true,
        style: {
          maxWidth: "1em",
          maxHeight: "1em",
          color: "currentColor"
        }
      })
    );
    return /* @__PURE__ */ jsx(
      ui.div,
      {
        ref,
        className: cx("ui-select__icon", className),
        __css: css,
        ...rest,
        children: isValidElement(children) ? cloneChildren : /* @__PURE__ */ jsx(ChevronIcon, {})
      }
    );
  }
);
var SelectClearIcon = ({
  className,
  children,
  ...props
}) => {
  const ref = useRef(null);
  const { styles } = useSelectContext();
  const isDisabled = props.disabled;
  const rest = useClickable({
    ref,
    isDisabled,
    ...props
  });
  return /* @__PURE__ */ jsx(
    SelectIcon,
    {
      "aria-label": "Clear value",
      className: cx("ui-select__clear-icon", className),
      __css: styles.clearIcon,
      ...rest,
      children: children != null ? children : /* @__PURE__ */ jsx(CloseIcon, { w: "0.5em", h: "0.5em" })
    }
  );
};

export {
  SelectIcon,
  SelectClearIcon
};
//# sourceMappingURL=chunk-ILBWJTLK.mjs.map
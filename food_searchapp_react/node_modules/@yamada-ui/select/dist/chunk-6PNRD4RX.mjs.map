{"version":3,"sources":["../src/option.tsx"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport type { ReactElement, FC } from \"react\"\nimport type { UseSelectOptionProps } from \"./use-select\"\nimport { useSelectContext, useSelectOption } from \"./use-select\"\n\ntype OptionOptions = { icon?: ReactElement }\n\nexport type OptionProps = UseSelectOptionProps & OptionOptions\n\nexport const Option = forwardRef<OptionProps, \"li\">(\n  ({ className, icon, ...rest }, ref) => {\n    const { styles } = useSelectContext()\n    const { isSelected, customIcon, children, getOptionProps } =\n      useSelectOption(ref, rest)\n\n    icon ??= customIcon\n\n    const css: CSSUIObject = {\n      textDecoration: \"none\",\n      color: \"inherit\",\n      userSelect: \"none\",\n      display: \"flex\",\n      width: \"100%\",\n      alignItems: \"center\",\n      textAlign: \"start\",\n      flex: \"0 0 auto\",\n      outline: 0,\n      gap: \"0.75rem\",\n      ...styles.item,\n    }\n\n    return (\n      <ui.li\n        className={cx(\"ui-select__item\", className)}\n        __css={css}\n        {...getOptionProps()}\n      >\n        {icon !== null ? (\n          <OptionIcon opacity={isSelected ? 1 : 0}>\n            {icon || <CheckIcon />}\n          </OptionIcon>\n        ) : null}\n\n        <ui.span style={{ flex: 1 }} data-label>\n          {children}\n        </ui.span>\n      </ui.li>\n    )\n  },\n)\n\ntype OptionIconProps = HTMLUIProps<\"span\">\n\nconst OptionIcon = forwardRef<OptionIconProps, \"span\">(\n  ({ className, ...rest }, ref) => {\n    const { styles } = useSelectContext()\n\n    const css: CSSUIObject = {\n      flexShrink: 0,\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontSize: \"0.85em\",\n      ...styles.itemIcon,\n    }\n\n    return (\n      <ui.span\n        ref={ref}\n        className={cx(\"ui-select__item__icon\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n\nconst CheckIcon: FC = () => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\">\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n"],"mappings":";;;;;;;AACA,SAAS,IAAI,kBAAkB;AAC/B,SAAS,UAAU;AAgCb,SAOe,KAPf;AAvBC,IAAM,SAAS;AAAA,EACpB,CAAC,EAAE,WAAW,MAAM,GAAG,KAAK,GAAG,QAAQ;AACrC,UAAM,EAAE,OAAO,IAAI,iBAAiB;AACpC,UAAM,EAAE,YAAY,YAAY,UAAU,eAAe,IACvD,gBAAgB,KAAK,IAAI;AAE3B,iCAAS;AAET,UAAM,MAAmB;AAAA,MACvB,gBAAgB;AAAA,MAChB,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,MAAM;AAAA,MACN,SAAS;AAAA,MACT,KAAK;AAAA,MACL,GAAG,OAAO;AAAA,IACZ;AAEA,WACE;AAAA,MAAC,GAAG;AAAA,MAAH;AAAA,QACC,WAAW,GAAG,mBAAmB,SAAS;AAAA,QAC1C,OAAO;AAAA,QACN,GAAG,eAAe;AAAA,QAElB;AAAA,mBAAS,OACR,oBAAC,cAAW,SAAS,aAAa,IAAI,GACnC,kBAAQ,oBAAC,aAAU,GACtB,IACE;AAAA,UAEJ,oBAAC,GAAG,MAAH,EAAQ,OAAO,EAAE,MAAM,EAAE,GAAG,cAAU,MACpC,UACH;AAAA;AAAA;AAAA,IACF;AAAA,EAEJ;AACF;AAIA,IAAM,aAAa;AAAA,EACjB,CAAC,EAAE,WAAW,GAAG,KAAK,GAAG,QAAQ;AAC/B,UAAM,EAAE,OAAO,IAAI,iBAAiB;AAEpC,UAAM,MAAmB;AAAA,MACvB,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,GAAG,OAAO;AAAA,IACZ;AAEA,WACE;AAAA,MAAC,GAAG;AAAA,MAAH;AAAA,QACC;AAAA,QACA,WAAW,GAAG,yBAAyB,SAAS;AAAA,QAChD,OAAO;AAAA,QACN,GAAG;AAAA;AAAA,IACN;AAAA,EAEJ;AACF;AAEA,IAAM,YAAgB,MACpB,oBAAC,SAAI,SAAQ,aAAY,OAAM,OAAM,QAAO,OAC1C;AAAA,EAAC;AAAA;AAAA,IACC,MAAK;AAAA,IACL,QAAO;AAAA;AACT,GACF;","names":[]}
import * as _yamada_ui_core from '@yamada-ui/core';
import { ThemeProps, CSSUIObject, Token, CSSUIProps } from '@yamada-ui/core';
import { FocusLockProps } from '@yamada-ui/focus-lock';
import { MotionProps, MotionTransitionProperties } from '@yamada-ui/motion';
import { PortalProps } from '@yamada-ui/portal';

type ModalContext = ModalOptions & {
    styles: Record<string, CSSUIObject>;
};
declare const useModal: () => ModalContext;

type ModalOptions = Pick<FocusLockProps, "autoFocus" | "initialFocusRef" | "finalFocusRef" | "restoreFocus" | "lockFocusAcrossFrames"> & {
    /**
     * If `true`, the open will be opened.
     */
    isOpen: boolean;
    /**
     * Callback invoked to close the modal.
     */
    onClose?: () => void;
    /**
     * Callback fired when the overlay is clicked.
     */
    onOverlayClick?: () => void;
    /**
     * Callback fired when the escape key is pressed and focus is within modal.
     */
    onEsc?(): void;
    /**
     * Callback function to run side effects after the modal has closed.
     */
    onCloseComplete?: () => void;
    /**
     * The placement of the modal.
     *
     * @default 'center'
     */
    placement?: Token<"center" | "top" | "right" | "bottom" | "left" | "top-left" | "top-right" | "bottom-left" | "bottom-right">;
    /**
     * The CSS `padding` property.
     */
    outside?: CSSUIProps["p"];
    /**
     * If `true`, display the modal close button.
     *
     * @default true
     */
    withCloseButton?: boolean;
    /**
     * If `true`, display the modal overlay.
     *
     * @default true
     */
    withOverlay?: boolean;
    /**
     * Handle zoom or pinch gestures on iOS devices when scroll locking is enabled.
     *
     * @default false.
     */
    allowPinchZoom?: boolean;
    /**
     * Where scroll behavior should originate.
     *
     * - `inside`: scroll only occurs within the `ModalBody`.
     * - `outside`: the entire `ModalContent` will scroll within the viewport.
     *
     * @default 'inside'
     */
    scrollBehavior?: "inside" | "outside";
    /**
     * If `true`, scrolling will be disabled on the `body` when the modal opens.
     *
     * @default true
     */
    blockScrollOnMount?: boolean;
    /**
     * If `true`, the modal will close when the overlay is clicked.
     *
     * @default true
     */
    closeOnOverlay?: boolean;
    /**
     * If `true`, the modal will close when the `Esc` key is pressed.
     *
     * @default true
     */
    closeOnEsc?: boolean;
    /**
     * The animation of the tooltip.
     *
     * @default 'scale'
     */
    animation?: "scale" | "top" | "right" | "left" | "bottom" | "none";
    /**
     * The animation duration.
     */
    duration?: MotionTransitionProperties["duration"];
    /**
     * Props to be forwarded to the portal component.
     */
    portalProps?: Omit<PortalProps, "children">;
};
type ModalProps = Omit<MotionProps<"section">, "scrollBehavior" | "animation" | "color" | "transition"> & ThemeProps<"Modal"> & ModalOptions;
/**
 * `Modal` is a component that is displayed over the main content to focus the user's attention solely on the information.
 *
 * @see Docs https://yamada-ui.com/components/overlay/modal
 */
declare const Modal: _yamada_ui_core.Component<"section", ModalProps>;

export { Modal, type ModalProps, useModal };

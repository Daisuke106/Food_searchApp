"use client"
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  useHover: () => useHover
});
module.exports = __toCommonJS(src_exports);
var import_react = require("react");
var useHover = () => {
  const [hovered, setHovered] = (0, import_react.useState)(false);
  const ref = (0, import_react.useRef)(null);
  const onMouseEnter = (0, import_react.useCallback)(() => setHovered(true), []);
  const onMouseLeave = (0, import_react.useCallback)(() => setHovered(false), []);
  (0, import_react.useEffect)(() => {
    const el = ref.current;
    if (el) {
      el.addEventListener("mouseenter", onMouseEnter);
      el.addEventListener("mouseleave", onMouseLeave);
      return () => {
        el.removeEventListener("mouseenter", onMouseEnter);
        el.removeEventListener("mouseleave", onMouseLeave);
      };
    }
  }, [onMouseEnter, onMouseLeave]);
  return { ref, hovered };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useHover
});
//# sourceMappingURL=index.js.map
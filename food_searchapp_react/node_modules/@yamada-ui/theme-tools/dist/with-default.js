"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/with-default.ts
var with_default_exports = {};
__export(with_default_exports, {
  withDefaultColorScheme: () => withDefaultColorScheme,
  withDefaultProps: () => withDefaultProps,
  withDefaultSize: () => withDefaultSize,
  withDefaultVariant: () => withDefaultVariant
});
module.exports = __toCommonJS(with_default_exports);
var import_utils = require("@yamada-ui/utils");
var withDefaultSize = ({
  size,
  components
}) => (theme) => {
  var _a;
  let keys = Object.keys((_a = theme.components) != null ? _a : {});
  if ((0, import_utils.isArray)(components))
    keys = components;
  return (0, import_utils.merge)(theme, {
    components: Object.fromEntries(
      keys.map((key) => [key, { defaultProps: { size } }])
    )
  });
};
var withDefaultVariant = ({
  variant,
  components
}) => (theme) => {
  var _a;
  let keys = Object.keys((_a = theme.components) != null ? _a : {});
  if ((0, import_utils.isArray)(components))
    keys = components;
  return (0, import_utils.merge)(theme, {
    components: Object.fromEntries(
      keys.map((key) => [key, { defaultProps: { variant } }])
    )
  });
};
var withDefaultColorScheme = ({
  colorScheme,
  components
}) => (theme) => {
  var _a;
  let keys = Object.keys((_a = theme.components) != null ? _a : {});
  if ((0, import_utils.isArray)(components))
    keys = components;
  return (0, import_utils.merge)(theme, {
    components: Object.fromEntries(
      keys.map((key) => [key, { defaultProps: { colorScheme } }])
    )
  });
};
var withDefaultProps = ({
  defaultProps,
  components
}) => (theme) => {
  var _a;
  let keys = Object.keys((_a = theme.components) != null ? _a : {});
  if ((0, import_utils.isArray)(components))
    keys = components;
  return (0, import_utils.merge)(theme, {
    components: Object.fromEntries(
      keys.map((key) => [key, { defaultProps }])
    )
  });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  withDefaultColorScheme,
  withDefaultProps,
  withDefaultSize,
  withDefaultVariant
});
//# sourceMappingURL=with-default.js.map
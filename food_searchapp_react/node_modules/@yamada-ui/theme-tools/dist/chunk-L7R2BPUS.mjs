// src/with-default.ts
import { isArray, merge } from "@yamada-ui/utils";
var withDefaultSize = ({
  size,
  components
}) => (theme) => {
  var _a;
  let keys = Object.keys((_a = theme.components) != null ? _a : {});
  if (isArray(components))
    keys = components;
  return merge(theme, {
    components: Object.fromEntries(
      keys.map((key) => [key, { defaultProps: { size } }])
    )
  });
};
var withDefaultVariant = ({
  variant,
  components
}) => (theme) => {
  var _a;
  let keys = Object.keys((_a = theme.components) != null ? _a : {});
  if (isArray(components))
    keys = components;
  return merge(theme, {
    components: Object.fromEntries(
      keys.map((key) => [key, { defaultProps: { variant } }])
    )
  });
};
var withDefaultColorScheme = ({
  colorScheme,
  components
}) => (theme) => {
  var _a;
  let keys = Object.keys((_a = theme.components) != null ? _a : {});
  if (isArray(components))
    keys = components;
  return merge(theme, {
    components: Object.fromEntries(
      keys.map((key) => [key, { defaultProps: { colorScheme } }])
    )
  });
};
var withDefaultProps = ({
  defaultProps,
  components
}) => (theme) => {
  var _a;
  let keys = Object.keys((_a = theme.components) != null ? _a : {});
  if (isArray(components))
    keys = components;
  return merge(theme, {
    components: Object.fromEntries(
      keys.map((key) => [key, { defaultProps }])
    )
  });
};

export {
  withDefaultSize,
  withDefaultVariant,
  withDefaultColorScheme,
  withDefaultProps
};
//# sourceMappingURL=chunk-L7R2BPUS.mjs.map
"use client"
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/menu-list.tsx
var menu_list_exports = {};
__export(menu_list_exports, {
  MenuList: () => MenuList
});
module.exports = __toCommonJS(menu_list_exports);
var import_core2 = require("@yamada-ui/core");
var import_popover2 = require("@yamada-ui/popover");
var import_utils2 = require("@yamada-ui/utils");
var import_react2 = require("react");

// src/menu.tsx
var import_core = require("@yamada-ui/core");
var import_popover = require("@yamada-ui/popover");
var import_use_descendant = require("@yamada-ui/use-descendant");
var import_use_disclosure = require("@yamada-ui/use-disclosure");
var import_utils = require("@yamada-ui/utils");
var import_react = require("react");
var import_jsx_runtime = require("react/jsx-runtime");
var {
  DescendantsContextProvider,
  useDescendantsContext: useMenuDescendantsContext,
  useDescendants,
  useDescendant: useMenuDescendant
} = (0, import_use_descendant.createDescendant)();
var [MenuProvider, useMenu] = (0, import_utils.createContext)({
  name: "MenuContext",
  errorMessage: `useMenu returned is 'undefined'. Seems you forgot to wrap the components in "<Menu />"`
});
var [UpstreamMenuProvider, useUpstreamMenu] = (0, import_utils.createContext)({
  strict: false,
  name: "UpstreamMenuContext"
});

// src/menu-list.tsx
var import_jsx_runtime2 = require("react/jsx-runtime");
var MenuList = (0, import_core2.forwardRef)(
  ({ className, ...rest }, ref) => {
    const { menuRef, focusedIndex, setFocusedIndex, onClose, styles } = useMenu();
    const descendants = useMenuDescendantsContext();
    const onNext = (0, import_react2.useCallback)(() => {
      const next = descendants.enabledNextValue(focusedIndex);
      if (next)
        setFocusedIndex(next.index);
    }, [descendants, focusedIndex, setFocusedIndex]);
    const onPrev = (0, import_react2.useCallback)(() => {
      const prev = descendants.enabledPrevValue(focusedIndex);
      if (prev)
        setFocusedIndex(prev.index);
    }, [descendants, focusedIndex, setFocusedIndex]);
    const onFirst = (0, import_react2.useCallback)(() => {
      const first = descendants.enabledFirstValue();
      if (first)
        setFocusedIndex(first.index);
    }, [descendants, setFocusedIndex]);
    const onLast = (0, import_react2.useCallback)(() => {
      const last = descendants.enabledLastValue();
      if (last)
        setFocusedIndex(last.index);
    }, [descendants, setFocusedIndex]);
    const onKeyDown = (0, import_react2.useCallback)(
      (ev) => {
        const actions = {
          Tab: (ev2) => ev2.preventDefault(),
          Escape: onClose,
          ArrowDown: focusedIndex === -1 ? onFirst : onNext,
          ArrowUp: focusedIndex === -1 ? onLast : onPrev,
          Home: onFirst,
          End: onLast
        };
        const action = actions[ev.key];
        if (!action)
          return;
        ev.preventDefault();
        action(ev);
      },
      [focusedIndex, onClose, onFirst, onLast, onNext, onPrev]
    );
    const css = { ...styles.list };
    return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
      import_popover2.PopoverContent,
      {
        as: "ul",
        ref: (0, import_utils2.mergeRefs)(menuRef, ref),
        className: (0, import_utils2.cx)("ui-menu__list", className),
        role: "menu",
        tabIndex: -1,
        __css: css,
        ...rest,
        onKeyDown: (0, import_utils2.handlerAll)(rest.onKeyDown, onKeyDown)
      }
    );
  }
);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  MenuList
});
//# sourceMappingURL=menu-list.js.map
import * as _yamada_ui_core from '@yamada-ui/core';
import { HTMLUIProps } from '@yamada-ui/core';
import * as react from 'react';
import { RefObject, KeyboardEventHandler, Dispatch, SetStateAction, MutableRefObject, ReactElement } from 'react';

type UpstreamMenuItemContext = {
    onUpstreamRestoreFocus: () => void;
    onKeyDownRef: RefObject<KeyboardEventHandler<HTMLButtonElement>>;
    setDownstreamOpen: Dispatch<SetStateAction<boolean>>;
    hasDownstreamRef: MutableRefObject<boolean>;
};
declare const UpstreamMenuItemProvider: react.Provider<UpstreamMenuItemContext>;
declare const useUpstreamMenuItem: () => UpstreamMenuItemContext;
type MenuItemOptions = {
    /**
     * If `true`, the menu item will be disabled.
     *
     * @default false
     */
    isDisabled?: boolean;
    /**
     * If `true`, the menu item will be focusable.
     *
     * @default false
     */
    isFocusable?: boolean;
    /**
     * If `true`, the list element will be closed when selected.
     *
     * @default false
     */
    closeOnSelect?: boolean;
    /**
     * The menu item icon to use.
     */
    icon?: ReactElement;
    /**
     * Right-aligned label text content, useful for displaying hotkeys.
     */
    command?: string;
};
type MenuItemProps = HTMLUIProps<"button"> & MenuItemOptions;
declare const MenuItem: _yamada_ui_core.Component<"button", MenuItemProps>;
type MenuOptionItemOptions = {
    /**
     * The menu option item icon to use.
     */
    icon?: ReactElement | null;
    /**
     * The value of the menu option item.
     */
    value?: string;
    /**
     * If `true`, the checkbox or radio will be checked.
     *
     * @default false
     */
    isChecked?: boolean;
    /**
     * The type of the menu option item.
     */
    type?: "radio" | "checkbox";
};
type MenuOptionItemProps = Omit<MenuItemProps, "icon" | "command"> & MenuOptionItemOptions;
declare const MenuOptionItem: _yamada_ui_core.Component<"button", MenuOptionItemProps>;
type MenuIconProps = HTMLUIProps<"span">;
declare const MenuIcon: _yamada_ui_core.Component<"span", MenuIconProps>;
type MenuCommandProps = HTMLUIProps<"span">;
declare const MenuCommand: _yamada_ui_core.Component<"span", MenuCommandProps>;

export { MenuCommand, type MenuCommandProps, MenuIcon, type MenuIconProps, MenuItem, type MenuItemProps, MenuOptionItem, type MenuOptionItemProps, UpstreamMenuItemProvider, useUpstreamMenuItem };

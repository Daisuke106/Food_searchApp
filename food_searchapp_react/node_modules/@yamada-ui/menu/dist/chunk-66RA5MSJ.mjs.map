{"version":3,"sources":["../src/menu-option-group.tsx"],"sourcesContent":["import type { ComponentArgs, HTMLUIProps } from \"@yamada-ui/core\"\nimport { useControllableState } from \"@yamada-ui/use-controllable-state\"\nimport { cx, getValidChildren, isArray } from \"@yamada-ui/utils\"\nimport type { ForwardedRef, Ref } from \"react\"\nimport { cloneElement, forwardRef, useCallback } from \"react\"\nimport { MenuGroup } from \"./menu-group\"\nimport { MenuOptionItem } from \"./menu-item\"\n\ntype MenuOptionGroupOptions<Y extends string | string[] = string> = {\n  /**\n   * The label of the option group.\n   */\n  label?: string\n  /**\n   * The value of the menu item group.\n   */\n  value?: Y\n  /**\n   * The initial value of the menu item group.\n   */\n  defaultValue?: Y\n  /**\n   * The type of the menu option group.\n   *\n   * @default 'checkbox'\n   */\n  type?: \"radio\" | \"checkbox\"\n  /**\n   * The callback fired when any children checkbox is checked or unchecked.\n   */\n  onChange?: (value: Y) => void\n}\n\nexport type MenuOptionGroupProps<Y extends string | string[] = string> = Omit<\n  HTMLUIProps<\"div\">,\n  keyof MenuOptionGroupOptions\n> &\n  MenuOptionGroupOptions<Y>\n\nexport const MenuOptionGroup = forwardRef(\n  <Y extends string | string[] = string>(\n    {\n      className,\n      value: valueProp,\n      defaultValue,\n      onChange: onChangeProp,\n      type,\n      children,\n      ...rest\n    }: MenuOptionGroupProps<Y>,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) => {\n    const isRadio = type === \"radio\"\n\n    defaultValue ??= (isRadio ? \"\" : []) as Y\n\n    const [value, setValue] = useControllableState({\n      value: valueProp,\n      defaultValue,\n      onChange: onChangeProp,\n    })\n\n    const onChange = useCallback(\n      (selectedValue: string) => {\n        if (isRadio && typeof value === \"string\") setValue(selectedValue as Y)\n\n        if (!isRadio && isArray(value)) {\n          const nextValue = value.includes(selectedValue)\n            ? value.filter((item) => item !== selectedValue)\n            : value.concat(selectedValue)\n\n          setValue(nextValue as Y)\n        }\n      },\n      [isRadio, value, setValue],\n    )\n\n    const validChildren = getValidChildren(children)\n\n    const cloneChildren = validChildren.map((child) => {\n      if (child.type !== MenuOptionItem) return child\n\n      const onClick = (ev: MouseEvent) => {\n        onChange(child.props.value)\n        child.props.onClick?.(ev)\n      }\n\n      const isChecked =\n        !isRadio && isArray(value)\n          ? value.includes(child.props.value)\n          : child.props.value === value\n\n      return cloneElement(child, { type, onClick, isChecked })\n    })\n\n    return (\n      <MenuGroup\n        ref={ref}\n        className={cx(\"ui-menu__item--group--option\", className)}\n        {...rest}\n      >\n        {cloneChildren}\n      </MenuGroup>\n    )\n  },\n) as {\n  <Y extends string | string[] = string>(\n    props: MenuOptionGroupProps<Y> & { ref?: Ref<HTMLDivElement> },\n  ): JSX.Element\n} & ComponentArgs\n\nMenuOptionGroup.displayName = \"MenuOptionGroup\"\n"],"mappings":";;;;;;;;;AACA,SAAS,4BAA4B;AACrC,SAAS,IAAI,kBAAkB,eAAe;AAE9C,SAAS,cAAc,YAAY,mBAAmB;AA4FhD;AAzDC,IAAM,kBAAkB;AAAA,EAC7B,CACE;AAAA,IACE;AAAA,IACA,OAAO;AAAA,IACP;AAAA,IACA,UAAU;AAAA,IACV;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL,GACA,QACG;AACH,UAAM,UAAU,SAAS;AAEzB,yDAAkB,UAAU,KAAK,CAAC;AAElC,UAAM,CAAC,OAAO,QAAQ,IAAI,qBAAqB;AAAA,MAC7C,OAAO;AAAA,MACP;AAAA,MACA,UAAU;AAAA,IACZ,CAAC;AAED,UAAM,WAAW;AAAA,MACf,CAAC,kBAA0B;AACzB,YAAI,WAAW,OAAO,UAAU;AAAU,mBAAS,aAAkB;AAErE,YAAI,CAAC,WAAW,QAAQ,KAAK,GAAG;AAC9B,gBAAM,YAAY,MAAM,SAAS,aAAa,IAC1C,MAAM,OAAO,CAAC,SAAS,SAAS,aAAa,IAC7C,MAAM,OAAO,aAAa;AAE9B,mBAAS,SAAc;AAAA,QACzB;AAAA,MACF;AAAA,MACA,CAAC,SAAS,OAAO,QAAQ;AAAA,IAC3B;AAEA,UAAM,gBAAgB,iBAAiB,QAAQ;AAE/C,UAAM,gBAAgB,cAAc,IAAI,CAAC,UAAU;AACjD,UAAI,MAAM,SAAS;AAAgB,eAAO;AAE1C,YAAM,UAAU,CAAC,OAAmB;AAlF1C;AAmFQ,iBAAS,MAAM,MAAM,KAAK;AAC1B,0BAAM,OAAM,YAAZ,4BAAsB;AAAA,MACxB;AAEA,YAAM,YACJ,CAAC,WAAW,QAAQ,KAAK,IACrB,MAAM,SAAS,MAAM,MAAM,KAAK,IAChC,MAAM,MAAM,UAAU;AAE5B,aAAO,aAAa,OAAO,EAAE,MAAM,SAAS,UAAU,CAAC;AAAA,IACzD,CAAC;AAED,WACE;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,WAAW,GAAG,gCAAgC,SAAS;AAAA,QACtD,GAAG;AAAA,QAEH;AAAA;AAAA,IACH;AAAA,EAEJ;AACF;AAMA,gBAAgB,cAAc;","names":[]}
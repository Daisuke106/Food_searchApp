{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { useEventListeners } from \"@yamada-ui/use-event-listener\"\nimport type { Dict } from \"@yamada-ui/utils\"\nimport { dataAttr, mergeRefs } from \"@yamada-ui/utils\"\nimport type { HTMLAttributes, KeyboardEvent, MouseEvent, Ref } from \"react\"\nimport { useCallback, useState } from \"react\"\n\nexport type UseClickableProps<\n  Y extends HTMLElement = HTMLElement,\n  M extends HTMLAttributes<Y> = Dict,\n> = M & {\n  /**\n   * If `true`, the element will be disabled. It will set the `disabled` HTML attribute.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and isDisabled, the element will have only `aria-disabled` set to `true`.\n   *\n   * @default false\n   */\n  isFocusable?: boolean\n  /**\n   * Whether or not trigger click on pressing `Enter`.\n   *\n   * @default true\n   */\n  clickOnEnter?: boolean\n  /**\n   * Whether or not trigger click on pressing `Space`.\n   *\n   * @default true\n   */\n  clickOnSpace?: boolean\n  /**\n   * Whether or not to focus the element when it is clicked.\n   * If `true`, the element will receive focus upon click.\n   *\n   * @default true\n   */\n  focusOnClick?: boolean\n  /**\n   * The ref for the element.\n   */\n  ref?: Ref<HTMLElement>\n}\n\nconst isValidElement = (\n  ev: KeyboardEvent | KeyboardEvent[\"nativeEvent\"],\n): boolean => {\n  const { tagName, isContentEditable } = ev.target as HTMLElement\n\n  return (\n    tagName !== \"INPUT\" && tagName !== \"TEXTAREA\" && isContentEditable !== true\n  )\n}\n\nexport const useClickable = <\n  Y extends HTMLElement = HTMLElement,\n  M extends HTMLAttributes<Y> = Dict,\n>(\n  {\n    ref,\n    isDisabled,\n    isFocusable,\n    clickOnEnter = true,\n    clickOnSpace = true,\n    focusOnClick = true,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onKeyDown,\n    onKeyUp,\n    tabIndex: _tabIndex,\n    onMouseOver,\n    onMouseLeave,\n    ...props\n  }: UseClickableProps<Y, M> = {} as UseClickableProps<Y, M>,\n) => {\n  const [isButton, setIsButton] = useState<boolean>(true)\n  const [isPressed, setIsPressed] = useState<boolean>(false)\n\n  const listeners = useEventListeners()\n\n  const tabIndex = isButton ? _tabIndex : _tabIndex || 0\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const refCb = (node: any) => {\n    if (!node) return\n\n    if (node.tagName !== \"BUTTON\") setIsButton(false)\n  }\n\n  const handleClick = useCallback(\n    (ev: MouseEvent<Y>) => {\n      if (isDisabled) {\n        ev.stopPropagation()\n        ev.preventDefault()\n\n        return\n      }\n\n      if (focusOnClick) ev.currentTarget.focus()\n      onClick?.(ev)\n    },\n    [isDisabled, focusOnClick, onClick],\n  )\n\n  const onDocumentKeyUp = useCallback(\n    (ev: KeyboardEvent<Y>) => {\n      if (isPressed && isValidElement(ev)) {\n        ev.preventDefault()\n        ev.stopPropagation()\n\n        setIsPressed(false)\n\n        listeners.remove(document, \"keyup\", onDocumentKeyUp, false)\n      }\n    },\n    [isPressed, listeners],\n  )\n\n  const handleKeyDown = useCallback(\n    (ev: KeyboardEvent<Y>) => {\n      onKeyDown?.(ev)\n\n      if (isDisabled || ev.defaultPrevented || ev.metaKey) return\n\n      if (!isValidElement(ev.nativeEvent) || isButton) return\n\n      if (clickOnSpace && ev.key === \" \") {\n        ev.preventDefault()\n        setIsPressed(true)\n      }\n\n      if (clickOnEnter && ev.key === \"Enter\") {\n        ev.preventDefault()\n        ev.currentTarget.click()\n      }\n\n      listeners.add(document, \"keyup\", onDocumentKeyUp, false)\n    },\n    [\n      isDisabled,\n      isButton,\n      onKeyDown,\n      clickOnEnter,\n      clickOnSpace,\n      listeners,\n      onDocumentKeyUp,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (ev: KeyboardEvent<Y>) => {\n      onKeyUp?.(ev)\n\n      if (isDisabled || ev.defaultPrevented || ev.metaKey) return\n\n      if (!isValidElement(ev.nativeEvent) || isButton) return\n\n      if (clickOnSpace && ev.key === \" \") {\n        ev.preventDefault()\n        setIsPressed(false)\n\n        ev.currentTarget.click()\n      }\n    },\n    [clickOnSpace, isButton, isDisabled, onKeyUp],\n  )\n\n  const onDocumentMouseUp = useCallback(\n    (ev: MouseEvent<Y>) => {\n      if (ev.button !== 0) return\n\n      setIsPressed(false)\n\n      listeners.remove(document, \"mouseup\", onDocumentMouseUp, false)\n    },\n    [listeners],\n  )\n\n  const handleMouseDown = useCallback(\n    (ev: MouseEvent<Y>) => {\n      if (ev.button !== 0) return\n\n      if (isDisabled) {\n        ev.stopPropagation()\n        ev.preventDefault()\n\n        return\n      }\n\n      if (!isButton) setIsPressed(true)\n\n      ev.currentTarget.focus({ preventScroll: true })\n\n      listeners.add(document, \"mouseup\", onDocumentMouseUp, false)\n\n      onMouseDown?.(ev)\n    },\n    [isDisabled, isButton, onMouseDown, listeners, onDocumentMouseUp],\n  )\n\n  const handleMouseUp = useCallback(\n    (ev: MouseEvent<Y>) => {\n      if (ev.button !== 0) return\n\n      if (!isButton) setIsPressed(false)\n\n      onMouseUp?.(ev)\n    },\n    [onMouseUp, isButton],\n  )\n\n  const handleMouseOver = useCallback(\n    (ev: MouseEvent<Y>) => {\n      if (isDisabled) {\n        ev.preventDefault()\n\n        return\n      }\n\n      onMouseOver?.(ev)\n    },\n    [isDisabled, onMouseOver],\n  )\n\n  const handleMouseLeave = useCallback(\n    (ev: MouseEvent<Y>) => {\n      if (isPressed) {\n        ev.preventDefault()\n\n        setIsPressed(false)\n      }\n\n      onMouseLeave?.(ev)\n    },\n    [isPressed, onMouseLeave],\n  )\n\n  if (isButton) {\n    return {\n      ...props,\n      ref: mergeRefs(ref, refCb),\n      type: \"button\",\n      \"aria-disabled\": trulyDisabled ? undefined : isDisabled,\n      disabled: trulyDisabled,\n      onClick: handleClick,\n      onMouseDown,\n      onMouseUp,\n      onKeyUp,\n      onKeyDown,\n      onMouseOver,\n      onMouseLeave,\n    }\n  } else {\n    return {\n      ...props,\n      ref: mergeRefs(ref, refCb),\n      role: \"button\",\n      \"data-active\": dataAttr(isPressed),\n      \"aria-disabled\": isDisabled ? (\"true\" as const) : undefined,\n      tabIndex: trulyDisabled ? undefined : tabIndex,\n      onClick: handleClick,\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onKeyUp: handleKeyUp,\n      onKeyDown: handleKeyDown,\n      onMouseOver: handleMouseOver,\n      onMouseLeave: handleMouseLeave,\n    }\n  }\n}\n\nexport type UseClickableReturn = ReturnType<typeof useClickable>\n"],"mappings":"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","names":[]}
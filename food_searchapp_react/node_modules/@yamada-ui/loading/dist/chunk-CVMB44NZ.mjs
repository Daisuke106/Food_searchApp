"use client"
import {
  Puff
} from "./chunk-ENUKQWPP.mjs";
import {
  Rings
} from "./chunk-4JKPWQSY.mjs";
import {
  Audio
} from "./chunk-EYRZLOPC.mjs";
import {
  Circles
} from "./chunk-TP5LE3DK.mjs";
import {
  Dots
} from "./chunk-TIRPNXA7.mjs";
import {
  Grid
} from "./chunk-TIONMRJE.mjs";
import {
  Oval
} from "./chunk-MNPPARYC.mjs";

// src/loading.tsx
import { forwardRef, useComponentStyle } from "@yamada-ui/core";
import { cx } from "@yamada-ui/utils";
import { useMemo } from "react";
import { jsx } from "react/jsx-runtime";
var Loading = forwardRef((props, ref) => {
  const [
    styles,
    {
      className,
      variant = "oval",
      color,
      secondaryColor,
      colorScheme = "primary",
      size = "1em",
      dur,
      duration,
      ...rest
    }
  ] = useComponentStyle("Loading", props);
  const computedProps = useMemo(
    () => ({
      className: cx("ui-loading", className),
      size,
      var: [
        {
          __prefix: "ui",
          name: "color",
          token: "colors",
          value: color != null ? color : colorScheme
        },
        {
          __prefix: "ui",
          name: "secondary-color",
          token: "colors",
          value: secondaryColor
        }
      ],
      color: "var(--ui-color)",
      ...secondaryColor ? { secondaryColor: "var(--ui-secondary-color)" } : {},
      duration: duration != null ? duration : dur,
      __css: { ...styles },
      ...rest
    }),
    [
      className,
      color,
      secondaryColor,
      colorScheme,
      size,
      duration,
      dur,
      rest,
      styles
    ]
  );
  switch (variant) {
    case "grid":
      return /* @__PURE__ */ jsx(Grid, { ref, ...computedProps });
    case "audio":
      return /* @__PURE__ */ jsx(Audio, { ref, ...computedProps });
    case "dots":
      return /* @__PURE__ */ jsx(Dots, { ref, ...computedProps });
    case "puff":
      return /* @__PURE__ */ jsx(Puff, { ref, ...computedProps });
    case "rings":
      return /* @__PURE__ */ jsx(Rings, { ref, ...computedProps });
    case "circles":
      return /* @__PURE__ */ jsx(Circles, { ref, ...computedProps });
    default:
      return /* @__PURE__ */ jsx(Oval, { ref, ...computedProps });
  }
});

export {
  Loading
};
//# sourceMappingURL=chunk-CVMB44NZ.mjs.map
{"version":3,"sources":["../src/loading-provider.tsx"],"sourcesContent":["import type {\n  ThemeConfig,\n  LoadingComponentProps,\n  CSSUIObject,\n  LoadingConfigOptions,\n  HTMLUIProps,\n} from \"@yamada-ui/core\"\nimport { ui } from \"@yamada-ui/core\"\nimport type { MotionVariants } from \"@yamada-ui/motion\"\nimport { AnimatePresence, Motion, motion } from \"@yamada-ui/motion\"\nimport { Portal } from \"@yamada-ui/portal\"\nimport { useTimeout } from \"@yamada-ui/use-timeout\"\nimport {\n  isValidElement,\n  assignRef,\n  useUpdateEffect,\n  isNumber,\n} from \"@yamada-ui/utils\"\nimport type {\n  FC,\n  PropsWithChildren,\n  ReactNode,\n  MutableRefObject,\n  RefObject,\n} from \"react\"\nimport {\n  createContext,\n  memo,\n  useContext,\n  useMemo,\n  useState,\n  Fragment,\n  useRef,\n  createRef,\n} from \"react\"\nimport { RemoveScroll } from \"react-remove-scroll\"\nimport { Loading } from \"./loading\"\n\ntype LoadingContextProps = {\n  /**\n   * Returns a judgement on whether it is currently loading or not.\n   */\n  isLoading: () => boolean\n  /**\n   * Function to start loading.\n   *\n   * If you specify a `message` etc. as an argument, the loading will change accordingly.\n   */\n  start: (props?: Partial<LoadingProps>) => void\n  /**\n   * Function to finish loading.\n   */\n  finish: () => void\n  /**\n   * Function to update loading.\n   *\n   * If you specify a `message` etc. as an argument, the loading will change accordingly.\n   */\n  update: (props: Partial<LoadingProps>) => void\n  /**\n   * Function to forcefully update the loading state.\n   *\n   * Please be careful, as it will forcefully overwrite the state of the loading component.\n   */\n  force: (state: Partial<LoadingState>) => void\n}\n\ntype LoadingContext = {\n  /**\n   * The screen loading animation.\n   */\n  screen: LoadingContextProps\n  /**\n   * The page loading animation.\n   */\n  page: LoadingContextProps\n  /**\n   * The background loading animation.\n   */\n  background: LoadingContextProps\n  /**\n   * The custom loading animation.\n   *\n   * This cannot be used unless a component is defined at `config/loading/custom.`\n   */\n  custom: LoadingContextProps\n}\n\ntype LoadingProps = {\n  message: ReactNode | undefined\n  duration: number | null\n}\n\ntype LoadingState = {\n  loadingCount: number\n  message: ReactNode | undefined\n  duration: number | null\n}\n\nexport type LoadingProviderProps = PropsWithChildren<ThemeConfig[\"loading\"]>\n\nconst LoadingContext = createContext({} as LoadingContext)\n\ntype Refs = {\n  isLoading: RefObject<LoadingContextProps[\"isLoading\"]>\n  start: RefObject<LoadingContextProps[\"start\"]>\n  finish: RefObject<LoadingContextProps[\"finish\"]>\n  update: RefObject<LoadingContextProps[\"update\"]>\n  force: RefObject<LoadingContextProps[\"force\"]>\n}\n\ntype ControlRefs = MutableRefObject<Refs>\n\nconst createLoadingRefs = (): Refs => ({\n  isLoading: createRef<LoadingContextProps[\"isLoading\"]>(),\n  start: createRef<LoadingContextProps[\"start\"]>(),\n  finish: createRef<LoadingContextProps[\"finish\"]>(),\n  update: createRef<LoadingContextProps[\"update\"]>(),\n  force: createRef<LoadingContextProps[\"force\"]>(),\n})\n\nconst createLoadingFunc = (refs: ControlRefs): LoadingContextProps => ({\n  isLoading: () => refs.current.isLoading.current?.() ?? false,\n  start: (props) => refs.current.start.current?.(props),\n  finish: () => refs.current.finish.current?.(),\n  update: (props) => refs.current.update.current?.(props),\n  force: (state) => refs.current.force.current?.(state),\n})\n\nconst incrementCount = (prev: number) => prev + 1\nconst decrementCount = (prev: number) => (prev === 0 ? prev : prev - 1)\n\nexport const LoadingProvider: FC<LoadingProviderProps> = ({\n  screen,\n  page,\n  background,\n  custom,\n  children,\n}) => {\n  const screenRefs = useRef(createLoadingRefs())\n  const pageRefs = useRef(createLoadingRefs())\n  const backgroundRefs = useRef(createLoadingRefs())\n  const customRefs = useRef(createLoadingRefs())\n\n  const screenLoadingFunc = createLoadingFunc(screenRefs)\n  const pageLoadingFunc = createLoadingFunc(pageRefs)\n  const backgroundLoadingFunc = createLoadingFunc(backgroundRefs)\n  const customLoadingFunc = createLoadingFunc(customRefs)\n\n  const value = {\n    screen: screenLoadingFunc,\n    page: pageLoadingFunc,\n    background: backgroundLoadingFunc,\n    custom: customLoadingFunc,\n  }\n\n  return (\n    <LoadingContext.Provider value={value}>\n      {children}\n\n      <Controller\n        controlRefs={screenRefs}\n        {...screen}\n        component={\n          screen?.component ?? ((props) => <ScreenComponent {...props} />)\n        }\n      />\n\n      <Controller\n        controlRefs={pageRefs}\n        {...page}\n        component={page?.component ?? ((props) => <PageComponent {...props} />)}\n      />\n\n      <Controller\n        controlRefs={backgroundRefs}\n        {...background}\n        blockScrollOnMount={background?.blockScrollOnMount ?? false}\n        component={\n          background?.component ??\n          ((props) => <BackgroundComponent {...props} />)\n        }\n      />\n\n      <Controller\n        controlRefs={customRefs}\n        blockScrollOnMount={background?.blockScrollOnMount ?? false}\n        {...custom}\n        component={custom?.component}\n      />\n    </LoadingContext.Provider>\n  )\n}\n\ntype ControllerProps = {\n  controlRefs: ControlRefs\n  render?: (props: LoadingComponentProps) => JSX.Element\n} & LoadingConfigOptions\n\nconst Controller: FC<ControllerProps> = ({\n  controlRefs,\n  appendToParentPortal,\n  containerRef,\n  allowPinchZoom = false,\n  blockScrollOnMount = true,\n  initialState,\n  duration: durationProps = null,\n  icon,\n  text,\n  component,\n}) => {\n  const isLoadingRef = useRef<boolean>(false)\n  const [{ loadingCount, message, duration }, setState] =\n    useState<LoadingState>({\n      loadingCount: initialState ? 1 : 0,\n      message: undefined,\n      duration: durationProps,\n    })\n\n  const { isLoading, start, finish, update, force }: LoadingContextProps =\n    useMemo(\n      () => ({\n        isLoading: () => isLoadingRef.current,\n\n        start: ({ message, duration = durationProps } = {}) => {\n          isLoadingRef.current = true\n\n          setState(({ loadingCount }) => ({\n            loadingCount: incrementCount(loadingCount),\n            message,\n            duration,\n          }))\n        },\n\n        update: (next) => setState((prev) => ({ ...prev, ...next })),\n\n        finish: () => {\n          isLoadingRef.current = false\n\n          setState(({ loadingCount }) => ({\n            loadingCount: decrementCount(loadingCount),\n            message: undefined,\n            duration: durationProps,\n          }))\n        },\n\n        force: ({ loadingCount = 0, message, duration = durationProps }) => {\n          isLoadingRef.current = !!loadingCount\n\n          setState({\n            loadingCount,\n            message,\n            duration,\n          })\n        },\n      }),\n      [durationProps],\n    )\n\n  assignRef(controlRefs.current.isLoading, isLoading)\n  assignRef(controlRefs.current.start, start)\n  assignRef(controlRefs.current.finish, finish)\n  assignRef(controlRefs.current.update, update)\n  assignRef(controlRefs.current.force, force)\n\n  const props: LoadingComponentProps = {\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish: finish,\n  }\n\n  useUpdateEffect(() => {\n    if (initialState || isNumber(durationProps))\n      setState({\n        loadingCount: initialState ? 1 : 0,\n        message: undefined,\n        duration: durationProps,\n      })\n  }, [initialState, durationProps])\n\n  return (\n    <AnimatePresence initial={false}>\n      {loadingCount ? (\n        <Portal\n          appendToParentPortal={appendToParentPortal}\n          containerRef={containerRef}\n        >\n          <RemoveScroll\n            allowPinchZoom={allowPinchZoom}\n            enabled={blockScrollOnMount}\n            forwardProps\n          >\n            <Fragment>\n              <Render component={component} {...props} />\n            </Fragment>\n          </RemoveScroll>\n        </Portal>\n      ) : null}\n    </AnimatePresence>\n  )\n}\n\ntype RenderProps = {\n  component?: (props: LoadingComponentProps) => ReactNode\n} & LoadingComponentProps\n\nconst Render: FC<RenderProps> = ({ component, ...props }) => {\n  if (typeof component === \"function\") {\n    return component(props) as JSX.Element\n  } else {\n    return <></>\n  }\n}\n\ntype MessageProps = { message: ReactNode } & HTMLUIProps<\"p\">\n\nconst Message: FC<MessageProps> = ({ message, ...rest }) => {\n  return message ? (\n    isValidElement(message) ? (\n      message\n    ) : (\n      <ui.p {...rest}>{message}</ui.p>\n    )\n  ) : null\n}\n\nconst getVariants = (type: \"fade\" | \"scaleFade\" = \"fade\"): MotionVariants => ({\n  initial: {\n    opacity: 0,\n    scale: type === \"scaleFade\" ? 0.95 : undefined,\n  },\n  animate: {\n    opacity: 1,\n    scale: type === \"scaleFade\" ? 1 : undefined,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: type === \"scaleFade\" ? 0.95 : undefined,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n})\n\nconst getOverlayStyle = (\n  type: \"fill\" | \"transparent\" = \"fill\",\n): CSSUIObject => ({\n  position: \"fixed\",\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  zIndex: \"fallback(beerus, 9999)\",\n  bg:\n    type === \"fill\"\n      ? [\"fallback(white, #fbfbfb)\", \"fallback(black, #141414)\"]\n      : \"fallback(blackAlpha.600, rgba(0, 0, 0, 0.48))\",\n  w: \"100vw\",\n  h: \"100dvh\",\n  p: \"fallback(4, 1rem)\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n})\n\nconst getMotionProps = (\n  initialState: boolean | undefined,\n  type: \"fade\" | \"scaleFade\" = \"fade\",\n) => ({\n  initial: initialState ? false : \"initial\",\n  animate: \"animate\",\n  exit: \"exit\",\n  variants: getVariants(type),\n})\n\nconst ScreenComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      maxW: \"24rem\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"fallback(2, 0.5rem)\",\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <Motion\n        className=\"ui-loading-screen\"\n        {...getMotionProps(initialState)}\n        __css={getOverlayStyle()}\n      >\n        <ui.div __css={css}>\n          <Loading size=\"6xl\" {...icon} />\n          <Message message={message} lineClamp={3} {...text} />\n        </ui.div>\n      </Motion>\n    )\n  },\n)\n\nScreenComponent.displayName = \"ScreenComponent\"\n\nconst PageComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      bg: [\"fallback(white, #fbfbfb)\", \"fallback(black, #141414)\"],\n      maxW: \"24rem\",\n      p: \"fallback(4, 1rem)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"fallback(2, 0.5rem)\",\n      rounded: \"fallback(md, 0.375rem)\",\n      boxShadow: [\n        \"fallback(lg, 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05))\",\n        \"fallback(dark-lg, 0px 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 5px 10px rgba(0, 0, 0, 0.2), 0px 15px 40px rgba(0, 0, 0, 0.4))\",\n      ],\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <Motion\n        className=\"ui-loading-page\"\n        {...getMotionProps(initialState)}\n        __css={getOverlayStyle(\"transparent\")}\n      >\n        <ui.div\n          as={motion.div}\n          className=\"ui-loading-page__inner\"\n          {...getMotionProps(initialState, \"scaleFade\")}\n          __css={css}\n        >\n          <Loading size=\"6xl\" {...icon} />\n          <Message message={message} lineClamp={3} {...text} />\n        </ui.div>\n      </Motion>\n    )\n  },\n)\n\nPageComponent.displayName = \"PageComponent\"\n\nconst BackgroundComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      position: \"fixed\",\n      right: \"fallback(4, 1rem)\",\n      bottom: \"fallback(4, 1rem)\",\n      zIndex: \"fallback(beerus, 9999)\",\n      bg: [\"fallback(white, #fbfbfb)\", \"fallback(black, #141414)\"],\n      maxW: \"20rem\",\n      p: \"fallback(2, 0.5rem)\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"fallback(2, 0.5rem)\",\n      rounded: \"fallback(md, 0.375rem)\",\n      boxShadow: [\n        \"fallback(3xl, 0 25px 50px -12px rgba(0, 0, 0, 0.25), 0 -25px 50px -12px rgba(0, 0, 0, 0.25))\",\n        \"fallback(dark-lg, 0px 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 5px 10px rgba(0, 0, 0, 0.2), 0px 15px 40px rgba(0, 0, 0, 0.4))\",\n      ],\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <Motion\n        className=\"ui-loading-background\"\n        {...getMotionProps(initialState, \"scaleFade\")}\n        __css={css}\n      >\n        <Loading size=\"xl\" {...icon} />\n        <Message message={message} fontSize=\"sm\" lineClamp={1} {...text} />\n      </Motion>\n    )\n  },\n)\n\nBackgroundComponent.displayName = \"BackgroundComponent\"\n\n/**\n * `useLoading` is a custom hook for controlling the loading of the application.\n *\n * @see Docs https://yamada-ui.com/hooks/use-loading\n */\nexport const useLoading = (): LoadingContext => {\n  const { screen, page, background, custom } = useContext(LoadingContext)\n\n  return { screen, page, background, custom }\n}\n"],"mappings":"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","names":["Fragment","message","duration","loadingCount"]}
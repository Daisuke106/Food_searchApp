"use client"
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  Loading: () => Loading,
  LoadingProvider: () => LoadingProvider,
  useLoading: () => useLoading
});
module.exports = __toCommonJS(src_exports);

// src/loading.tsx
var import_core8 = require("@yamada-ui/core");
var import_utils = require("@yamada-ui/utils");
var import_react = require("react");

// src/audio.tsx
var import_core = require("@yamada-ui/core");
var import_icon = require("@yamada-ui/icon");
var import_jsx_runtime = require("react/jsx-runtime");
var Audio = (0, import_core.forwardRef)(
  ({ color, duration = "1.4s", ...rest }, ref) => {
    const dur = typeof duration === "string" ? parseFloat(duration) : duration;
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_icon.Icon, { ref, viewBox: "0 0 55 80", fill: color, ...rest, children: /* @__PURE__ */ (0, import_jsx_runtime.jsxs)("g", { transform: "matrix(1 0 0 -1 0 80)", children: [
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("rect", { width: "10", height: "20", rx: "3", children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
        "animate",
        {
          attributeName: "height",
          begin: "0s",
          dur: `${dur * 3}s`,
          values: "20;45;57;80;64;32;66;45;64;23;66;13;64;56;34;34;2;23;76;79;20",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("rect", { x: "15", width: "10", height: "80", rx: "3", children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
        "animate",
        {
          attributeName: "height",
          begin: "0s",
          dur: `${dur * 1.4}s`,
          values: "80;55;33;5;75;23;73;33;12;14;60;80",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("rect", { x: "30", width: "10", height: "50", rx: "3", children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
        "animate",
        {
          attributeName: "height",
          begin: "0s",
          dur: `${dur}s`,
          values: "50;34;78;23;56;23;34;76;80;54;21;50",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)("rect", { x: "45", width: "10", height: "30", rx: "3", children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
        "animate",
        {
          attributeName: "height",
          begin: "0s",
          dur: `${dur * 1.4}s`,
          values: "30;45;13;80;56;72;45;76;34;23;67;30",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) })
    ] }) });
  }
);

// src/circles.tsx
var import_core2 = require("@yamada-ui/core");
var import_icon2 = require("@yamada-ui/icon");
var import_jsx_runtime2 = require("react/jsx-runtime");
var Circles = (0, import_core2.forwardRef)(
  ({ color, duration = "3s", ...rest }, ref) => {
    return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_icon2.Icon, { ref, viewBox: "0 0 58 58", stroke: color, ...rest, children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("g", { fill: "none", fillRule: "evenodd", children: /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)("g", { transform: "translate(2 1)", stroke: color, strokeWidth: "1.5", children: [
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("circle", { cx: "42.601", cy: "11.462", r: "5", fillOpacity: "1", fill: color, children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "0s",
          dur: duration,
          values: "1;0;0;0;0;0;0;0",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("circle", { cx: "49.063", cy: "27.063", r: "5", fillOpacity: "0", fill: color, children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "0s",
          dur: duration,
          values: "0;1;0;0;0;0;0;0",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("circle", { cx: "42.601", cy: "42.663", r: "5", fillOpacity: "0", fill: color, children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "0s",
          dur: duration,
          values: "0;0;1;0;0;0;0;0",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("circle", { cx: "27", cy: "49.125", r: "5", fillOpacity: "0", fill: color, children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "0s",
          dur: duration,
          values: "0;0;0;1;0;0;0;0",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("circle", { cx: "11.399", cy: "42.663", r: "5", fillOpacity: "0", fill: color, children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "0s",
          dur: duration,
          values: "0;0;0;0;1;0;0;0",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("circle", { cx: "4.938", cy: "27.063", r: "5", fillOpacity: "0", fill: color, children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "0s",
          dur: duration,
          values: "0;0;0;0;0;1;0;0",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("circle", { cx: "11.399", cy: "11.462", r: "5", fillOpacity: "0", fill: color, children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "0s",
          dur: duration,
          values: "0;0;0;0;0;0;1;0",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("circle", { cx: "27", cy: "5", r: "5", fillOpacity: "0", fill: color, children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "0s",
          dur: duration,
          values: "0;0;0;0;0;0;0;1",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) })
    ] }) }) });
  }
);

// src/dots.tsx
var import_core3 = require("@yamada-ui/core");
var import_icon3 = require("@yamada-ui/icon");
var import_jsx_runtime3 = require("react/jsx-runtime");
var Dots = (0, import_core3.forwardRef)(
  ({ color, duration = "1s", ...rest }, ref) => {
    return /* @__PURE__ */ (0, import_jsx_runtime3.jsxs)(import_icon3.Icon, { ref, viewBox: "0 0 120 30", fill: color, ...rest, children: [
      /* @__PURE__ */ (0, import_jsx_runtime3.jsxs)("circle", { cx: "15", cy: "15", r: "15", children: [
        /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
          "animate",
          {
            attributeName: "r",
            from: "15",
            to: "15",
            begin: "0s",
            dur: duration,
            values: "15;9;15",
            calcMode: "linear",
            repeatCount: "indefinite"
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
          "animate",
          {
            attributeName: "fill-opacity",
            from: "1",
            to: "1",
            begin: "0s",
            dur: duration,
            values: "1;.5;1",
            calcMode: "linear",
            repeatCount: "indefinite"
          }
        )
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime3.jsxs)("circle", { cx: "60", cy: "15", r: "9", fillOpacity: "0.3", children: [
        /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
          "animate",
          {
            attributeName: "r",
            from: "9",
            to: "9",
            begin: "0s",
            dur: duration,
            values: "9;15;9",
            calcMode: "linear",
            repeatCount: "indefinite"
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
          "animate",
          {
            attributeName: "fill-opacity",
            from: "0.5",
            to: "0.5",
            begin: "0s",
            dur: duration,
            values: ".5;1;.5",
            calcMode: "linear",
            repeatCount: "indefinite"
          }
        )
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime3.jsxs)("circle", { cx: "105", cy: "15", r: "15", children: [
        /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
          "animate",
          {
            attributeName: "r",
            from: "15",
            to: "15",
            begin: "0s",
            dur: duration,
            values: "15;9;15",
            calcMode: "linear",
            repeatCount: "indefinite"
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
          "animate",
          {
            attributeName: "fill-opacity",
            from: "1",
            to: "1",
            begin: "0s",
            dur: duration,
            values: "1;.5;1",
            calcMode: "linear",
            repeatCount: "indefinite"
          }
        )
      ] })
    ] });
  }
);

// src/grid.tsx
var import_core4 = require("@yamada-ui/core");
var import_icon4 = require("@yamada-ui/icon");
var import_jsx_runtime4 = require("react/jsx-runtime");
var Grid = (0, import_core4.forwardRef)(
  ({ color, duration = "1s", ...rest }, ref) => {
    return /* @__PURE__ */ (0, import_jsx_runtime4.jsxs)(import_icon4.Icon, { ref, viewBox: "0 0 105 105", fill: color, ...rest, children: [
      /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("circle", { cx: "12.5", cy: "12.5", r: "12.5", children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "0s",
          dur: duration,
          values: "1;.2;1",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("circle", { cx: "12.5", cy: "52.5", r: "12.5", fillOpacity: ".5", children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "100ms",
          dur: duration,
          values: "1;.2;1",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("circle", { cx: "52.5", cy: "12.5", r: "12.5", children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "300ms",
          dur: duration,
          values: "1;.2;1",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("circle", { cx: "52.5", cy: "52.5", r: "12.5", children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "600ms",
          dur: duration,
          values: "1;.2;1",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("circle", { cx: "92.5", cy: "12.5", r: "12.5", children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "800ms",
          dur: duration,
          values: "1;.2;1",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("circle", { cx: "92.5", cy: "52.5", r: "12.5", children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "400ms",
          dur: duration,
          values: "1;.2;1",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("circle", { cx: "12.5", cy: "92.5", r: "12.5", children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "700ms",
          dur: duration,
          values: "1;.2;1",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("circle", { cx: "52.5", cy: "92.5", r: "12.5", children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "500ms",
          dur: duration,
          values: "1;.2;1",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime4.jsx)("circle", { cx: "92.5", cy: "92.5", r: "12.5", children: /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
        "animate",
        {
          attributeName: "fill-opacity",
          begin: "200ms",
          dur: duration,
          values: "1;.2;1",
          calcMode: "linear",
          repeatCount: "indefinite"
        }
      ) })
    ] });
  }
);

// src/oval.tsx
var import_core5 = require("@yamada-ui/core");
var import_icon5 = require("@yamada-ui/icon");
var import_jsx_runtime5 = require("react/jsx-runtime");
var Oval = (0, import_core5.forwardRef)(
  ({ color, secondaryColor, duration = "1s", ...rest }, ref) => {
    return /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(import_icon5.Icon, { ref, viewBox: "0 0 38 38", stroke: color, ...rest, children: /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("g", { fill: "none", fillRule: "evenodd", children: /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)("g", { transform: "translate(1 1)", strokeWidth: "2", children: [
      /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
        "circle",
        {
          ...secondaryColor ? { stroke: secondaryColor } : { strokeOpacity: ".5" },
          cx: "18",
          cy: "18",
          r: "18"
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("path", { d: "M36 18c0-9.94-8.06-18-18-18", children: /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
        "animateTransform",
        {
          attributeName: "transform",
          type: "rotate",
          from: "0 18 18",
          to: "360 18 18",
          dur: duration,
          repeatCount: "indefinite"
        }
      ) })
    ] }) }) });
  }
);

// src/puff.tsx
var import_core6 = require("@yamada-ui/core");
var import_icon6 = require("@yamada-ui/icon");
var import_jsx_runtime6 = require("react/jsx-runtime");
var Puff = (0, import_core6.forwardRef)(
  ({ color, duration = "1.8s", ...rest }, ref) => {
    return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(import_icon6.Icon, { ref, viewBox: "0 0 44 44", stroke: color, ...rest, children: /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)("g", { fill: "none", fillRule: "evenodd", strokeWidth: "2", children: [
      /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)("circle", { cx: "22", cy: "22", r: "1", children: [
        /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          "animate",
          {
            attributeName: "r",
            begin: "0s",
            dur: duration,
            values: "1; 20",
            calcMode: "spline",
            keyTimes: "0; 1",
            keySplines: "0.165, 0.84, 0.44, 1",
            repeatCount: "indefinite"
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          "animate",
          {
            attributeName: "stroke-opacity",
            begin: "0s",
            dur: duration,
            values: "1; 0",
            calcMode: "spline",
            keyTimes: "0; 1",
            keySplines: "0.3, 0.61, 0.355, 1",
            repeatCount: "indefinite"
          }
        )
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)("circle", { cx: "22", cy: "22", r: "1", children: [
        /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          "animate",
          {
            attributeName: "r",
            begin: "-0.9s",
            dur: duration,
            values: "1; 20",
            calcMode: "spline",
            keyTimes: "0; 1",
            keySplines: "0.165, 0.84, 0.44, 1",
            repeatCount: "indefinite"
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
          "animate",
          {
            attributeName: "stroke-opacity",
            begin: "-0.9s",
            dur: duration,
            values: "1; 0",
            calcMode: "spline",
            keyTimes: "0; 1",
            keySplines: "0.3, 0.61, 0.355, 1",
            repeatCount: "indefinite"
          }
        )
      ] })
    ] }) });
  }
);

// src/rings.tsx
var import_core7 = require("@yamada-ui/core");
var import_icon7 = require("@yamada-ui/icon");
var import_jsx_runtime7 = require("react/jsx-runtime");
var Rings = (0, import_core7.forwardRef)(
  ({ color, duration = "3s", ...rest }, ref) => {
    const dur = typeof duration === "string" ? parseFloat(duration) : duration;
    return /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(import_icon7.Icon, { ref, viewBox: "0 0 45 45", stroke: color, ...rest, children: /* @__PURE__ */ (0, import_jsx_runtime7.jsxs)(
      "g",
      {
        fill: "none",
        fillRule: "evenodd",
        transform: "translate(1 1)",
        strokeWidth: "2",
        children: [
          /* @__PURE__ */ (0, import_jsx_runtime7.jsxs)("circle", { cx: "22", cy: "22", r: "6", strokeOpacity: "0", children: [
            /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(
              "animate",
              {
                attributeName: "r",
                begin: "1.5s",
                dur: `${dur}s`,
                values: "6;22",
                calcMode: "linear",
                repeatCount: "indefinite"
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(
              "animate",
              {
                attributeName: "stroke-opacity",
                begin: "1.5s",
                dur: `${dur}s`,
                values: "1;0",
                calcMode: "linear",
                repeatCount: "indefinite"
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(
              "animate",
              {
                attributeName: "stroke-width",
                begin: "1.5s",
                dur: `${dur}s`,
                values: "2;0",
                calcMode: "linear",
                repeatCount: "indefinite"
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime7.jsxs)("circle", { cx: "22", cy: "22", r: "6", strokeOpacity: "0", children: [
            /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(
              "animate",
              {
                attributeName: "r",
                begin: "3s",
                dur: `${dur}s`,
                values: "6;22",
                calcMode: "linear",
                repeatCount: "indefinite"
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(
              "animate",
              {
                attributeName: "stroke-opacity",
                begin: "3s",
                dur: `${dur}s`,
                values: "1;0",
                calcMode: "linear",
                repeatCount: "indefinite"
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(
              "animate",
              {
                attributeName: "stroke-width",
                begin: "3s",
                dur: `${dur}s`,
                values: "2;0",
                calcMode: "linear",
                repeatCount: "indefinite"
              }
            )
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime7.jsx)("circle", { cx: "22", cy: "22", r: "8", children: /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(
            "animate",
            {
              attributeName: "r",
              begin: "0s",
              dur: `${dur / 2}s`,
              values: "6;1;2;3;4;5;6",
              calcMode: "linear",
              repeatCount: "indefinite"
            }
          ) })
        ]
      }
    ) });
  }
);

// src/loading.tsx
var import_jsx_runtime8 = require("react/jsx-runtime");
var Loading = (0, import_core8.forwardRef)((props, ref) => {
  const [
    styles,
    {
      className,
      variant = "oval",
      color,
      secondaryColor,
      colorScheme = "primary",
      size = "1em",
      dur,
      duration,
      ...rest
    }
  ] = (0, import_core8.useComponentStyle)("Loading", props);
  const computedProps = (0, import_react.useMemo)(
    () => ({
      className: (0, import_utils.cx)("ui-loading", className),
      size,
      var: [
        {
          __prefix: "ui",
          name: "color",
          token: "colors",
          value: color != null ? color : colorScheme
        },
        {
          __prefix: "ui",
          name: "secondary-color",
          token: "colors",
          value: secondaryColor
        }
      ],
      color: "var(--ui-color)",
      ...secondaryColor ? { secondaryColor: "var(--ui-secondary-color)" } : {},
      duration: duration != null ? duration : dur,
      __css: { ...styles },
      ...rest
    }),
    [
      className,
      color,
      secondaryColor,
      colorScheme,
      size,
      duration,
      dur,
      rest,
      styles
    ]
  );
  switch (variant) {
    case "grid":
      return /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(Grid, { ref, ...computedProps });
    case "audio":
      return /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(Audio, { ref, ...computedProps });
    case "dots":
      return /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(Dots, { ref, ...computedProps });
    case "puff":
      return /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(Puff, { ref, ...computedProps });
    case "rings":
      return /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(Rings, { ref, ...computedProps });
    case "circles":
      return /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(Circles, { ref, ...computedProps });
    default:
      return /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(Oval, { ref, ...computedProps });
  }
});

// src/loading-provider.tsx
var import_core9 = require("@yamada-ui/core");
var import_motion = require("@yamada-ui/motion");
var import_portal = require("@yamada-ui/portal");
var import_use_timeout = require("@yamada-ui/use-timeout");
var import_utils2 = require("@yamada-ui/utils");
var import_react2 = require("react");
var import_react_remove_scroll = require("react-remove-scroll");
var import_jsx_runtime9 = require("react/jsx-runtime");
var LoadingContext = (0, import_react2.createContext)({});
var createLoadingRefs = () => ({
  isLoading: (0, import_react2.createRef)(),
  start: (0, import_react2.createRef)(),
  finish: (0, import_react2.createRef)(),
  update: (0, import_react2.createRef)(),
  force: (0, import_react2.createRef)()
});
var createLoadingFunc = (refs) => ({
  isLoading: () => {
    var _a, _b, _c;
    return (_c = (_b = (_a = refs.current.isLoading).current) == null ? void 0 : _b.call(_a)) != null ? _c : false;
  },
  start: (props) => {
    var _a, _b;
    return (_b = (_a = refs.current.start).current) == null ? void 0 : _b.call(_a, props);
  },
  finish: () => {
    var _a, _b;
    return (_b = (_a = refs.current.finish).current) == null ? void 0 : _b.call(_a);
  },
  update: (props) => {
    var _a, _b;
    return (_b = (_a = refs.current.update).current) == null ? void 0 : _b.call(_a, props);
  },
  force: (state) => {
    var _a, _b;
    return (_b = (_a = refs.current.force).current) == null ? void 0 : _b.call(_a, state);
  }
});
var incrementCount = (prev) => prev + 1;
var decrementCount = (prev) => prev === 0 ? prev : prev - 1;
var LoadingProvider = ({
  screen,
  page,
  background,
  custom,
  children
}) => {
  var _a, _b, _c, _d, _e;
  const screenRefs = (0, import_react2.useRef)(createLoadingRefs());
  const pageRefs = (0, import_react2.useRef)(createLoadingRefs());
  const backgroundRefs = (0, import_react2.useRef)(createLoadingRefs());
  const customRefs = (0, import_react2.useRef)(createLoadingRefs());
  const screenLoadingFunc = createLoadingFunc(screenRefs);
  const pageLoadingFunc = createLoadingFunc(pageRefs);
  const backgroundLoadingFunc = createLoadingFunc(backgroundRefs);
  const customLoadingFunc = createLoadingFunc(customRefs);
  const value = {
    screen: screenLoadingFunc,
    page: pageLoadingFunc,
    background: backgroundLoadingFunc,
    custom: customLoadingFunc
  };
  return /* @__PURE__ */ (0, import_jsx_runtime9.jsxs)(LoadingContext.Provider, { value, children: [
    children,
    /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(
      Controller,
      {
        controlRefs: screenRefs,
        ...screen,
        component: (_a = screen == null ? void 0 : screen.component) != null ? _a : (props) => /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(ScreenComponent, { ...props })
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(
      Controller,
      {
        controlRefs: pageRefs,
        ...page,
        component: (_b = page == null ? void 0 : page.component) != null ? _b : (props) => /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(PageComponent, { ...props })
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(
      Controller,
      {
        controlRefs: backgroundRefs,
        ...background,
        blockScrollOnMount: (_c = background == null ? void 0 : background.blockScrollOnMount) != null ? _c : false,
        component: (_d = background == null ? void 0 : background.component) != null ? _d : (props) => /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(BackgroundComponent, { ...props })
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(
      Controller,
      {
        controlRefs: customRefs,
        blockScrollOnMount: (_e = background == null ? void 0 : background.blockScrollOnMount) != null ? _e : false,
        ...custom,
        component: custom == null ? void 0 : custom.component
      }
    )
  ] });
};
var Controller = ({
  controlRefs,
  appendToParentPortal,
  containerRef,
  allowPinchZoom = false,
  blockScrollOnMount = true,
  initialState,
  duration: durationProps = null,
  icon,
  text,
  component
}) => {
  const isLoadingRef = (0, import_react2.useRef)(false);
  const [{ loadingCount, message, duration }, setState] = (0, import_react2.useState)({
    loadingCount: initialState ? 1 : 0,
    message: void 0,
    duration: durationProps
  });
  const { isLoading, start, finish, update, force } = (0, import_react2.useMemo)(
    () => ({
      isLoading: () => isLoadingRef.current,
      start: ({ message: message2, duration: duration2 = durationProps } = {}) => {
        isLoadingRef.current = true;
        setState(({ loadingCount: loadingCount2 }) => ({
          loadingCount: incrementCount(loadingCount2),
          message: message2,
          duration: duration2
        }));
      },
      update: (next) => setState((prev) => ({ ...prev, ...next })),
      finish: () => {
        isLoadingRef.current = false;
        setState(({ loadingCount: loadingCount2 }) => ({
          loadingCount: decrementCount(loadingCount2),
          message: void 0,
          duration: durationProps
        }));
      },
      force: ({ loadingCount: loadingCount2 = 0, message: message2, duration: duration2 = durationProps }) => {
        isLoadingRef.current = !!loadingCount2;
        setState({
          loadingCount: loadingCount2,
          message: message2,
          duration: duration2
        });
      }
    }),
    [durationProps]
  );
  (0, import_utils2.assignRef)(controlRefs.current.isLoading, isLoading);
  (0, import_utils2.assignRef)(controlRefs.current.start, start);
  (0, import_utils2.assignRef)(controlRefs.current.finish, finish);
  (0, import_utils2.assignRef)(controlRefs.current.update, update);
  (0, import_utils2.assignRef)(controlRefs.current.force, force);
  const props = {
    initialState,
    icon,
    text,
    message,
    duration,
    onFinish: finish
  };
  (0, import_utils2.useUpdateEffect)(() => {
    if (initialState || (0, import_utils2.isNumber)(durationProps))
      setState({
        loadingCount: initialState ? 1 : 0,
        message: void 0,
        duration: durationProps
      });
  }, [initialState, durationProps]);
  return /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(import_motion.AnimatePresence, { initial: false, children: loadingCount ? /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(
    import_portal.Portal,
    {
      appendToParentPortal,
      containerRef,
      children: /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(
        import_react_remove_scroll.RemoveScroll,
        {
          allowPinchZoom,
          enabled: blockScrollOnMount,
          forwardProps: true,
          children: /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(import_react2.Fragment, { children: /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(Render, { component, ...props }) })
        }
      )
    }
  ) : null });
};
var Render = ({ component, ...props }) => {
  if (typeof component === "function") {
    return component(props);
  } else {
    return /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(import_jsx_runtime9.Fragment, {});
  }
};
var Message = ({ message, ...rest }) => {
  return message ? (0, import_utils2.isValidElement)(message) ? message : /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(import_core9.ui.p, { ...rest, children: message }) : null;
};
var getVariants = (type = "fade") => ({
  initial: {
    opacity: 0,
    scale: type === "scaleFade" ? 0.95 : void 0
  },
  animate: {
    opacity: 1,
    scale: type === "scaleFade" ? 1 : void 0,
    transition: {
      duration: 0.4,
      ease: [0.4, 0, 0.2, 1]
    }
  },
  exit: {
    opacity: 0,
    scale: type === "scaleFade" ? 0.95 : void 0,
    transition: {
      duration: 0.4,
      ease: [0.4, 0, 1, 1]
    }
  }
});
var getOverlayStyle = (type = "fill") => ({
  position: "fixed",
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  zIndex: "fallback(beerus, 9999)",
  bg: type === "fill" ? ["fallback(white, #fbfbfb)", "fallback(black, #141414)"] : "fallback(blackAlpha.600, rgba(0, 0, 0, 0.48))",
  w: "100vw",
  h: "100dvh",
  p: "fallback(4, 1rem)",
  display: "flex",
  justifyContent: "center",
  alignItems: "center"
});
var getMotionProps = (initialState, type = "fade") => ({
  initial: initialState ? false : "initial",
  animate: "animate",
  exit: "exit",
  variants: getVariants(type)
});
var ScreenComponent = (0, import_react2.memo)(
  ({
    initialState,
    icon,
    text,
    message,
    duration,
    onFinish
  }) => {
    const css = {
      maxW: "24rem",
      display: "flex",
      flexDirection: "column",
      justifyContent: "center",
      alignItems: "center",
      gap: "fallback(2, 0.5rem)"
    };
    (0, import_use_timeout.useTimeout)(onFinish, duration);
    return /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(
      import_motion.Motion,
      {
        className: "ui-loading-screen",
        ...getMotionProps(initialState),
        __css: getOverlayStyle(),
        children: /* @__PURE__ */ (0, import_jsx_runtime9.jsxs)(import_core9.ui.div, { __css: css, children: [
          /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(Loading, { size: "6xl", ...icon }),
          /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(Message, { message, lineClamp: 3, ...text })
        ] })
      }
    );
  }
);
ScreenComponent.displayName = "ScreenComponent";
var PageComponent = (0, import_react2.memo)(
  ({
    initialState,
    icon,
    text,
    message,
    duration,
    onFinish
  }) => {
    const css = {
      bg: ["fallback(white, #fbfbfb)", "fallback(black, #141414)"],
      maxW: "24rem",
      p: "fallback(4, 1rem)",
      display: "flex",
      flexDirection: "column",
      justifyContent: "center",
      alignItems: "center",
      gap: "fallback(2, 0.5rem)",
      rounded: "fallback(md, 0.375rem)",
      boxShadow: [
        "fallback(lg, 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05))",
        "fallback(dark-lg, 0px 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 5px 10px rgba(0, 0, 0, 0.2), 0px 15px 40px rgba(0, 0, 0, 0.4))"
      ]
    };
    (0, import_use_timeout.useTimeout)(onFinish, duration);
    return /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(
      import_motion.Motion,
      {
        className: "ui-loading-page",
        ...getMotionProps(initialState),
        __css: getOverlayStyle("transparent"),
        children: /* @__PURE__ */ (0, import_jsx_runtime9.jsxs)(
          import_core9.ui.div,
          {
            as: import_motion.motion.div,
            className: "ui-loading-page__inner",
            ...getMotionProps(initialState, "scaleFade"),
            __css: css,
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(Loading, { size: "6xl", ...icon }),
              /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(Message, { message, lineClamp: 3, ...text })
            ]
          }
        )
      }
    );
  }
);
PageComponent.displayName = "PageComponent";
var BackgroundComponent = (0, import_react2.memo)(
  ({
    initialState,
    icon,
    text,
    message,
    duration,
    onFinish
  }) => {
    const css = {
      position: "fixed",
      right: "fallback(4, 1rem)",
      bottom: "fallback(4, 1rem)",
      zIndex: "fallback(beerus, 9999)",
      bg: ["fallback(white, #fbfbfb)", "fallback(black, #141414)"],
      maxW: "20rem",
      p: "fallback(2, 0.5rem)",
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      gap: "fallback(2, 0.5rem)",
      rounded: "fallback(md, 0.375rem)",
      boxShadow: [
        "fallback(3xl, 0 25px 50px -12px rgba(0, 0, 0, 0.25), 0 -25px 50px -12px rgba(0, 0, 0, 0.25))",
        "fallback(dark-lg, 0px 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 5px 10px rgba(0, 0, 0, 0.2), 0px 15px 40px rgba(0, 0, 0, 0.4))"
      ]
    };
    (0, import_use_timeout.useTimeout)(onFinish, duration);
    return /* @__PURE__ */ (0, import_jsx_runtime9.jsxs)(
      import_motion.Motion,
      {
        className: "ui-loading-background",
        ...getMotionProps(initialState, "scaleFade"),
        __css: css,
        children: [
          /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(Loading, { size: "xl", ...icon }),
          /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(Message, { message, fontSize: "sm", lineClamp: 1, ...text })
        ]
      }
    );
  }
);
BackgroundComponent.displayName = "BackgroundComponent";
var useLoading = () => {
  const { screen, page, background, custom } = (0, import_react2.useContext)(LoadingContext);
  return { screen, page, background, custom };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Loading,
  LoadingProvider,
  useLoading
});
//# sourceMappingURL=index.js.map
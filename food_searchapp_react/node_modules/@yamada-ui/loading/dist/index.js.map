{"version":3,"sources":["../src/index.ts","../src/loading.tsx","../src/audio.tsx","../src/circles.tsx","../src/dots.tsx","../src/grid.tsx","../src/oval.tsx","../src/puff.tsx","../src/rings.tsx","../src/loading-provider.tsx"],"sourcesContent":["export { Loading } from \"./loading\"\nexport type { LoadingProps } from \"./loading\"\nexport * from \"./loading-provider\"\n","import type { CSSUIProps, ThemeProps, UIProps } from \"@yamada-ui/core\"\nimport { forwardRef, useComponentStyle } from \"@yamada-ui/core\"\nimport type { IconProps } from \"@yamada-ui/icon\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useMemo } from \"react\"\nimport { Audio } from \"./audio\"\nimport { Circles } from \"./circles\"\nimport { Dots } from \"./dots\"\nimport { Grid } from \"./grid\"\nimport { Oval } from \"./oval\"\nimport { Puff } from \"./puff\"\nimport { Rings } from \"./rings\"\n\ntype ComponentProps = Omit<UIProps, \"color\"> & {\n  color: string\n  secondaryColor?: string\n}\n\ntype LoadingOptions = {\n  /**\n   * The variant of the Loading.\n   *\n   * @default 'oval'\n   */\n  variant?: \"oval\" | \"grid\" | \"audio\" | \"dots\" | \"puff\" | \"rings\" | \"circles\"\n  /**\n   * The CSS `color` property.\n   *\n   * @default 'primary'\n   */\n  secondaryColor?: CSSUIProps[\"color\"]\n  /**\n   * The CSS `dur` property.\n   */\n  duration?: IconProps[\"dur\"]\n}\n\nexport type LoadingProps = IconProps &\n  Pick<ThemeProps<\"Loading\">, \"colorScheme\"> &\n  LoadingOptions\n\n/**\n * `Loading` is a component displayed during waiting times, such as when data is being loaded.\n *\n * @see Docs https://yamada-ui.com/components/feedback/loading\n */\nexport const Loading = forwardRef<LoadingProps, \"svg\">((props, ref) => {\n  const [\n    styles,\n    {\n      className,\n      variant = \"oval\",\n      color,\n      secondaryColor,\n      colorScheme = \"primary\",\n      size = \"1em\",\n      dur,\n      duration,\n      ...rest\n    },\n  ] = useComponentStyle(\"Loading\", props)\n\n  const computedProps = useMemo<ComponentProps>(\n    () => ({\n      className: cx(\"ui-loading\", className),\n      size,\n      var: [\n        {\n          __prefix: \"ui\",\n          name: \"color\",\n          token: \"colors\",\n          value: color ?? colorScheme,\n        },\n        {\n          __prefix: \"ui\",\n          name: \"secondary-color\",\n          token: \"colors\",\n          value: secondaryColor,\n        },\n      ],\n      color: \"var(--ui-color)\",\n      ...(secondaryColor\n        ? { secondaryColor: \"var(--ui-secondary-color)\" }\n        : {}),\n      duration: duration ?? dur,\n      __css: { ...styles },\n      ...rest,\n    }),\n    [\n      className,\n      color,\n      secondaryColor,\n      colorScheme,\n      size,\n      duration,\n      dur,\n      rest,\n      styles,\n    ],\n  )\n\n  switch (variant) {\n    case \"grid\":\n      return <Grid ref={ref} {...computedProps} />\n\n    case \"audio\":\n      return <Audio ref={ref} {...computedProps} />\n\n    case \"dots\":\n      return <Dots ref={ref} {...computedProps} />\n\n    case \"puff\":\n      return <Puff ref={ref} {...computedProps} />\n\n    case \"rings\":\n      return <Rings ref={ref} {...computedProps} />\n\n    case \"circles\":\n      return <Circles ref={ref} {...computedProps} />\n\n    default:\n      return <Oval ref={ref} {...computedProps} />\n  }\n})\n","import { forwardRef } from \"@yamada-ui/core\"\nimport type { IconProps } from \"@yamada-ui/icon\"\nimport { Icon } from \"@yamada-ui/icon\"\n\nexport type AudioProps = IconProps & {\n  /**\n   * The CSS `dur` property.\n   *\n   * @default '1.4s'\n   */\n  duration?: IconProps[\"dur\"]\n}\n\nexport const Audio = forwardRef<AudioProps, \"svg\">(\n  ({ color, duration = \"1.4s\", ...rest }, ref) => {\n    const dur = typeof duration === \"string\" ? parseFloat(duration) : duration\n\n    return (\n      <Icon ref={ref} viewBox=\"0 0 55 80\" fill={color} {...rest}>\n        <g transform=\"matrix(1 0 0 -1 0 80)\">\n          <rect width=\"10\" height=\"20\" rx=\"3\">\n            <animate\n              attributeName=\"height\"\n              begin=\"0s\"\n              dur={`${dur * 3}s`}\n              values=\"20;45;57;80;64;32;66;45;64;23;66;13;64;56;34;34;2;23;76;79;20\"\n              calcMode=\"linear\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n          <rect x=\"15\" width=\"10\" height=\"80\" rx=\"3\">\n            <animate\n              attributeName=\"height\"\n              begin=\"0s\"\n              dur={`${dur * 1.4}s`}\n              values=\"80;55;33;5;75;23;73;33;12;14;60;80\"\n              calcMode=\"linear\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n          <rect x=\"30\" width=\"10\" height=\"50\" rx=\"3\">\n            <animate\n              attributeName=\"height\"\n              begin=\"0s\"\n              dur={`${dur}s`}\n              values=\"50;34;78;23;56;23;34;76;80;54;21;50\"\n              calcMode=\"linear\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n          <rect x=\"45\" width=\"10\" height=\"30\" rx=\"3\">\n            <animate\n              attributeName=\"height\"\n              begin=\"0s\"\n              dur={`${dur * 1.4}s`}\n              values=\"30;45;13;80;56;72;45;76;34;23;67;30\"\n              calcMode=\"linear\"\n              repeatCount=\"indefinite\"\n            />\n          </rect>\n        </g>\n      </Icon>\n    )\n  },\n)\n","import { forwardRef } from \"@yamada-ui/core\"\nimport type { IconProps } from \"@yamada-ui/icon\"\nimport { Icon } from \"@yamada-ui/icon\"\n\nexport type CirclesProps = Omit<IconProps, \"color\"> & {\n  /**\n   * The CSS `stroke` property.\n   */\n  color?: string\n  /**\n   * The CSS `dur` property.\n   *\n   * @default '3s'\n   */\n  duration?: IconProps[\"dur\"]\n}\n\nexport const Circles = forwardRef<CirclesProps, \"svg\">(\n  ({ color, duration = \"3s\", ...rest }, ref) => {\n    return (\n      <Icon ref={ref} viewBox=\"0 0 58 58\" stroke={color} {...rest}>\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(2 1)\" stroke={color} strokeWidth=\"1.5\">\n            <circle cx=\"42.601\" cy=\"11.462\" r=\"5\" fillOpacity=\"1\" fill={color}>\n              <animate\n                attributeName=\"fill-opacity\"\n                begin=\"0s\"\n                dur={duration}\n                values=\"1;0;0;0;0;0;0;0\"\n                calcMode=\"linear\"\n                repeatCount=\"indefinite\"\n              />\n            </circle>\n            <circle cx=\"49.063\" cy=\"27.063\" r=\"5\" fillOpacity=\"0\" fill={color}>\n              <animate\n                attributeName=\"fill-opacity\"\n                begin=\"0s\"\n                dur={duration}\n                values=\"0;1;0;0;0;0;0;0\"\n                calcMode=\"linear\"\n                repeatCount=\"indefinite\"\n              />\n            </circle>\n            <circle cx=\"42.601\" cy=\"42.663\" r=\"5\" fillOpacity=\"0\" fill={color}>\n              <animate\n                attributeName=\"fill-opacity\"\n                begin=\"0s\"\n                dur={duration}\n                values=\"0;0;1;0;0;0;0;0\"\n                calcMode=\"linear\"\n                repeatCount=\"indefinite\"\n              />\n            </circle>\n            <circle cx=\"27\" cy=\"49.125\" r=\"5\" fillOpacity=\"0\" fill={color}>\n              <animate\n                attributeName=\"fill-opacity\"\n                begin=\"0s\"\n                dur={duration}\n                values=\"0;0;0;1;0;0;0;0\"\n                calcMode=\"linear\"\n                repeatCount=\"indefinite\"\n              />\n            </circle>\n            <circle cx=\"11.399\" cy=\"42.663\" r=\"5\" fillOpacity=\"0\" fill={color}>\n              <animate\n                attributeName=\"fill-opacity\"\n                begin=\"0s\"\n                dur={duration}\n                values=\"0;0;0;0;1;0;0;0\"\n                calcMode=\"linear\"\n                repeatCount=\"indefinite\"\n              />\n            </circle>\n            <circle cx=\"4.938\" cy=\"27.063\" r=\"5\" fillOpacity=\"0\" fill={color}>\n              <animate\n                attributeName=\"fill-opacity\"\n                begin=\"0s\"\n                dur={duration}\n                values=\"0;0;0;0;0;1;0;0\"\n                calcMode=\"linear\"\n                repeatCount=\"indefinite\"\n              />\n            </circle>\n            <circle cx=\"11.399\" cy=\"11.462\" r=\"5\" fillOpacity=\"0\" fill={color}>\n              <animate\n                attributeName=\"fill-opacity\"\n                begin=\"0s\"\n                dur={duration}\n                values=\"0;0;0;0;0;0;1;0\"\n                calcMode=\"linear\"\n                repeatCount=\"indefinite\"\n              />\n            </circle>\n            <circle cx=\"27\" cy=\"5\" r=\"5\" fillOpacity=\"0\" fill={color}>\n              <animate\n                attributeName=\"fill-opacity\"\n                begin=\"0s\"\n                dur={duration}\n                values=\"0;0;0;0;0;0;0;1\"\n                calcMode=\"linear\"\n                repeatCount=\"indefinite\"\n              />\n            </circle>\n          </g>\n        </g>\n      </Icon>\n    )\n  },\n)\n","import { forwardRef } from \"@yamada-ui/core\"\nimport type { IconProps } from \"@yamada-ui/icon\"\nimport { Icon } from \"@yamada-ui/icon\"\n\nexport type DotsProps = IconProps & {\n  /**\n   * The CSS `dur` property.\n   *\n   * @default '1s'\n   */\n  duration?: IconProps[\"dur\"]\n}\n\nexport const Dots = forwardRef<DotsProps, \"svg\">(\n  ({ color, duration = \"1s\", ...rest }, ref) => {\n    return (\n      <Icon ref={ref} viewBox=\"0 0 120 30\" fill={color} {...rest}>\n        <circle cx=\"15\" cy=\"15\" r=\"15\">\n          <animate\n            attributeName=\"r\"\n            from=\"15\"\n            to=\"15\"\n            begin=\"0s\"\n            dur={duration}\n            values=\"15;9;15\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"fill-opacity\"\n            from=\"1\"\n            to=\"1\"\n            begin=\"0s\"\n            dur={duration}\n            values=\"1;.5;1\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n        <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\n          <animate\n            attributeName=\"r\"\n            from=\"9\"\n            to=\"9\"\n            begin=\"0s\"\n            dur={duration}\n            values=\"9;15;9\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"fill-opacity\"\n            from=\"0.5\"\n            to=\"0.5\"\n            begin=\"0s\"\n            dur={duration}\n            values=\".5;1;.5\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n        <circle cx=\"105\" cy=\"15\" r=\"15\">\n          <animate\n            attributeName=\"r\"\n            from=\"15\"\n            to=\"15\"\n            begin=\"0s\"\n            dur={duration}\n            values=\"15;9;15\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"fill-opacity\"\n            from=\"1\"\n            to=\"1\"\n            begin=\"0s\"\n            dur={duration}\n            values=\"1;.5;1\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n      </Icon>\n    )\n  },\n)\n","import { forwardRef } from \"@yamada-ui/core\"\nimport type { IconProps } from \"@yamada-ui/icon\"\nimport { Icon } from \"@yamada-ui/icon\"\n\nexport type GridProps = IconProps & {\n  /**\n   * The CSS `dur` property.\n   *\n   * @default '1s'\n   */\n  duration?: IconProps[\"dur\"]\n}\n\nexport const Grid = forwardRef<GridProps, \"svg\">(\n  ({ color, duration = \"1s\", ...rest }, ref) => {\n    return (\n      <Icon ref={ref} viewBox=\"0 0 105 105\" fill={color} {...rest}>\n        <circle cx=\"12.5\" cy=\"12.5\" r=\"12.5\">\n          <animate\n            attributeName=\"fill-opacity\"\n            begin=\"0s\"\n            dur={duration}\n            values=\"1;.2;1\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n        <circle cx=\"12.5\" cy=\"52.5\" r=\"12.5\" fillOpacity=\".5\">\n          <animate\n            attributeName=\"fill-opacity\"\n            begin=\"100ms\"\n            dur={duration}\n            values=\"1;.2;1\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n        <circle cx=\"52.5\" cy=\"12.5\" r=\"12.5\">\n          <animate\n            attributeName=\"fill-opacity\"\n            begin=\"300ms\"\n            dur={duration}\n            values=\"1;.2;1\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n        <circle cx=\"52.5\" cy=\"52.5\" r=\"12.5\">\n          <animate\n            attributeName=\"fill-opacity\"\n            begin=\"600ms\"\n            dur={duration}\n            values=\"1;.2;1\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n        <circle cx=\"92.5\" cy=\"12.5\" r=\"12.5\">\n          <animate\n            attributeName=\"fill-opacity\"\n            begin=\"800ms\"\n            dur={duration}\n            values=\"1;.2;1\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n        <circle cx=\"92.5\" cy=\"52.5\" r=\"12.5\">\n          <animate\n            attributeName=\"fill-opacity\"\n            begin=\"400ms\"\n            dur={duration}\n            values=\"1;.2;1\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n        <circle cx=\"12.5\" cy=\"92.5\" r=\"12.5\">\n          <animate\n            attributeName=\"fill-opacity\"\n            begin=\"700ms\"\n            dur={duration}\n            values=\"1;.2;1\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n        <circle cx=\"52.5\" cy=\"92.5\" r=\"12.5\">\n          <animate\n            attributeName=\"fill-opacity\"\n            begin=\"500ms\"\n            dur={duration}\n            values=\"1;.2;1\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n        <circle cx=\"92.5\" cy=\"92.5\" r=\"12.5\">\n          <animate\n            attributeName=\"fill-opacity\"\n            begin=\"200ms\"\n            dur={duration}\n            values=\"1;.2;1\"\n            calcMode=\"linear\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n      </Icon>\n    )\n  },\n)\n","import { forwardRef } from \"@yamada-ui/core\"\nimport type { IconProps } from \"@yamada-ui/icon\"\nimport { Icon } from \"@yamada-ui/icon\"\n\nexport type OvalProps = IconProps & {\n  /**\n   * The CSS `stroke` property.\n   */\n  secondaryColor?: string\n  /**\n   * The CSS `dur` property.\n   *\n   * @default '1s'\n   */\n  duration?: IconProps[\"dur\"]\n}\n\nexport const Oval = forwardRef<OvalProps, \"svg\">(\n  ({ color, secondaryColor, duration = \"1s\", ...rest }, ref) => {\n    return (\n      <Icon ref={ref} viewBox=\"0 0 38 38\" stroke={color} {...rest}>\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n            <circle\n              {...(secondaryColor\n                ? { stroke: secondaryColor }\n                : { strokeOpacity: \".5\" })}\n              cx=\"18\"\n              cy=\"18\"\n              r=\"18\"\n            />\n            <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n              <animateTransform\n                attributeName=\"transform\"\n                type=\"rotate\"\n                from=\"0 18 18\"\n                to=\"360 18 18\"\n                dur={duration}\n                repeatCount=\"indefinite\"\n              />\n            </path>\n          </g>\n        </g>\n      </Icon>\n    )\n  },\n)\n","import { forwardRef } from \"@yamada-ui/core\"\nimport type { IconProps } from \"@yamada-ui/icon\"\nimport { Icon } from \"@yamada-ui/icon\"\n\nexport type PuffProps = IconProps & {\n  /**\n   * The CSS `dur` property.\n   *\n   * @default '1.8s'\n   */\n  duration?: IconProps[\"dur\"]\n}\n\nexport const Puff = forwardRef<PuffProps, \"svg\">(\n  ({ color, duration = \"1.8s\", ...rest }, ref) => {\n    return (\n      <Icon ref={ref} viewBox=\"0 0 44 44\" stroke={color} {...rest}>\n        <g fill=\"none\" fillRule=\"evenodd\" strokeWidth=\"2\">\n          <circle cx=\"22\" cy=\"22\" r=\"1\">\n            <animate\n              attributeName=\"r\"\n              begin=\"0s\"\n              dur={duration}\n              values=\"1; 20\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.165, 0.84, 0.44, 1\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"stroke-opacity\"\n              begin=\"0s\"\n              dur={duration}\n              values=\"1; 0\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.3, 0.61, 0.355, 1\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n          <circle cx=\"22\" cy=\"22\" r=\"1\">\n            <animate\n              attributeName=\"r\"\n              begin=\"-0.9s\"\n              dur={duration}\n              values=\"1; 20\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.165, 0.84, 0.44, 1\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"stroke-opacity\"\n              begin=\"-0.9s\"\n              dur={duration}\n              values=\"1; 0\"\n              calcMode=\"spline\"\n              keyTimes=\"0; 1\"\n              keySplines=\"0.3, 0.61, 0.355, 1\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </g>\n      </Icon>\n    )\n  },\n)\n","import { forwardRef } from \"@yamada-ui/core\"\nimport type { IconProps } from \"@yamada-ui/icon\"\nimport { Icon } from \"@yamada-ui/icon\"\n\nexport type RingsProps = IconProps & {\n  /**\n   * The CSS `dur` property.\n   *\n   * @default '3s'\n   */\n  duration?: IconProps[\"dur\"]\n}\n\nexport const Rings = forwardRef<RingsProps, \"svg\">(\n  ({ color, duration = \"3s\", ...rest }, ref) => {\n    const dur = typeof duration === \"string\" ? parseFloat(duration) : duration\n\n    return (\n      <Icon ref={ref} viewBox=\"0 0 45 45\" stroke={color} {...rest}>\n        <g\n          fill=\"none\"\n          fillRule=\"evenodd\"\n          transform=\"translate(1 1)\"\n          strokeWidth=\"2\"\n        >\n          <circle cx=\"22\" cy=\"22\" r=\"6\" strokeOpacity=\"0\">\n            <animate\n              attributeName=\"r\"\n              begin=\"1.5s\"\n              dur={`${dur}s`}\n              values=\"6;22\"\n              calcMode=\"linear\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"stroke-opacity\"\n              begin=\"1.5s\"\n              dur={`${dur}s`}\n              values=\"1;0\"\n              calcMode=\"linear\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"stroke-width\"\n              begin=\"1.5s\"\n              dur={`${dur}s`}\n              values=\"2;0\"\n              calcMode=\"linear\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n          <circle cx=\"22\" cy=\"22\" r=\"6\" strokeOpacity=\"0\">\n            <animate\n              attributeName=\"r\"\n              begin=\"3s\"\n              dur={`${dur}s`}\n              values=\"6;22\"\n              calcMode=\"linear\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"stroke-opacity\"\n              begin=\"3s\"\n              dur={`${dur}s`}\n              values=\"1;0\"\n              calcMode=\"linear\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"stroke-width\"\n              begin=\"3s\"\n              dur={`${dur}s`}\n              values=\"2;0\"\n              calcMode=\"linear\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n          <circle cx=\"22\" cy=\"22\" r=\"8\">\n            <animate\n              attributeName=\"r\"\n              begin=\"0s\"\n              dur={`${dur / 2}s`}\n              values=\"6;1;2;3;4;5;6\"\n              calcMode=\"linear\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </g>\n      </Icon>\n    )\n  },\n)\n","import type {\n  ThemeConfig,\n  LoadingComponentProps,\n  CSSUIObject,\n  LoadingConfigOptions,\n  HTMLUIProps,\n} from \"@yamada-ui/core\"\nimport { ui } from \"@yamada-ui/core\"\nimport type { MotionVariants } from \"@yamada-ui/motion\"\nimport { AnimatePresence, Motion, motion } from \"@yamada-ui/motion\"\nimport { Portal } from \"@yamada-ui/portal\"\nimport { useTimeout } from \"@yamada-ui/use-timeout\"\nimport {\n  isValidElement,\n  assignRef,\n  useUpdateEffect,\n  isNumber,\n} from \"@yamada-ui/utils\"\nimport type {\n  FC,\n  PropsWithChildren,\n  ReactNode,\n  MutableRefObject,\n  RefObject,\n} from \"react\"\nimport {\n  createContext,\n  memo,\n  useContext,\n  useMemo,\n  useState,\n  Fragment,\n  useRef,\n  createRef,\n} from \"react\"\nimport { RemoveScroll } from \"react-remove-scroll\"\nimport { Loading } from \"./loading\"\n\ntype LoadingContextProps = {\n  /**\n   * Returns a judgement on whether it is currently loading or not.\n   */\n  isLoading: () => boolean\n  /**\n   * Function to start loading.\n   *\n   * If you specify a `message` etc. as an argument, the loading will change accordingly.\n   */\n  start: (props?: Partial<LoadingProps>) => void\n  /**\n   * Function to finish loading.\n   */\n  finish: () => void\n  /**\n   * Function to update loading.\n   *\n   * If you specify a `message` etc. as an argument, the loading will change accordingly.\n   */\n  update: (props: Partial<LoadingProps>) => void\n  /**\n   * Function to forcefully update the loading state.\n   *\n   * Please be careful, as it will forcefully overwrite the state of the loading component.\n   */\n  force: (state: Partial<LoadingState>) => void\n}\n\ntype LoadingContext = {\n  /**\n   * The screen loading animation.\n   */\n  screen: LoadingContextProps\n  /**\n   * The page loading animation.\n   */\n  page: LoadingContextProps\n  /**\n   * The background loading animation.\n   */\n  background: LoadingContextProps\n  /**\n   * The custom loading animation.\n   *\n   * This cannot be used unless a component is defined at `config/loading/custom.`\n   */\n  custom: LoadingContextProps\n}\n\ntype LoadingProps = {\n  message: ReactNode | undefined\n  duration: number | null\n}\n\ntype LoadingState = {\n  loadingCount: number\n  message: ReactNode | undefined\n  duration: number | null\n}\n\nexport type LoadingProviderProps = PropsWithChildren<ThemeConfig[\"loading\"]>\n\nconst LoadingContext = createContext({} as LoadingContext)\n\ntype Refs = {\n  isLoading: RefObject<LoadingContextProps[\"isLoading\"]>\n  start: RefObject<LoadingContextProps[\"start\"]>\n  finish: RefObject<LoadingContextProps[\"finish\"]>\n  update: RefObject<LoadingContextProps[\"update\"]>\n  force: RefObject<LoadingContextProps[\"force\"]>\n}\n\ntype ControlRefs = MutableRefObject<Refs>\n\nconst createLoadingRefs = (): Refs => ({\n  isLoading: createRef<LoadingContextProps[\"isLoading\"]>(),\n  start: createRef<LoadingContextProps[\"start\"]>(),\n  finish: createRef<LoadingContextProps[\"finish\"]>(),\n  update: createRef<LoadingContextProps[\"update\"]>(),\n  force: createRef<LoadingContextProps[\"force\"]>(),\n})\n\nconst createLoadingFunc = (refs: ControlRefs): LoadingContextProps => ({\n  isLoading: () => refs.current.isLoading.current?.() ?? false,\n  start: (props) => refs.current.start.current?.(props),\n  finish: () => refs.current.finish.current?.(),\n  update: (props) => refs.current.update.current?.(props),\n  force: (state) => refs.current.force.current?.(state),\n})\n\nconst incrementCount = (prev: number) => prev + 1\nconst decrementCount = (prev: number) => (prev === 0 ? prev : prev - 1)\n\nexport const LoadingProvider: FC<LoadingProviderProps> = ({\n  screen,\n  page,\n  background,\n  custom,\n  children,\n}) => {\n  const screenRefs = useRef(createLoadingRefs())\n  const pageRefs = useRef(createLoadingRefs())\n  const backgroundRefs = useRef(createLoadingRefs())\n  const customRefs = useRef(createLoadingRefs())\n\n  const screenLoadingFunc = createLoadingFunc(screenRefs)\n  const pageLoadingFunc = createLoadingFunc(pageRefs)\n  const backgroundLoadingFunc = createLoadingFunc(backgroundRefs)\n  const customLoadingFunc = createLoadingFunc(customRefs)\n\n  const value = {\n    screen: screenLoadingFunc,\n    page: pageLoadingFunc,\n    background: backgroundLoadingFunc,\n    custom: customLoadingFunc,\n  }\n\n  return (\n    <LoadingContext.Provider value={value}>\n      {children}\n\n      <Controller\n        controlRefs={screenRefs}\n        {...screen}\n        component={\n          screen?.component ?? ((props) => <ScreenComponent {...props} />)\n        }\n      />\n\n      <Controller\n        controlRefs={pageRefs}\n        {...page}\n        component={page?.component ?? ((props) => <PageComponent {...props} />)}\n      />\n\n      <Controller\n        controlRefs={backgroundRefs}\n        {...background}\n        blockScrollOnMount={background?.blockScrollOnMount ?? false}\n        component={\n          background?.component ??\n          ((props) => <BackgroundComponent {...props} />)\n        }\n      />\n\n      <Controller\n        controlRefs={customRefs}\n        blockScrollOnMount={background?.blockScrollOnMount ?? false}\n        {...custom}\n        component={custom?.component}\n      />\n    </LoadingContext.Provider>\n  )\n}\n\ntype ControllerProps = {\n  controlRefs: ControlRefs\n  render?: (props: LoadingComponentProps) => JSX.Element\n} & LoadingConfigOptions\n\nconst Controller: FC<ControllerProps> = ({\n  controlRefs,\n  appendToParentPortal,\n  containerRef,\n  allowPinchZoom = false,\n  blockScrollOnMount = true,\n  initialState,\n  duration: durationProps = null,\n  icon,\n  text,\n  component,\n}) => {\n  const isLoadingRef = useRef<boolean>(false)\n  const [{ loadingCount, message, duration }, setState] =\n    useState<LoadingState>({\n      loadingCount: initialState ? 1 : 0,\n      message: undefined,\n      duration: durationProps,\n    })\n\n  const { isLoading, start, finish, update, force }: LoadingContextProps =\n    useMemo(\n      () => ({\n        isLoading: () => isLoadingRef.current,\n\n        start: ({ message, duration = durationProps } = {}) => {\n          isLoadingRef.current = true\n\n          setState(({ loadingCount }) => ({\n            loadingCount: incrementCount(loadingCount),\n            message,\n            duration,\n          }))\n        },\n\n        update: (next) => setState((prev) => ({ ...prev, ...next })),\n\n        finish: () => {\n          isLoadingRef.current = false\n\n          setState(({ loadingCount }) => ({\n            loadingCount: decrementCount(loadingCount),\n            message: undefined,\n            duration: durationProps,\n          }))\n        },\n\n        force: ({ loadingCount = 0, message, duration = durationProps }) => {\n          isLoadingRef.current = !!loadingCount\n\n          setState({\n            loadingCount,\n            message,\n            duration,\n          })\n        },\n      }),\n      [durationProps],\n    )\n\n  assignRef(controlRefs.current.isLoading, isLoading)\n  assignRef(controlRefs.current.start, start)\n  assignRef(controlRefs.current.finish, finish)\n  assignRef(controlRefs.current.update, update)\n  assignRef(controlRefs.current.force, force)\n\n  const props: LoadingComponentProps = {\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish: finish,\n  }\n\n  useUpdateEffect(() => {\n    if (initialState || isNumber(durationProps))\n      setState({\n        loadingCount: initialState ? 1 : 0,\n        message: undefined,\n        duration: durationProps,\n      })\n  }, [initialState, durationProps])\n\n  return (\n    <AnimatePresence initial={false}>\n      {loadingCount ? (\n        <Portal\n          appendToParentPortal={appendToParentPortal}\n          containerRef={containerRef}\n        >\n          <RemoveScroll\n            allowPinchZoom={allowPinchZoom}\n            enabled={blockScrollOnMount}\n            forwardProps\n          >\n            <Fragment>\n              <Render component={component} {...props} />\n            </Fragment>\n          </RemoveScroll>\n        </Portal>\n      ) : null}\n    </AnimatePresence>\n  )\n}\n\ntype RenderProps = {\n  component?: (props: LoadingComponentProps) => ReactNode\n} & LoadingComponentProps\n\nconst Render: FC<RenderProps> = ({ component, ...props }) => {\n  if (typeof component === \"function\") {\n    return component(props) as JSX.Element\n  } else {\n    return <></>\n  }\n}\n\ntype MessageProps = { message: ReactNode } & HTMLUIProps<\"p\">\n\nconst Message: FC<MessageProps> = ({ message, ...rest }) => {\n  return message ? (\n    isValidElement(message) ? (\n      message\n    ) : (\n      <ui.p {...rest}>{message}</ui.p>\n    )\n  ) : null\n}\n\nconst getVariants = (type: \"fade\" | \"scaleFade\" = \"fade\"): MotionVariants => ({\n  initial: {\n    opacity: 0,\n    scale: type === \"scaleFade\" ? 0.95 : undefined,\n  },\n  animate: {\n    opacity: 1,\n    scale: type === \"scaleFade\" ? 1 : undefined,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: type === \"scaleFade\" ? 0.95 : undefined,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n})\n\nconst getOverlayStyle = (\n  type: \"fill\" | \"transparent\" = \"fill\",\n): CSSUIObject => ({\n  position: \"fixed\",\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  zIndex: \"fallback(beerus, 9999)\",\n  bg:\n    type === \"fill\"\n      ? [\"fallback(white, #fbfbfb)\", \"fallback(black, #141414)\"]\n      : \"fallback(blackAlpha.600, rgba(0, 0, 0, 0.48))\",\n  w: \"100vw\",\n  h: \"100dvh\",\n  p: \"fallback(4, 1rem)\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n})\n\nconst getMotionProps = (\n  initialState: boolean | undefined,\n  type: \"fade\" | \"scaleFade\" = \"fade\",\n) => ({\n  initial: initialState ? false : \"initial\",\n  animate: \"animate\",\n  exit: \"exit\",\n  variants: getVariants(type),\n})\n\nconst ScreenComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      maxW: \"24rem\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"fallback(2, 0.5rem)\",\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <Motion\n        className=\"ui-loading-screen\"\n        {...getMotionProps(initialState)}\n        __css={getOverlayStyle()}\n      >\n        <ui.div __css={css}>\n          <Loading size=\"6xl\" {...icon} />\n          <Message message={message} lineClamp={3} {...text} />\n        </ui.div>\n      </Motion>\n    )\n  },\n)\n\nScreenComponent.displayName = \"ScreenComponent\"\n\nconst PageComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      bg: [\"fallback(white, #fbfbfb)\", \"fallback(black, #141414)\"],\n      maxW: \"24rem\",\n      p: \"fallback(4, 1rem)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"fallback(2, 0.5rem)\",\n      rounded: \"fallback(md, 0.375rem)\",\n      boxShadow: [\n        \"fallback(lg, 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05))\",\n        \"fallback(dark-lg, 0px 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 5px 10px rgba(0, 0, 0, 0.2), 0px 15px 40px rgba(0, 0, 0, 0.4))\",\n      ],\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <Motion\n        className=\"ui-loading-page\"\n        {...getMotionProps(initialState)}\n        __css={getOverlayStyle(\"transparent\")}\n      >\n        <ui.div\n          as={motion.div}\n          className=\"ui-loading-page__inner\"\n          {...getMotionProps(initialState, \"scaleFade\")}\n          __css={css}\n        >\n          <Loading size=\"6xl\" {...icon} />\n          <Message message={message} lineClamp={3} {...text} />\n        </ui.div>\n      </Motion>\n    )\n  },\n)\n\nPageComponent.displayName = \"PageComponent\"\n\nconst BackgroundComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      position: \"fixed\",\n      right: \"fallback(4, 1rem)\",\n      bottom: \"fallback(4, 1rem)\",\n      zIndex: \"fallback(beerus, 9999)\",\n      bg: [\"fallback(white, #fbfbfb)\", \"fallback(black, #141414)\"],\n      maxW: \"20rem\",\n      p: \"fallback(2, 0.5rem)\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"fallback(2, 0.5rem)\",\n      rounded: \"fallback(md, 0.375rem)\",\n      boxShadow: [\n        \"fallback(3xl, 0 25px 50px -12px rgba(0, 0, 0, 0.25), 0 -25px 50px -12px rgba(0, 0, 0, 0.25))\",\n        \"fallback(dark-lg, 0px 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 5px 10px rgba(0, 0, 0, 0.2), 0px 15px 40px rgba(0, 0, 0, 0.4))\",\n      ],\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <Motion\n        className=\"ui-loading-background\"\n        {...getMotionProps(initialState, \"scaleFade\")}\n        __css={css}\n      >\n        <Loading size=\"xl\" {...icon} />\n        <Message message={message} fontSize=\"sm\" lineClamp={1} {...text} />\n      </Motion>\n    )\n  },\n)\n\nBackgroundComponent.displayName = \"BackgroundComponent\"\n\n/**\n * `useLoading` is a custom hook for controlling the loading of the application.\n *\n * @see Docs https://yamada-ui.com/hooks/use-loading\n */\nexport const useLoading = (): LoadingContext => {\n  const { screen, page, background, custom } = useContext(LoadingContext)\n\n  return { screen, page, background, custom }\n}\n"],"mappings":"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","names":["import_core","import_core","import_icon","import_jsx_runtime","import_core","import_icon","import_jsx_runtime","import_core","import_icon","import_jsx_runtime","import_core","import_icon","import_jsx_runtime","import_core","import_icon","import_jsx_runtime","import_core","import_icon","import_jsx_runtime","import_jsx_runtime","import_core","import_utils","import_react","import_jsx_runtime","message","duration","loadingCount"]}
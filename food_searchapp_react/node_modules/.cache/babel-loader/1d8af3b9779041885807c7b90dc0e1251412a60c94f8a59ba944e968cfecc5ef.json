{"ast":null,"code":"\"use client\";\n\n// src/use-ripple.ts\nimport { createId, handlerAll } from \"@yamada-ui/utils\";\nimport { useCallback, useState } from \"react\";\nvar useRipple = ({\n  disabled,\n  isDisabled,\n  ...rest\n} = {}) => {\n  const [ripples, setRipples] = useState([]);\n  const onPointerDown = useCallback(ev => {\n    if (disabled || isDisabled) return setRipples([]);\n    const trigger = ev.currentTarget;\n    const size = Math.max(trigger.clientWidth, trigger.clientHeight);\n    const rect = trigger.getBoundingClientRect();\n    setRipples(prev => [...prev, {\n      key: createId(prev.length.toString()),\n      size,\n      x: ev.clientX - rect.x - size / 2,\n      y: ev.clientY - rect.y - size / 2\n    }]);\n  }, [disabled, isDisabled]);\n  const onClear = useCallback(key => {\n    setRipples(prev => prev.filter(item => item.key !== key));\n  }, []);\n  return {\n    ripples,\n    onPointerDown: handlerAll(onPointerDown, rest.onPointerDown),\n    onClear\n  };\n};\nexport { useRipple };","map":{"version":3,"names":["createId","handlerAll","useCallback","useState","useRipple","disabled","isDisabled","rest","ripples","setRipples","onPointerDown","ev","trigger","currentTarget","size","Math","max","clientWidth","clientHeight","rect","getBoundingClientRect","prev","key","length","toString","x","clientX","y","clientY","onClear","filter","item"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\ripple\\src\\use-ripple.ts"],"sourcesContent":["import { createId, handlerAll } from \"@yamada-ui/utils\"\nimport type React from \"react\"\nimport type { Key, PointerEventHandler } from \"react\"\nimport { useCallback, useState } from \"react\"\n\nexport type RippleOptions = {\n  key: React.Key\n  x: number\n  y: number\n  size: number\n}\n\nexport type UseRippleProps<T extends any = HTMLElement> = {\n  disabled?: boolean\n  isDisabled?: boolean\n  onPointerDown?: PointerEventHandler<T>\n}\n\nexport const useRipple = <T extends any = HTMLElement>({\n  disabled,\n  isDisabled,\n  ...rest\n}: UseRippleProps<T> = {}) => {\n  const [ripples, setRipples] = useState<RippleOptions[]>([])\n\n  const onPointerDown: PointerEventHandler<T> = useCallback(\n    (ev) => {\n      if (disabled || isDisabled) return setRipples([])\n\n      const trigger = ev.currentTarget as unknown as Element\n\n      const size = Math.max(trigger.clientWidth, trigger.clientHeight)\n      const rect = trigger.getBoundingClientRect()\n\n      setRipples((prev) => [\n        ...prev,\n        {\n          key: createId(prev.length.toString()),\n          size,\n          x: ev.clientX - rect.x - size / 2,\n          y: ev.clientY - rect.y - size / 2,\n        },\n      ])\n    },\n    [disabled, isDisabled],\n  )\n\n  const onClear = useCallback((key: Key) => {\n    setRipples((prev) => prev.filter((item) => item.key !== key))\n  }, [])\n\n  return {\n    ripples,\n    onPointerDown: handlerAll(onPointerDown, rest.onPointerDown),\n    onClear,\n  }\n}\n\nexport type UseRippleReturn = ReturnType<typeof useRipple>\n"],"mappings":";;;AAAA,SAASA,QAAA,EAAUC,UAAA,QAAkB;AAGrC,SAASC,WAAA,EAAaC,QAAA,QAAgB;AAe/B,IAAMC,SAAA,GAAYA,CAA8B;EACrDC,QAAA;EACAC,UAAA;EACA,GAAGC;AACL,IAAuB,CAAC,MAAM;EAC5B,MAAM,CAACC,OAAA,EAASC,UAAU,IAAIN,QAAA,CAA0B,EAAE;EAE1D,MAAMO,aAAA,GAAwCR,WAAA,CAC3CS,EAAA,IAAO;IACN,IAAIN,QAAA,IAAYC,UAAA,EAAY,OAAOG,UAAA,CAAW,EAAE;IAEhD,MAAMG,OAAA,GAAUD,EAAA,CAAGE,aAAA;IAEnB,MAAMC,IAAA,GAAOC,IAAA,CAAKC,GAAA,CAAIJ,OAAA,CAAQK,WAAA,EAAaL,OAAA,CAAQM,YAAY;IAC/D,MAAMC,IAAA,GAAOP,OAAA,CAAQQ,qBAAA,CAAsB;IAE3CX,UAAA,CAAYY,IAAA,IAAS,CACnB,GAAGA,IAAA,EACH;MACEC,GAAA,EAAKtB,QAAA,CAASqB,IAAA,CAAKE,MAAA,CAAOC,QAAA,CAAS,CAAC;MACpCV,IAAA;MACAW,CAAA,EAAGd,EAAA,CAAGe,OAAA,GAAUP,IAAA,CAAKM,CAAA,GAAIX,IAAA,GAAO;MAChCa,CAAA,EAAGhB,EAAA,CAAGiB,OAAA,GAAUT,IAAA,CAAKQ,CAAA,GAAIb,IAAA,GAAO;IAClC,EACD;EACH,GACA,CAACT,QAAA,EAAUC,UAAU,CACvB;EAEA,MAAMuB,OAAA,GAAU3B,WAAA,CAAaoB,GAAA,IAAa;IACxCb,UAAA,CAAYY,IAAA,IAASA,IAAA,CAAKS,MAAA,CAAQC,IAAA,IAASA,IAAA,CAAKT,GAAA,KAAQA,GAAG,CAAC;EAC9D,GAAG,EAAE;EAEL,OAAO;IACLd,OAAA;IACAE,aAAA,EAAeT,UAAA,CAAWS,aAAA,EAAeH,IAAA,CAAKG,aAAa;IAC3DmB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\nimport { useTableStyles } from \"./chunk-46RUZ6RP.mjs\";\n\n// src/td.tsx\nimport { ui, forwardRef } from \"@yamada-ui/core\";\nimport { cx } from \"@yamada-ui/utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Td = forwardRef((_ref, ref) => {\n  let {\n    className,\n    isNumeric,\n    ...rest\n  } = _ref;\n  const styles = useTableStyles();\n  const css = {\n    ...styles.td\n  };\n  return /* @__PURE__ */jsx(ui.td, {\n    ref,\n    className: cx(\"ui-table__td\", className),\n    __css: css,\n    \"data-is-numeric\": isNumeric,\n    ...rest\n  });\n});\nexport { Td };","map":{"version":3,"names":["ui","forwardRef","cx","jsx","Td","_ref","ref","className","isNumeric","rest","styles","useTableStyles","css","td","__css"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\native-table\\src\\td.tsx"],"sourcesContent":["import type { HTMLUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useTableStyles } from \"./native-table\"\n\ntype TdOptions = {\n  /**\n   * Aligns the cell content to the right.\n   *\n   * @default false\n   */\n  isNumeric?: boolean\n}\n\nexport type TdProps = HTMLUIProps<\"td\"> & TdOptions\n\nexport const Td = forwardRef<TdProps, \"td\">(\n  ({ className, isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles()\n\n    const css: CSSUIObject = { ...styles.td }\n\n    return (\n      <ui.td\n        ref={ref}\n        className={cx(\"ui-table__td\", className)}\n        __css={css}\n        data-is-numeric={isNumeric}\n        {...rest}\n      />\n    )\n  },\n)\n"],"mappings":";;;;;AACA,SAASA,EAAA,EAAIC,UAAA,QAAkB;AAC/B,SAASC,EAAA,QAAU;AAqBb,SAAAC,GAAA;AAPC,IAAMC,EAAA,GAAKH,UAAA,CAChB,CAAAI,IAAA,EAAoCC,GAAA,KAAQ;EAAA,IAA3C;IAAEC,SAAA;IAAWC,SAAA;IAAW,GAAGC;EAAK,IAAAJ,IAAA;EAC/B,MAAMK,MAAA,GAASC,cAAA,CAAe;EAE9B,MAAMC,GAAA,GAAmB;IAAE,GAAGF,MAAA,CAAOG;EAAG;EAExC,OACE,eAAAV,GAAA,CAACH,EAAA,CAAGa,EAAA,EAAH;IACCP,GAAA;IACAC,SAAA,EAAWL,EAAA,CAAG,gBAAgBK,SAAS;IACvCO,KAAA,EAAOF,GAAA;IACP,mBAAiBJ,SAAA;IAChB,GAAGC;EAAA,CACN;AAEJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
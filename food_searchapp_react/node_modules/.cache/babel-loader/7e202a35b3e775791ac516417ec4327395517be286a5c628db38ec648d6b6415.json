{"ast":null,"code":"\"use client\";\n\n// src/button-group.tsx\nimport { ui, forwardRef } from \"@yamada-ui/core\";\nimport { createContext, cx, dataAttr } from \"@yamada-ui/utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\nvar ButtonGroup = forwardRef(({\n  className,\n  size,\n  variant,\n  direction: flexDirection,\n  isAttached,\n  isDisabled,\n  gap,\n  columnGap,\n  rowGap,\n  ...rest\n}, ref) => {\n  const isColumn = flexDirection === \"column\" || flexDirection === \"column-reverse\";\n  const css = {\n    display: \"inline-flex\",\n    flexDirection\n  };\n  const context = useMemo(() => ({\n    size,\n    variant,\n    isDisabled\n  }), [size, variant, isDisabled]);\n  if (isAttached) {\n    Object.assign(css, {\n      \"> *:first-of-type:not(:last-of-type)\": isColumn ? {\n        borderBottomRadius: 0,\n        marginBlockEnd: \"-1px\"\n      } : {\n        borderRightRadius: 0,\n        marginInlineEnd: \"-1px\"\n      },\n      \"> *:not(:first-of-type):not(:last-of-type)\": isColumn ? {\n        borderRadius: 0,\n        marginBlockStart: \"-1px\"\n      } : {\n        borderRadius: 0,\n        marginInlineEnd: \"-1px\"\n      },\n      \"> *:not(:first-of-type):last-of-type\": isColumn ? {\n        borderTopRadius: 0,\n        marginBlockStart: \"-1px\"\n      } : {\n        borderLeftRadius: 0\n      }\n    });\n  } else {\n    Object.assign(css, {\n      gap,\n      columnGap,\n      rowGap\n    });\n  }\n  return /* @__PURE__ */jsx(ButtonGroupProvider, {\n    value: context,\n    children: /* @__PURE__ */jsx(ui.div, {\n      ref,\n      role: \"group\",\n      className: cx(\"ui-button-group\", className),\n      \"data-attached\": dataAttr(isAttached),\n      __css: css,\n      ...rest\n    })\n  });\n});\nexport { useButtonGroup, ButtonGroup };","map":{"version":3,"names":["ui","forwardRef","createContext","cx","dataAttr","useMemo","jsx","ButtonGroupProvider","useButtonGroup","strict","name","ButtonGroup","className","size","variant","direction","flexDirection","isAttached","isDisabled","gap","columnGap","rowGap","rest","ref","isColumn","css","display","context","Object","assign","borderBottomRadius","marginBlockEnd","borderRightRadius","marginInlineEnd","borderRadius","marginBlockStart","borderTopRadius","borderLeftRadius","value","children","div","role","__css"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\button\\src\\button-group.tsx"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps, ThemeProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { createContext, cx, dataAttr } from \"@yamada-ui/utils\"\nimport { useMemo } from \"react\"\n\ntype ButtonGroupOptions = {\n  /**\n   * The CSS `flex-direction` property.\n   */\n  direction?: CSSUIObject[\"flexDirection\"]\n  /**\n   * If `true`, the borderRadius of button that are direct children will be altered to look flushed together.\n   *\n   * @default false\n   */\n  isAttached?: boolean\n  /**\n   * If `true`, all wrapped button will be disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n}\n\nexport type ButtonGroupProps = Omit<HTMLUIProps<\"div\">, \"direction\"> &\n  ThemeProps<\"Button\"> &\n  ButtonGroupOptions\n\ntype ButtonGroupContext = ThemeProps<\"Button\"> & {\n  isDisabled?: boolean\n}\n\nconst [ButtonGroupProvider, useButtonGroup] = createContext<ButtonGroupContext>(\n  {\n    strict: false,\n    name: \"ButtonGroupContext\",\n  },\n)\n\nexport { useButtonGroup }\n\nexport const ButtonGroup = forwardRef<ButtonGroupProps, \"div\">(\n  (\n    {\n      className,\n      size,\n      variant,\n      direction: flexDirection,\n      isAttached,\n      isDisabled,\n      gap,\n      columnGap,\n      rowGap,\n      ...rest\n    },\n    ref,\n  ) => {\n    const isColumn =\n      flexDirection === \"column\" || flexDirection === \"column-reverse\"\n\n    const css: CSSUIObject = {\n      display: \"inline-flex\",\n      flexDirection,\n    }\n\n    const context: ButtonGroupContext = useMemo(\n      () => ({ size, variant, isDisabled }),\n      [size, variant, isDisabled],\n    )\n\n    if (isAttached) {\n      Object.assign(css, {\n        \"> *:first-of-type:not(:last-of-type)\": isColumn\n          ? { borderBottomRadius: 0, marginBlockEnd: \"-1px\" }\n          : { borderRightRadius: 0, marginInlineEnd: \"-1px\" },\n        \"> *:not(:first-of-type):not(:last-of-type)\": isColumn\n          ? { borderRadius: 0, marginBlockStart: \"-1px\" }\n          : { borderRadius: 0, marginInlineEnd: \"-1px\" },\n        \"> *:not(:first-of-type):last-of-type\": isColumn\n          ? { borderTopRadius: 0, marginBlockStart: \"-1px\" }\n          : { borderLeftRadius: 0 },\n      })\n    } else {\n      Object.assign(css, {\n        gap,\n        columnGap,\n        rowGap,\n      })\n    }\n\n    return (\n      <ButtonGroupProvider value={context}>\n        <ui.div\n          ref={ref}\n          role=\"group\"\n          className={cx(\"ui-button-group\", className)}\n          data-attached={dataAttr(isAttached)}\n          __css={css}\n          {...rest}\n        />\n      </ButtonGroupProvider>\n    )\n  },\n)\n"],"mappings":";;;AACA,SAASA,EAAA,EAAIC,UAAA,QAAkB;AAC/B,SAASC,aAAA,EAAeC,EAAA,EAAIC,QAAA,QAAgB;AAC5C,SAASC,OAAA,QAAe;AAyFhB,SAAAC,GAAA;AA5DR,IAAM,CAACC,mBAAA,EAAqBC,cAAc,IAAIN,aAAA,CAC5C;EACEO,MAAA,EAAQ;EACRC,IAAA,EAAM;AACR,CACF;AAIO,IAAMC,WAAA,GAAcV,UAAA,CACzB,CACE;EACEW,SAAA;EACAC,IAAA;EACAC,OAAA;EACAC,SAAA,EAAWC,aAAA;EACXC,UAAA;EACAC,UAAA;EACAC,GAAA;EACAC,SAAA;EACAC,MAAA;EACA,GAAGC;AACL,GACAC,GAAA,KACG;EACH,MAAMC,QAAA,GACJR,aAAA,KAAkB,YAAYA,aAAA,KAAkB;EAElD,MAAMS,GAAA,GAAmB;IACvBC,OAAA,EAAS;IACTV;EACF;EAEA,MAAMW,OAAA,GAA8BtB,OAAA,CAClC,OAAO;IAAEQ,IAAA;IAAMC,OAAA;IAASI;EAAW,IACnC,CAACL,IAAA,EAAMC,OAAA,EAASI,UAAU,CAC5B;EAEA,IAAID,UAAA,EAAY;IACdW,MAAA,CAAOC,MAAA,CAAOJ,GAAA,EAAK;MACjB,wCAAwCD,QAAA,GACpC;QAAEM,kBAAA,EAAoB;QAAGC,cAAA,EAAgB;MAAO,IAChD;QAAEC,iBAAA,EAAmB;QAAGC,eAAA,EAAiB;MAAO;MACpD,8CAA8CT,QAAA,GAC1C;QAAEU,YAAA,EAAc;QAAGC,gBAAA,EAAkB;MAAO,IAC5C;QAAED,YAAA,EAAc;QAAGD,eAAA,EAAiB;MAAO;MAC/C,wCAAwCT,QAAA,GACpC;QAAEY,eAAA,EAAiB;QAAGD,gBAAA,EAAkB;MAAO,IAC/C;QAAEE,gBAAA,EAAkB;MAAE;IAC5B,CAAC;EACH,OAAO;IACLT,MAAA,CAAOC,MAAA,CAAOJ,GAAA,EAAK;MACjBN,GAAA;MACAC,SAAA;MACAC;IACF,CAAC;EACH;EAEA,OACE,eAAAf,GAAA,CAACC,mBAAA;IAAoB+B,KAAA,EAAOX,OAAA;IAC1BY,QAAA,iBAAAjC,GAAA,CAACN,EAAA,CAAGwC,GAAA,EAAH;MACCjB,GAAA;MACAkB,IAAA,EAAK;MACL7B,SAAA,EAAWT,EAAA,CAAG,mBAAmBS,SAAS;MAC1C,iBAAeR,QAAA,CAASa,UAAU;MAClCyB,KAAA,EAAOjB,GAAA;MACN,GAAGH;IAAA,CACN;EAAA,CACF;AAEJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
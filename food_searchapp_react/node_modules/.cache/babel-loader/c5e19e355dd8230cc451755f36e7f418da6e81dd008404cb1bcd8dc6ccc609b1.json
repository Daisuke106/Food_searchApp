{"ast":null,"code":"\"use client\";\n\n// src/close-button.tsx\nimport { ui, forwardRef, useComponentStyle, omitThemeProps } from \"@yamada-ui/core\";\nimport { CloseIcon } from \"@yamada-ui/icon\";\nimport { Ripple, useRipple } from \"@yamada-ui/ripple\";\nimport { cx } from \"@yamada-ui/utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar CloseButton = forwardRef((props, ref) => {\n  const [styles, mergedProps] = useComponentStyle(\"CloseButton\", props);\n  const {\n    className,\n    children,\n    isDisabled,\n    isRounded,\n    __css,\n    disableRipple,\n    ...rest\n  } = omitThemeProps(mergedProps);\n  const {\n    onPointerDown,\n    ...rippleProps\n  } = useRipple({\n    ...rest,\n    isDisabled: disableRipple || isDisabled\n  });\n  const css = {\n    position: \"relative\",\n    overflow: \"hidden\",\n    outline: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexShrink: 0,\n    ...styles,\n    ...__css,\n    ...(isRounded ? {\n      borderRadius: \"fallback(full, 9999px)\"\n    } : {})\n  };\n  return /* @__PURE__ */jsxs(ui.button, {\n    ref,\n    type: \"button\",\n    \"aria-label\": \"Close\",\n    className: cx(\"ui-close-button\", className),\n    disabled: isDisabled,\n    __css: css,\n    ...rest,\n    onPointerDown,\n    children: [children || /* @__PURE__ */jsx(CloseIcon, {\n      width: \"1em\",\n      height: \"1em\"\n    }), /* @__PURE__ */jsx(Ripple, {\n      isDisabled: disableRipple || isDisabled,\n      ...rippleProps\n    })]\n  });\n});\nexport { CloseButton };","map":{"version":3,"names":["ui","forwardRef","useComponentStyle","omitThemeProps","CloseIcon","Ripple","useRipple","cx","jsx","jsxs","CloseButton","props","ref","styles","mergedProps","className","children","isDisabled","isRounded","__css","disableRipple","rest","onPointerDown","rippleProps","css","position","overflow","outline","display","justifyContent","alignItems","flexShrink","borderRadius","button","type","disabled","width","height"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\close-button\\src\\close-button.tsx"],"sourcesContent":["import type { HTMLUIProps, ThemeProps, CSSUIObject } from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport { CloseIcon } from \"@yamada-ui/icon\"\nimport { Ripple, useRipple } from \"@yamada-ui/ripple\"\nimport { cx } from \"@yamada-ui/utils\"\n\ntype CloseButtonOptions = {\n  /**\n   * If `true`, the button is disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, disable ripple effects when pressing a element.\n   *\n   * @default false\n   */\n  disableRipple?: boolean\n  /**\n   * If true, the button is full rounded.\n   *\n   * @default false\n   */\n  isRounded?: boolean\n}\n\nexport type CloseButtonProps = HTMLUIProps<\"button\"> &\n  ThemeProps<\"CloseButton\"> &\n  CloseButtonOptions\n\n/**\n * `CloseButton` is a component used primarily to trigger the close functionality of a component.\n *\n * @see Docs https://yamada-ui.com/components/other/close-button\n */\n\nexport const CloseButton = forwardRef<CloseButtonProps, \"button\">(\n  (props, ref) => {\n    const [styles, mergedProps] = useComponentStyle(\"CloseButton\", props)\n    const {\n      className,\n      children,\n      isDisabled,\n      isRounded,\n      __css,\n      disableRipple,\n      ...rest\n    } = omitThemeProps(mergedProps)\n    const { onPointerDown, ...rippleProps } = useRipple({\n      ...rest,\n      isDisabled: disableRipple || isDisabled,\n    })\n\n    const css: CSSUIObject = {\n      position: \"relative\",\n      overflow: \"hidden\",\n      outline: 0,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexShrink: 0,\n      ...styles,\n      ...__css,\n      ...(isRounded ? { borderRadius: \"fallback(full, 9999px)\" } : {}),\n    }\n\n    return (\n      <ui.button\n        ref={ref}\n        type=\"button\"\n        aria-label=\"Close\"\n        className={cx(\"ui-close-button\", className)}\n        disabled={isDisabled}\n        __css={css}\n        {...rest}\n        onPointerDown={onPointerDown}\n      >\n        {children || <CloseIcon width=\"1em\" height=\"1em\" />}\n\n        <Ripple isDisabled={disableRipple || isDisabled} {...rippleProps} />\n      </ui.button>\n    )\n  },\n)\n"],"mappings":";;;AACA,SACEA,EAAA,EACAC,UAAA,EACAC,iBAAA,EACAC,cAAA,QACK;AACP,SAASC,SAAA,QAAiB;AAC1B,SAASC,MAAA,EAAQC,SAAA,QAAiB;AAClC,SAASC,EAAA,QAAU;AAgEb,SAUeC,GAAA,EAVfC,IAAA;AA/BC,IAAMC,WAAA,GAAcT,UAAA,CACzB,CAACU,KAAA,EAAOC,GAAA,KAAQ;EACd,MAAM,CAACC,MAAA,EAAQC,WAAW,IAAIZ,iBAAA,CAAkB,eAAeS,KAAK;EACpE,MAAM;IACJI,SAAA;IACAC,QAAA;IACAC,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,aAAA;IACA,GAAGC;EACL,IAAIlB,cAAA,CAAeW,WAAW;EAC9B,MAAM;IAAEQ,aAAA;IAAe,GAAGC;EAAY,IAAIjB,SAAA,CAAU;IAClD,GAAGe,IAAA;IACHJ,UAAA,EAAYG,aAAA,IAAiBH;EAC/B,CAAC;EAED,MAAMO,GAAA,GAAmB;IACvBC,QAAA,EAAU;IACVC,QAAA,EAAU;IACVC,OAAA,EAAS;IACTC,OAAA,EAAS;IACTC,cAAA,EAAgB;IAChBC,UAAA,EAAY;IACZC,UAAA,EAAY;IACZ,GAAGlB,MAAA;IACH,GAAGM,KAAA;IACH,IAAID,SAAA,GAAY;MAAEc,YAAA,EAAc;IAAyB,IAAI,CAAC;EAChE;EAEA,OACE,eAAAvB,IAAA,CAACT,EAAA,CAAGiC,MAAA,EAAH;IACCrB,GAAA;IACAsB,IAAA,EAAK;IACL,cAAW;IACXnB,SAAA,EAAWR,EAAA,CAAG,mBAAmBQ,SAAS;IAC1CoB,QAAA,EAAUlB,UAAA;IACVE,KAAA,EAAOK,GAAA;IACN,GAAGH,IAAA;IACJC,aAAA;IAECN,QAAA,GAAAA,QAAA,IAAY,eAAAR,GAAA,CAACJ,SAAA;MAAUgC,KAAA,EAAM;MAAMC,MAAA,EAAO;IAAA,CAAM,GAEjD,eAAA7B,GAAA,CAACH,MAAA;MAAOY,UAAA,EAAYG,aAAA,IAAiBH,UAAA;MAAa,GAAGM;IAAA,CAAa;EAAA,CACpE;AAEJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
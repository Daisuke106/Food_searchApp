{"ast":null,"code":"\"use client\";\n\nimport { useColorSelectorContext } from \"./chunk-5QT7SRA4.mjs\";\n\n// src/color-selector-channels.tsx\nimport { forwardRef, ui } from \"@yamada-ui/core\";\nimport { Input } from \"@yamada-ui/input\";\nimport { cx } from \"@yamada-ui/utils\";\nimport { useId } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ColorSelectorChannels = forwardRef(({\n  className,\n  channelProps,\n  ...rest\n}, ref) => {\n  const {\n    withAlpha,\n    channels,\n    getChannelProps,\n    styles\n  } = useColorSelectorContext();\n  const css = {\n    display: \"grid\",\n    gridTemplateColumns: `repeat(${withAlpha ? \"4\" : \"3\"}, 1fr)`,\n    ...styles.channels\n  };\n  return /* @__PURE__ */jsx(ui.div, {\n    ref,\n    className: cx(\"ui-color-selector__channels\", className),\n    __css: css,\n    ...rest,\n    children: channels.map(({\n      label,\n      space,\n      value,\n      min,\n      max\n    }) => /* @__PURE__ */jsx(ColorSelectorChannel, {\n      channelLabel: label,\n      ...getChannelProps({\n        ...channelProps,\n        space,\n        value,\n        min,\n        max\n      })\n    }, label))\n  });\n});\nvar ColorSelectorChannel = forwardRef(({\n  className,\n  channelLabel,\n  ...rest\n}, ref) => {\n  const id = useId();\n  let {\n    size,\n    disabled,\n    readOnly,\n    styles\n  } = useColorSelectorContext();\n  if (size === \"full\") size = \"lg\";\n  const css = {\n    ...styles.channel\n  };\n  return /* @__PURE__ */jsxs(ui.div, {\n    className: cx(\"ui-color-selector__channel\", className),\n    children: [channelLabel ? /* @__PURE__ */jsx(ui.label, {\n      htmlFor: id,\n      style: {\n        cursor: disabled ? \"not-allowed\" : void 0\n      },\n      __css: {\n        display: \"block\",\n        pointerEvents: readOnly ? \"none\" : void 0,\n        ...styles.channelLabel\n      },\n      children: channelLabel\n    }) : null, /* @__PURE__ */jsx(Input, {\n      ref,\n      id,\n      size,\n      __css: css,\n      ...rest\n    })]\n  });\n});\nexport { ColorSelectorChannels, ColorSelectorChannel };","map":{"version":3,"names":["forwardRef","ui","Input","cx","useId","jsx","jsxs","ColorSelectorChannels","className","channelProps","rest","ref","withAlpha","channels","getChannelProps","styles","useColorSelectorContext","css","display","gridTemplateColumns","div","__css","children","map","label","space","value","min","max","ColorSelectorChannel","channelLabel","id","size","disabled","readOnly","channel","htmlFor","style","cursor","pointerEvents"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\color-picker\\src\\color-selector-channels.tsx"],"sourcesContent":["import { forwardRef, ui } from \"@yamada-ui/core\"\nimport type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { Input } from \"@yamada-ui/input\"\nimport type { InputProps } from \"@yamada-ui/input\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useId, type ReactNode } from \"react\"\nimport { useColorSelectorContext } from \"./use-color-selector\"\n\ntype ColorSelectorChannelsOptions = {\n  /**\n   * Props for the chancel component.\n   */\n  channelProps?: Omit<ColorSelectorChannelProps, \"channelLabel\">\n}\n\nexport type ColorSelectorChannelsProps = Omit<HTMLUIProps<\"div\">, \"children\"> &\n  ColorSelectorChannelsOptions\n\nexport const ColorSelectorChannels = forwardRef<\n  ColorSelectorChannelsProps,\n  \"div\"\n>(({ className, channelProps, ...rest }, ref) => {\n  const { withAlpha, channels, getChannelProps, styles } =\n    useColorSelectorContext()\n\n  const css: CSSUIObject = {\n    display: \"grid\",\n    gridTemplateColumns: `repeat(${withAlpha ? \"4\" : \"3\"}, 1fr)`,\n    ...styles.channels,\n  }\n\n  return (\n    <ui.div\n      ref={ref}\n      className={cx(\"ui-color-selector__channels\", className)}\n      __css={css}\n      {...rest}\n    >\n      {channels.map(({ label, space, value, min, max }) => (\n        <ColorSelectorChannel\n          key={label}\n          channelLabel={label}\n          {...getChannelProps({ ...channelProps, space, value, min, max })}\n        />\n      ))}\n    </ui.div>\n  )\n})\n\ntype ColorSelectorChannelOptions = {\n  channelLabel?: ReactNode\n}\n\nexport type ColorSelectorChannelProps = Omit<\n  InputProps,\n  \"type\" | \"pattern\" | \"min\" | \"max\" | \"value\" | \"defaultValue\"\n> &\n  ColorSelectorChannelOptions\n\nexport const ColorSelectorChannel = forwardRef<\n  ColorSelectorChannelProps,\n  \"input\"\n>(({ className, channelLabel, ...rest }, ref) => {\n  const id = useId()\n  let { size, disabled, readOnly, styles } = useColorSelectorContext()\n\n  if (size === \"full\") size = \"lg\"\n\n  const css: CSSUIObject = { ...styles.channel }\n\n  return (\n    <ui.div className={cx(\"ui-color-selector__channel\", className)}>\n      {channelLabel ? (\n        <ui.label\n          htmlFor={id}\n          style={{ cursor: disabled ? \"not-allowed\" : undefined }}\n          __css={{\n            display: \"block\",\n            pointerEvents: readOnly ? \"none\" : undefined,\n            ...styles.channelLabel,\n          }}\n        >\n          {channelLabel}\n        </ui.label>\n      ) : null}\n\n      <Input ref={ref} id={id} size={size} __css={css} {...rest} />\n    </ui.div>\n  )\n})\n"],"mappings":";;;;;AAAA,SAASA,UAAA,EAAYC,EAAA,QAAU;AAE/B,SAASC,KAAA,QAAa;AAEtB,SAASC,EAAA,QAAU;AACnB,SAASC,KAAA,QAA6B;AAkC9B,SAAAC,GAAA,EAgCJC,IAAA,QAhCI;AArBD,IAAMC,qBAAA,GAAwBP,UAAA,CAGnC,CAAC;EAAEQ,SAAA;EAAWC,YAAA;EAAc,GAAGC;AAAK,GAAGC,GAAA,KAAQ;EAC/C,MAAM;IAAEC,SAAA;IAAWC,QAAA;IAAUC,eAAA;IAAiBC;EAAO,IACnDC,uBAAA,CAAwB;EAE1B,MAAMC,GAAA,GAAmB;IACvBC,OAAA,EAAS;IACTC,mBAAA,EAAqB,UAAUP,SAAA,GAAY,MAAM,GAAG;IACpD,GAAGG,MAAA,CAAOF;EACZ;EAEA,OACE,eAAAR,GAAA,CAACJ,EAAA,CAAGmB,GAAA,EAAH;IACCT,GAAA;IACAH,SAAA,EAAWL,EAAA,CAAG,+BAA+BK,SAAS;IACtDa,KAAA,EAAOJ,GAAA;IACN,GAAGP,IAAA;IAEHY,QAAA,EAAAT,QAAA,CAASU,GAAA,CAAI,CAAC;MAAEC,KAAA;MAAOC,KAAA;MAAOC,KAAA;MAAOC,GAAA;MAAKC;IAAI,MAC7C,eAAAvB,GAAA,CAACwB,oBAAA;MAECC,YAAA,EAAcN,KAAA;MACb,GAAGV,eAAA,CAAgB;QAAE,GAAGL,YAAA;QAAcgB,KAAA;QAAOC,KAAA;QAAOC,GAAA;QAAKC;MAAI,CAAC;IAAA,GAF1DJ,KAGP,CACD;EAAA,CACH;AAEJ,CAAC;AAYM,IAAMK,oBAAA,GAAuB7B,UAAA,CAGlC,CAAC;EAAEQ,SAAA;EAAWsB,YAAA;EAAc,GAAGpB;AAAK,GAAGC,GAAA,KAAQ;EAC/C,MAAMoB,EAAA,GAAK3B,KAAA,CAAM;EACjB,IAAI;IAAE4B,IAAA;IAAMC,QAAA;IAAUC,QAAA;IAAUnB;EAAO,IAAIC,uBAAA,CAAwB;EAEnE,IAAIgB,IAAA,KAAS,QAAQA,IAAA,GAAO;EAE5B,MAAMf,GAAA,GAAmB;IAAE,GAAGF,MAAA,CAAOoB;EAAQ;EAE7C,OACE,eAAA7B,IAAA,CAACL,EAAA,CAAGmB,GAAA,EAAH;IAAOZ,SAAA,EAAWL,EAAA,CAAG,8BAA8BK,SAAS;IAC1Dc,QAAA,GAAAQ,YAAA,GACC,eAAAzB,GAAA,CAACJ,EAAA,CAAGuB,KAAA,EAAH;MACCY,OAAA,EAASL,EAAA;MACTM,KAAA,EAAO;QAAEC,MAAA,EAAQL,QAAA,GAAW,gBAAgB;MAAU;MACtDZ,KAAA,EAAO;QACLH,OAAA,EAAS;QACTqB,aAAA,EAAeL,QAAA,GAAW,SAAS;QACnC,GAAGnB,MAAA,CAAOe;MACZ;MAECR,QAAA,EAAAQ;IAAA,CACH,IACE,MAEJ,eAAAzB,GAAA,CAACH,KAAA;MAAMS,GAAA;MAAUoB,EAAA;MAAQC,IAAA;MAAYX,KAAA,EAAOJ,GAAA;MAAM,GAAGP;IAAA,CAAM;EAAA,CAC7D;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\nimport { useResizableContext, useResizableItem } from \"./chunk-KP2DL4SB.mjs\";\n\n// src/resizable-item.tsx\nimport { ui, forwardRef } from \"@yamada-ui/core\";\nimport { cx } from \"@yamada-ui/utils\";\nimport { Panel } from \"react-resizable-panels\";\nimport { jsx } from \"react/jsx-runtime\";\nvar panelProps = /* @__PURE__ */new Set([\"order\"]);\nvar UIPanel = ui(Panel, {\n  disableStyleProp: prop => panelProps.has(prop)\n});\nvar ResizableItem = forwardRef((_ref, ref) => {\n  let {\n    className,\n    children,\n    innerRef,\n    w,\n    width,\n    minW,\n    minWidth,\n    maxW,\n    maxWidth,\n    h,\n    height,\n    minH,\n    minHeight,\n    maxH,\n    maxHeight,\n    boxSize,\n    ...rest\n  } = _ref;\n  const {\n    styles\n  } = useResizableContext();\n  const {\n    getPanelProps,\n    getItemProps\n  } = useResizableItem({\n    ref,\n    ...rest\n  });\n  const css = {\n    boxSize: \"100%\",\n    ...styles.item\n  };\n  return /* @__PURE__ */jsx(UIPanel, {\n    ...getPanelProps({\n      w,\n      width,\n      minW,\n      minWidth,\n      maxW,\n      maxWidth,\n      h,\n      height,\n      minH,\n      minHeight,\n      maxH,\n      maxHeight,\n      boxSize\n    }),\n    children: /* @__PURE__ */jsx(ui.div, {\n      className: cx(\"ui-resizable__item\", className),\n      __css: css,\n      ...getItemProps({}, innerRef),\n      children\n    })\n  });\n});\nexport { ResizableItem };","map":{"version":3,"names":["ui","forwardRef","cx","Panel","jsx","panelProps","Set","UIPanel","disableStyleProp","prop","has","ResizableItem","_ref","ref","className","children","innerRef","w","width","minW","minWidth","maxW","maxWidth","h","height","minH","minHeight","maxH","maxHeight","boxSize","rest","styles","useResizableContext","getPanelProps","getItemProps","useResizableItem","css","item","div","__css"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\resizable\\src\\resizable-item.tsx"],"sourcesContent":["import type { CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport type { ForwardedRef } from \"react\"\nimport { Panel } from \"react-resizable-panels\"\nimport type { UseResizableItemProps } from \"./use-resizable\"\nimport { useResizableContext, useResizableItem } from \"./use-resizable\"\n\nconst panelProps = new Set([\"order\"])\n\nconst UIPanel = ui(Panel, { disableStyleProp: (prop) => panelProps.has(prop) })\n\ntype ResizableItemOptions = {\n  /**\n   * Ref for resizable item inner element.\n   */\n  innerRef?: ForwardedRef<HTMLDivElement>\n}\n\nexport type ResizableItemProps = Omit<UseResizableItemProps, \"ref\"> &\n  ResizableItemOptions\n\nexport const ResizableItem = forwardRef<ResizableItemProps, \"div\">(\n  (\n    {\n      className,\n      children,\n      innerRef,\n      w,\n      width,\n      minW,\n      minWidth,\n      maxW,\n      maxWidth,\n      h,\n      height,\n      minH,\n      minHeight,\n      maxH,\n      maxHeight,\n      boxSize,\n      ...rest\n    },\n    ref,\n  ) => {\n    const { styles } = useResizableContext()\n    const { getPanelProps, getItemProps } = useResizableItem({\n      ref,\n      ...rest,\n    })\n\n    const css: CSSUIObject = { boxSize: \"100%\", ...styles.item }\n\n    return (\n      <UIPanel\n        {...getPanelProps({\n          w,\n          width,\n          minW,\n          minWidth,\n          maxW,\n          maxWidth,\n          h,\n          height,\n          minH,\n          minHeight,\n          maxH,\n          maxHeight,\n          boxSize,\n        })}\n      >\n        <ui.div\n          className={cx(\"ui-resizable__item\", className)}\n          __css={css}\n          {...getItemProps({}, innerRef)}\n        >\n          {children}\n        </ui.div>\n      </UIPanel>\n    )\n  },\n)\n"],"mappings":";;;;;AACA,SAASA,EAAA,EAAIC,UAAA,QAAkB;AAC/B,SAASC,EAAA,QAAU;AAEnB,SAASC,KAAA,QAAa;AAmEd,SAAAC,GAAA;AA/DR,IAAMC,UAAA,GAAa,mBAAIC,GAAA,CAAI,CAAC,OAAO,CAAC;AAEpC,IAAMC,OAAA,GAAUP,EAAA,CAAGG,KAAA,EAAO;EAAEK,gBAAA,EAAmBC,IAAA,IAASJ,UAAA,CAAWK,GAAA,CAAID,IAAI;AAAE,CAAC;AAYvE,IAAME,aAAA,GAAgBV,UAAA,CAC3B,CAAAW,IAAA,EAoBEC,GAAA,KACG;EAAA,IApBH;IACEC,SAAA;IACAC,QAAA;IACAC,QAAA;IACAC,CAAA;IACAC,KAAA;IACAC,IAAA;IACAC,QAAA;IACAC,IAAA;IACAC,QAAA;IACAC,CAAA;IACAC,MAAA;IACAC,IAAA;IACAC,SAAA;IACAC,IAAA;IACAC,SAAA;IACAC,OAAA;IACA,GAAGC;EACL,IAAAlB,IAAA;EAGA,MAAM;IAAEmB;EAAO,IAAIC,mBAAA,CAAoB;EACvC,MAAM;IAAEC,aAAA;IAAeC;EAAa,IAAIC,gBAAA,CAAiB;IACvDtB,GAAA;IACA,GAAGiB;EACL,CAAC;EAED,MAAMM,GAAA,GAAmB;IAAEP,OAAA,EAAS;IAAQ,GAAGE,MAAA,CAAOM;EAAK;EAE3D,OACE,eAAAjC,GAAA,CAACG,OAAA;IACE,GAAG0B,aAAA,CAAc;MAChBhB,CAAA;MACAC,KAAA;MACAC,IAAA;MACAC,QAAA;MACAC,IAAA;MACAC,QAAA;MACAC,CAAA;MACAC,MAAA;MACAC,IAAA;MACAC,SAAA;MACAC,IAAA;MACAC,SAAA;MACAC;IACF,CAAC;IAEDd,QAAA,iBAAAX,GAAA,CAACJ,EAAA,CAAGsC,GAAA,EAAH;MACCxB,SAAA,EAAWZ,EAAA,CAAG,sBAAsBY,SAAS;MAC7CyB,KAAA,EAAOH,GAAA;MACN,GAAGF,YAAA,CAAa,CAAC,GAAGlB,QAAQ;MAE5BD;IAAA,CACH;EAAA,CACF;AAEJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
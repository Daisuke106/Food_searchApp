{"ast":null,"code":"\"use client\";\n\n// src/progress.tsx\nimport { ui, forwardRef, useMultiComponentStyle, omitThemeProps } from \"@yamada-ui/core\";\nimport { useAnimation } from \"@yamada-ui/use-animation\";\nimport { createContext, cx, valueToPercent } from \"@yamada-ui/utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar [ProgressProvider, useProgress] = createContext({\n  name: `ProgressStylesContext`,\n  errorMessage: `useProgress returned is 'undefined'. Seems you forgot to wrap the components in \"<Progress />\" `\n});\nvar Progress = forwardRef((props, ref) => {\n  var _a;\n  const [styles, mergedProps] = useMultiComponentStyle(\"Progress\", props);\n  const {\n    className,\n    children,\n    value,\n    min,\n    max,\n    hasStripe,\n    isStripeAnimation,\n    isAnimation,\n    speed,\n    borderRadius: _borderRadius,\n    rounded,\n    ...rest\n  } = omitThemeProps(mergedProps, [\"filledTrackColor\"]);\n  const borderRadius = (_a = _borderRadius != null ? _borderRadius : rounded) != null ? _a : styles.track.borderRadius;\n  const css = {\n    w: \"100%\",\n    overflow: \"hidden\",\n    pos: \"relative\",\n    ...styles.track\n  };\n  return /* @__PURE__ */jsx(ProgressProvider, {\n    value: styles,\n    children: /* @__PURE__ */jsxs(ui.div, {\n      ref,\n      className: cx(\"ui-progress\", className),\n      __css: css,\n      borderRadius,\n      ...rest,\n      children: [/* @__PURE__ */jsx(ProgressFilledTrack, {\n        min,\n        max,\n        value,\n        hasStripe,\n        isStripeAnimation,\n        isAnimation,\n        speed,\n        borderRadius\n      }), children]\n    })\n  });\n});\nvar ProgressFilledTrack = ({\n  value = 0,\n  min = 0,\n  max = 100,\n  hasStripe,\n  isStripeAnimation,\n  isAnimation,\n  speed = \"1.4s\",\n  ...rest\n}) => {\n  const percent = valueToPercent(value, min, max);\n  const styles = useProgress();\n  const stripeAnimation = useAnimation({\n    keyframes: {\n      \"0%\": {\n        bgPosition: \"1rem 0\"\n      },\n      \"100%\": {\n        bgPosition: \"0 0\"\n      }\n    },\n    duration: typeof speed === \"string\" ? speed : `${speed}s`,\n    iterationCount: \"infinite\",\n    timingFunction: \"linear\"\n  });\n  const interpolationAnimation = useAnimation({\n    keyframes: {\n      \"0%\": {\n        left: \"-40%\"\n      },\n      \"100%\": {\n        left: \"100%\"\n      }\n    },\n    duration: typeof speed === \"string\" ? speed : `${speed}s`,\n    iterationCount: \"infinite\",\n    timingFunction: \"ease\"\n  });\n  isStripeAnimation = !isAnimation && hasStripe && isStripeAnimation;\n  const css = {\n    ...(isStripeAnimation ? {\n      animation: stripeAnimation\n    } : {}),\n    ...(isAnimation ? {\n      position: \"absolute\",\n      willChange: \"left\",\n      minWidth: \"50%\",\n      animation: interpolationAnimation\n    } : {})\n  };\n  const __css = {\n    w: `${percent}%`,\n    h: \"100%\",\n    ...styles.filledTrack\n  };\n  return /* @__PURE__ */jsx(ui.div, {\n    css,\n    __css,\n    ...rest\n  });\n};\nexport { Progress };","map":{"version":3,"names":["ui","forwardRef","useMultiComponentStyle","omitThemeProps","useAnimation","createContext","cx","valueToPercent","jsx","jsxs","ProgressProvider","useProgress","name","errorMessage","Progress","props","ref","_a","styles","mergedProps","className","children","value","min","max","hasStripe","isStripeAnimation","isAnimation","speed","borderRadius","_borderRadius","rounded","rest","track","css","w","overflow","pos","div","__css","ProgressFilledTrack","percent","stripeAnimation","keyframes","bgPosition","duration","iterationCount","timingFunction","interpolationAnimation","left","animation","position","willChange","minWidth","h","filledTrack"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\progress\\src\\progress.tsx"],"sourcesContent":["import type {\n  HTMLUIProps,\n  ThemeProps,\n  CSSUIObject,\n  Interpolation,\n  ColorModeToken,\n  CSS,\n} from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport { useAnimation } from \"@yamada-ui/use-animation\"\nimport { createContext, cx, valueToPercent } from \"@yamada-ui/utils\"\nimport type { FC } from \"react\"\n\nconst [ProgressProvider, useProgress] = createContext<\n  Record<string, CSSUIObject>\n>({\n  name: `ProgressStylesContext`,\n  errorMessage: `useProgress returned is 'undefined'. Seems you forgot to wrap the components in \"<Progress />\" `,\n})\n\ntype ProgressOptions = {\n  /**\n   * The value of the progress.\n   *\n   * @default 0\n   */\n  value?: number\n  /**\n   * The minimum value of the progress.\n   *\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum value of the progress.\n   *\n   * @default 100\n   */\n  max?: number\n  /**\n   * If `true`, the progress bar will show stripe.\n   *\n   * @default false\n   */\n  hasStripe?: boolean\n  /**\n   * If `true`, and hasStripe is `true`, the stripes will be animated.\n   *\n   * @default false\n   */\n  isStripeAnimation?: boolean\n  /**\n   * If `true`, the progress will be indeterminate and the `value` prop will be ignored.\n   *\n   * @default false\n   */\n  isAnimation?: boolean\n  /**\n   * The animation speed in seconds.\n   *\n   * @default '1.4s'\n   */\n  speed?: string | number\n  /**\n   * The CSS `color` property.\n   */\n  filledTrackColor?: ColorModeToken<CSS.Property.Color, \"colors\">\n}\n\nexport type ProgressProps = HTMLUIProps<\"div\"> &\n  ThemeProps<\"Progress\"> &\n  ProgressOptions\n\n/**\n * `Progress` is a component for visually indicating progress.\n *\n * @see Docs https://yamada-ui.com/components/feedback/progress\n */\nexport const Progress = forwardRef<ProgressProps, \"div\">((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"Progress\", props)\n  const {\n    className,\n    children,\n    value,\n    min,\n    max,\n    hasStripe,\n    isStripeAnimation,\n    isAnimation,\n    speed,\n    borderRadius: _borderRadius,\n    rounded,\n    ...rest\n  } = omitThemeProps(mergedProps, [\"filledTrackColor\"])\n\n  const borderRadius =\n    _borderRadius ?? rounded ?? (styles.track.borderRadius as string | number)\n\n  const css: CSSUIObject = {\n    w: \"100%\",\n    overflow: \"hidden\",\n    pos: \"relative\",\n    ...styles.track,\n  }\n\n  return (\n    <ProgressProvider value={styles}>\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-progress\", className)}\n        __css={css}\n        borderRadius={borderRadius}\n        {...rest}\n      >\n        <ProgressFilledTrack\n          min={min}\n          max={max}\n          value={value}\n          hasStripe={hasStripe}\n          isStripeAnimation={isStripeAnimation}\n          isAnimation={isAnimation}\n          speed={speed}\n          borderRadius={borderRadius}\n        />\n        {children}\n      </ui.div>\n    </ProgressProvider>\n  )\n})\n\ntype ProgressFilledTrackProps = HTMLUIProps<\"div\"> & ProgressProps\n\nconst ProgressFilledTrack: FC<ProgressFilledTrackProps> = ({\n  value = 0,\n  min = 0,\n  max = 100,\n  hasStripe,\n  isStripeAnimation,\n  isAnimation,\n  speed = \"1.4s\",\n  ...rest\n}) => {\n  const percent = valueToPercent(value, min, max)\n\n  const styles = useProgress()\n\n  const stripeAnimation = useAnimation({\n    keyframes: {\n      \"0%\": { bgPosition: \"1rem 0\" },\n      \"100%\": { bgPosition: \"0 0\" },\n    },\n    duration: typeof speed === \"string\" ? speed : `${speed}s`,\n    iterationCount: \"infinite\",\n    timingFunction: \"linear\",\n  })\n\n  const interpolationAnimation = useAnimation({\n    keyframes: {\n      \"0%\": { left: \"-40%\" },\n      \"100%\": { left: \"100%\" },\n    },\n    duration: typeof speed === \"string\" ? speed : `${speed}s`,\n    iterationCount: \"infinite\",\n    timingFunction: \"ease\",\n  })\n\n  isStripeAnimation = !isAnimation && hasStripe && isStripeAnimation\n\n  const css: Interpolation<{}> = {\n    ...(isStripeAnimation\n      ? {\n          animation: stripeAnimation,\n        }\n      : {}),\n    ...(isAnimation\n      ? {\n          position: \"absolute\",\n          willChange: \"left\",\n          minWidth: \"50%\",\n          animation: interpolationAnimation,\n        }\n      : {}),\n  }\n\n  const __css: CSSUIObject = {\n    w: `${percent}%`,\n    h: \"100%\",\n    ...styles.filledTrack,\n  }\n\n  return <ui.div css={css} __css={__css} {...rest} />\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
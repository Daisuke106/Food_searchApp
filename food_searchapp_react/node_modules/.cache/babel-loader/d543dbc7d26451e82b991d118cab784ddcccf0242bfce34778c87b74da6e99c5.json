{"ast":null,"code":"\"use client\";\n\n// src/index.ts\nimport { createPopper } from \"@popperjs/core\";\nimport { useValue } from \"@yamada-ui/use-value\";\nimport { mergeRefs } from \"@yamada-ui/utils\";\nimport { useCallback, useEffect, useRef } from \"react\";\nvar popperProperties = [\"enabled\", \"offset\", \"gutter\", \"preventOverflow\", \"flip\", \"matchWidth\", \"boundary\", \"eventListeners\", \"strategy\", \"placement\", \"modifiers\"];\nvar defaultEventListeners = {\n  scroll: true,\n  resize: true\n};\nvar transforms = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\"\n};\nvar usePopper = ({\n  enabled = true,\n  eventListeners = true,\n  matchWidth,\n  offset,\n  gutter: _gutter = 8,\n  flip = true,\n  preventOverflow = true,\n  boundary = \"clippingParents\",\n  strategy = \"absolute\",\n  placement: _placement = \"bottom\",\n  modifiers\n} = {}) => {\n  const reference = useRef(null);\n  const popper = useRef(null);\n  const instance = useRef(null);\n  const gutter = useValue(_gutter);\n  const placement = useValue(_placement);\n  const cleanup = useRef(() => {});\n  const setupPopper = useCallback(() => {\n    var _a;\n    if (!enabled || !reference.current || !popper.current) return;\n    (_a = cleanup.current) == null ? void 0 : _a.call(cleanup);\n    const modifierTransformOrigin = {\n      name: \"transformOrigin\",\n      enabled: true,\n      phase: \"write\",\n      fn: ({\n        state\n      }) => {\n        state.elements.popper.style.setProperty(\"--popper-transform-origin\", transforms[state.placement]);\n      },\n      effect: ({\n        state\n      }) => () => {\n        state.elements.popper.style.setProperty(\"--popper-transform-origin\", transforms[state.placement]);\n      }\n    };\n    const modifierEventListeners = {\n      name: \"eventListeners\",\n      ...(typeof eventListeners === \"object\" ? {\n        enabled: true,\n        options: {\n          ...defaultEventListeners,\n          ...eventListeners\n        }\n      } : {\n        enabled: eventListeners,\n        options: defaultEventListeners\n      })\n    };\n    const modifierOffset = {\n      name: \"offset\",\n      options: {\n        offset: offset != null ? offset : [0, gutter]\n      }\n    };\n    const modifierFlip = {\n      name: \"flip\",\n      enabled: !!flip,\n      options: {\n        padding: 8\n      }\n    };\n    const modifierPreventOverflow = {\n      name: \"preventOverflow\",\n      enabled: !!preventOverflow,\n      options: {\n        boundary\n      }\n    };\n    const modifierMatchWidth = {\n      name: \"matchWidth\",\n      enabled: !!matchWidth,\n      phase: \"beforeWrite\",\n      requires: [\"computeStyles\"],\n      fn: ({\n        state\n      }) => {\n        state.styles.popper.width = `${state.rects.reference.width}px`;\n      },\n      effect: ({\n        state\n      }) => () => {\n        state.elements.popper.style.width = `${state.elements.reference.offsetWidth}px`;\n      }\n    };\n    instance.current = createPopper(reference.current, popper.current, {\n      placement,\n      modifiers: [modifierTransformOrigin, modifierMatchWidth, modifierEventListeners, modifierOffset, modifierFlip, modifierPreventOverflow, ...(modifiers != null ? modifiers : [])],\n      strategy\n    });\n    instance.current.forceUpdate();\n    cleanup.current = instance.current.destroy;\n  }, [placement, enabled, modifiers, matchWidth, eventListeners, offset, gutter, flip, preventOverflow, boundary, strategy]);\n  useEffect(() => {\n    return () => {\n      var _a;\n      if (reference.current || popper.current) return;\n      (_a = instance.current) == null ? void 0 : _a.destroy();\n      instance.current = null;\n    };\n  }, []);\n  const referenceRef = useCallback(el => {\n    reference.current = el;\n    setupPopper();\n  }, [setupPopper]);\n  const getReferenceProps = useCallback((props = {}, ref = null) => ({\n    ...props,\n    ref: mergeRefs(referenceRef, ref)\n  }), [referenceRef]);\n  const popperRef = useCallback(el => {\n    popper.current = el;\n    setupPopper();\n  }, [setupPopper]);\n  const getPopperProps = useCallback((props = {}, ref = null) => ({\n    ...props,\n    ref: mergeRefs(popperRef, ref),\n    style: {\n      ...props.style,\n      position: strategy,\n      minWidth: matchWidth ? void 0 : \"max-content\",\n      inset: \"0 auto auto 0\"\n    }\n  }), [strategy, popperRef, matchWidth]);\n  return {\n    update: () => {\n      var _a;\n      return (_a = instance.current) == null ? void 0 : _a.update();\n    },\n    forceUpdate: () => {\n      var _a;\n      return (_a = instance.current) == null ? void 0 : _a.forceUpdate();\n    },\n    transformOrigin: \"var(--popper-transform-origin)\",\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getReferenceProps\n  };\n};\nexport { popperProperties, usePopper };","map":{"version":3,"names":["createPopper","useValue","mergeRefs","useCallback","useEffect","useRef","popperProperties","defaultEventListeners","scroll","resize","transforms","top","bottom","left","right","usePopper","enabled","eventListeners","matchWidth","offset","gutter","_gutter","flip","preventOverflow","boundary","strategy","placement","_placement","modifiers","reference","popper","instance","cleanup","setupPopper","_a","current","call","modifierTransformOrigin","name","phase","fn","state","elements","style","setProperty","effect","modifierEventListeners","options","modifierOffset","modifierFlip","padding","modifierPreventOverflow","modifierMatchWidth","requires","styles","width","rects","offsetWidth","forceUpdate","destroy","referenceRef","el","getReferenceProps","props","ref","popperRef","getPopperProps","position","minWidth","inset","update","transformOrigin"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\use-popper\\src\\index.ts"],"sourcesContent":["import type {\n  Instance,\n  Modifier,\n  VirtualElement,\n  Placement,\n} from \"@popperjs/core\"\nimport { createPopper } from \"@popperjs/core\"\nimport type { Token } from \"@yamada-ui/core\"\nimport { useValue } from \"@yamada-ui/use-value\"\nimport type { PropGetter } from \"@yamada-ui/utils\"\nimport { mergeRefs } from \"@yamada-ui/utils\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\nexport const popperProperties: any[] = [\n  \"enabled\",\n  \"offset\",\n  \"gutter\",\n  \"preventOverflow\",\n  \"flip\",\n  \"matchWidth\",\n  \"boundary\",\n  \"eventListeners\",\n  \"strategy\",\n  \"placement\",\n  \"modifiers\",\n]\n\nexport type UsePopperProps = {\n  /**\n   * Whether the popper.js should be enabled.\n   *\n   * @default true\n   */\n  enabled?: boolean\n  /**\n   * The main and cross-axis offset to displace popper element from its reference element.\n   */\n  offset?: [number, number]\n  /**\n   * The distance or margin between the reference and popper.\n   * It is used internally to create an `offset` modifier.\n   *\n   * @default 8\n   */\n  gutter?: Token<number>\n  /**\n   * If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area.\n   *\n   * @default true\n   */\n  preventOverflow?: boolean\n  /**\n   * If `true`, the popper will change its placement and flip when it's about to overflow its boundary area.\n   *\n   * @default true\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popper will match the width of the reference at all times.\n   * It's useful for `autocomplete`, `date-picker` and `select` patterns.\n   *\n   * @default false\n   */\n  matchWidth?: boolean\n  /**\n   * The boundary area for the popper. Used within the `preventOverflow` modifier.\n   *\n   * @default 'clippingParents'\n   */\n  boundary?: \"clippingParents\" | \"scrollParent\" | HTMLElement\n  /**\n   * If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window.\n   *\n   * @default true\n   */\n  eventListeners?: boolean | { scroll?: boolean; resize?: boolean }\n  /**\n   * The CSS positioning strategy to use.\n   *\n   * @default 'absolute'\n   */\n  strategy?: \"absolute\" | \"fixed\"\n  /**\n   * The placement of the popper relative to its reference.\n   *\n   * @default 'bottom'\n   */\n  placement?: Token<Placement>\n  /**\n   * Array of popper.js modifiers.\n   * Check the docs to see the list of possible modifiers you can pass.\n   *\n   * @see Docs https://popper.js.org/docs/v2/modifiers/\n   */\n  modifiers?: Array<Partial<Modifier<string, any>>>\n}\n\nconst defaultEventListeners = {\n  scroll: true,\n  resize: true,\n}\n\nconst transforms: Record<string, string> = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\",\n}\n\nexport const usePopper = ({\n  enabled = true,\n  eventListeners = true,\n  matchWidth,\n  offset,\n  gutter: _gutter = 8,\n  flip = true,\n  preventOverflow = true,\n  boundary = \"clippingParents\",\n  strategy = \"absolute\",\n  placement: _placement = \"bottom\",\n  modifiers,\n}: UsePopperProps = {}) => {\n  const reference = useRef<Element | VirtualElement | null>(null)\n  const popper = useRef<HTMLElement | null>(null)\n  const instance = useRef<Instance | null>(null)\n\n  const gutter = useValue(_gutter)\n  const placement = useValue(_placement)\n\n  const cleanup = useRef(() => {})\n\n  const setupPopper = useCallback(() => {\n    if (!enabled || !reference.current || !popper.current) return\n\n    cleanup.current?.()\n\n    const modifierTransformOrigin: Modifier<\"transformOrigin\", any> = {\n      name: \"transformOrigin\",\n      enabled: true,\n      phase: \"write\",\n      fn: ({ state }) => {\n        state.elements.popper.style.setProperty(\n          \"--popper-transform-origin\",\n          transforms[state.placement],\n        )\n      },\n      effect:\n        ({ state }) =>\n        () => {\n          state.elements.popper.style.setProperty(\n            \"--popper-transform-origin\",\n            transforms[state.placement],\n          )\n        },\n    }\n\n    const modifierEventListeners = {\n      name: \"eventListeners\",\n      ...(typeof eventListeners === \"object\"\n        ? {\n            enabled: true,\n            options: { ...defaultEventListeners, ...eventListeners },\n          }\n        : {\n            enabled: eventListeners,\n            options: defaultEventListeners,\n          }),\n    }\n\n    const modifierOffset = {\n      name: \"offset\",\n      options: { offset: offset ?? [0, gutter] },\n    }\n\n    const modifierFlip = {\n      name: \"flip\",\n      enabled: !!flip,\n      options: { padding: 8 },\n    }\n\n    const modifierPreventOverflow = {\n      name: \"preventOverflow\",\n      enabled: !!preventOverflow,\n      options: { boundary },\n    }\n\n    const modifierMatchWidth: Modifier<\"matchWidth\", any> = {\n      name: \"matchWidth\",\n      enabled: !!matchWidth,\n      phase: \"beforeWrite\",\n      requires: [\"computeStyles\"],\n      fn: ({ state }) => {\n        state.styles.popper.width = `${state.rects.reference.width}px`\n      },\n      effect:\n        ({ state }) =>\n        () => {\n          state.elements.popper.style.width = `${\n            (state.elements.reference as HTMLElement).offsetWidth\n          }px`\n        },\n    }\n\n    instance.current = createPopper(reference.current, popper.current, {\n      placement,\n      modifiers: [\n        modifierTransformOrigin,\n        modifierMatchWidth,\n        modifierEventListeners,\n        modifierOffset,\n        modifierFlip,\n        modifierPreventOverflow,\n        ...(modifiers ?? []),\n      ],\n      strategy,\n    })\n\n    instance.current.forceUpdate()\n\n    cleanup.current = instance.current.destroy\n  }, [\n    placement,\n    enabled,\n    modifiers,\n    matchWidth,\n    eventListeners,\n    offset,\n    gutter,\n    flip,\n    preventOverflow,\n    boundary,\n    strategy,\n  ])\n\n  useEffect(() => {\n    return () => {\n      if (reference.current || popper.current) return\n\n      instance.current?.destroy()\n      instance.current = null\n    }\n  }, [])\n\n  const referenceRef = useCallback(\n    <T extends Element | VirtualElement>(el: T | null) => {\n      reference.current = el\n\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getReferenceProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(referenceRef, ref),\n    }),\n    [referenceRef],\n  )\n\n  const popperRef = useCallback(\n    <T extends HTMLElement>(el: T | null) => {\n      popper.current = el\n\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getPopperProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(popperRef, ref),\n      style: {\n        ...props.style,\n        position: strategy,\n        minWidth: matchWidth ? undefined : \"max-content\",\n        inset: \"0 auto auto 0\",\n      },\n    }),\n    [strategy, popperRef, matchWidth],\n  )\n\n  return {\n    update: () => instance.current?.update(),\n    forceUpdate: () => instance.current?.forceUpdate(),\n    transformOrigin: \"var(--popper-transform-origin)\",\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getReferenceProps,\n  }\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n"],"mappings":";;;AAMA,SAASA,YAAA,QAAoB;AAE7B,SAASC,QAAA,QAAgB;AAEzB,SAASC,SAAA,QAAiB;AAC1B,SAASC,WAAA,EAAaC,SAAA,EAAWC,MAAA,QAAc;AAExC,IAAMC,gBAAA,GAA0B,CACrC,WACA,UACA,UACA,mBACA,QACA,cACA,YACA,kBACA,YACA,aACA,YACF;AAwEA,IAAMC,qBAAA,GAAwB;EAC5BC,MAAA,EAAQ;EACRC,MAAA,EAAQ;AACV;AAEA,IAAMC,UAAA,GAAqC;EACzCC,GAAA,EAAK;EACL,aAAa;EACb,WAAW;EAEXC,MAAA,EAAQ;EACR,gBAAgB;EAChB,cAAc;EAEdC,IAAA,EAAM;EACN,cAAc;EACd,YAAY;EAEZC,KAAA,EAAO;EACP,eAAe;EACf,aAAa;AACf;AAEO,IAAMC,SAAA,GAAYA,CAAC;EACxBC,OAAA,GAAU;EACVC,cAAA,GAAiB;EACjBC,UAAA;EACAC,MAAA;EACAC,MAAA,EAAQC,OAAA,GAAU;EAClBC,IAAA,GAAO;EACPC,eAAA,GAAkB;EAClBC,QAAA,GAAW;EACXC,QAAA,GAAW;EACXC,SAAA,EAAWC,UAAA,GAAa;EACxBC;AACF,IAAoB,CAAC,MAAM;EACzB,MAAMC,SAAA,GAAYxB,MAAA,CAAwC,IAAI;EAC9D,MAAMyB,MAAA,GAASzB,MAAA,CAA2B,IAAI;EAC9C,MAAM0B,QAAA,GAAW1B,MAAA,CAAwB,IAAI;EAE7C,MAAMe,MAAA,GAASnB,QAAA,CAASoB,OAAO;EAC/B,MAAMK,SAAA,GAAYzB,QAAA,CAAS0B,UAAU;EAErC,MAAMK,OAAA,GAAU3B,MAAA,CAAO,MAAM,CAAC,CAAC;EAE/B,MAAM4B,WAAA,GAAc9B,WAAA,CAAY,MAAM;IA9IxC,IAAA+B,EAAA;IA+II,IAAI,CAAClB,OAAA,IAAW,CAACa,SAAA,CAAUM,OAAA,IAAW,CAACL,MAAA,CAAOK,OAAA,EAAS;IAEvD,CAAAD,EAAA,GAAAF,OAAA,CAAQG,OAAA,KAAR,gBAAAD,EAAA,CAAAE,IAAA,CAAAJ,OAAA;IAEA,MAAMK,uBAAA,GAA4D;MAChEC,IAAA,EAAM;MACNtB,OAAA,EAAS;MACTuB,KAAA,EAAO;MACPC,EAAA,EAAIA,CAAC;QAAEC;MAAM,MAAM;QACjBA,KAAA,CAAMC,QAAA,CAASZ,MAAA,CAAOa,KAAA,CAAMC,WAAA,CAC1B,6BACAlC,UAAA,CAAW+B,KAAA,CAAMf,SAAS,CAC5B;MACF;MACAmB,MAAA,EACEA,CAAC;QAAEJ;MAAM,MACT,MAAM;QACJA,KAAA,CAAMC,QAAA,CAASZ,MAAA,CAAOa,KAAA,CAAMC,WAAA,CAC1B,6BACAlC,UAAA,CAAW+B,KAAA,CAAMf,SAAS,CAC5B;MACF;IACJ;IAEA,MAAMoB,sBAAA,GAAyB;MAC7BR,IAAA,EAAM;MACN,IAAI,OAAOrB,cAAA,KAAmB,WAC1B;QACED,OAAA,EAAS;QACT+B,OAAA,EAAS;UAAE,GAAGxC,qBAAA;UAAuB,GAAGU;QAAe;MACzD,IACA;QACED,OAAA,EAASC,cAAA;QACT8B,OAAA,EAASxC;MACX;IACN;IAEA,MAAMyC,cAAA,GAAiB;MACrBV,IAAA,EAAM;MACNS,OAAA,EAAS;QAAE5B,MAAA,EAAQA,MAAA,WAAAA,MAAA,GAAU,CAAC,GAAGC,MAAM;MAAE;IAC3C;IAEA,MAAM6B,YAAA,GAAe;MACnBX,IAAA,EAAM;MACNtB,OAAA,EAAS,CAAC,CAACM,IAAA;MACXyB,OAAA,EAAS;QAAEG,OAAA,EAAS;MAAE;IACxB;IAEA,MAAMC,uBAAA,GAA0B;MAC9Bb,IAAA,EAAM;MACNtB,OAAA,EAAS,CAAC,CAACO,eAAA;MACXwB,OAAA,EAAS;QAAEvB;MAAS;IACtB;IAEA,MAAM4B,kBAAA,GAAkD;MACtDd,IAAA,EAAM;MACNtB,OAAA,EAAS,CAAC,CAACE,UAAA;MACXqB,KAAA,EAAO;MACPc,QAAA,EAAU,CAAC,eAAe;MAC1Bb,EAAA,EAAIA,CAAC;QAAEC;MAAM,MAAM;QACjBA,KAAA,CAAMa,MAAA,CAAOxB,MAAA,CAAOyB,KAAA,GAAQ,GAAGd,KAAA,CAAMe,KAAA,CAAM3B,SAAA,CAAU0B,KAAK;MAC5D;MACAV,MAAA,EACEA,CAAC;QAAEJ;MAAM,MACT,MAAM;QACJA,KAAA,CAAMC,QAAA,CAASZ,MAAA,CAAOa,KAAA,CAAMY,KAAA,GAAQ,GACjCd,KAAA,CAAMC,QAAA,CAASb,SAAA,CAA0B4B,WAC5C;MACF;IACJ;IAEA1B,QAAA,CAASI,OAAA,GAAUnC,YAAA,CAAa6B,SAAA,CAAUM,OAAA,EAASL,MAAA,CAAOK,OAAA,EAAS;MACjET,SAAA;MACAE,SAAA,EAAW,CACTS,uBAAA,EACAe,kBAAA,EACAN,sBAAA,EACAE,cAAA,EACAC,YAAA,EACAE,uBAAA,EACA,IAAIvB,SAAA,WAAAA,SAAA,GAAa,EAAC,EACpB;MACAH;IACF,CAAC;IAEDM,QAAA,CAASI,OAAA,CAAQuB,WAAA,CAAY;IAE7B1B,OAAA,CAAQG,OAAA,GAAUJ,QAAA,CAASI,OAAA,CAAQwB,OAAA;EACrC,GAAG,CACDjC,SAAA,EACAV,OAAA,EACAY,SAAA,EACAV,UAAA,EACAD,cAAA,EACAE,MAAA,EACAC,MAAA,EACAE,IAAA,EACAC,eAAA,EACAC,QAAA,EACAC,QAAA,CACD;EAEDrB,SAAA,CAAU,MAAM;IACd,OAAO,MAAM;MAtPjB,IAAA8B,EAAA;MAuPM,IAAIL,SAAA,CAAUM,OAAA,IAAWL,MAAA,CAAOK,OAAA,EAAS;MAEzC,CAAAD,EAAA,GAAAH,QAAA,CAASI,OAAA,KAAT,gBAAAD,EAAA,CAAkByB,OAAA;MAClB5B,QAAA,CAASI,OAAA,GAAU;IACrB;EACF,GAAG,EAAE;EAEL,MAAMyB,YAAA,GAAezD,WAAA,CACkB0D,EAAA,IAAiB;IACpDhC,SAAA,CAAUM,OAAA,GAAU0B,EAAA;IAEpB5B,WAAA,CAAY;EACd,GACA,CAACA,WAAW,CACd;EAEA,MAAM6B,iBAAA,GAAgC3D,WAAA,CACpC,CAAC4D,KAAA,GAAQ,CAAC,GAAGC,GAAA,GAAM,UAAU;IAC3B,GAAGD,KAAA;IACHC,GAAA,EAAK9D,SAAA,CAAU0D,YAAA,EAAcI,GAAG;EAClC,IACA,CAACJ,YAAY,CACf;EAEA,MAAMK,SAAA,GAAY9D,WAAA,CACQ0D,EAAA,IAAiB;IACvC/B,MAAA,CAAOK,OAAA,GAAU0B,EAAA;IAEjB5B,WAAA,CAAY;EACd,GACA,CAACA,WAAW,CACd;EAEA,MAAMiC,cAAA,GAA6B/D,WAAA,CACjC,CAAC4D,KAAA,GAAQ,CAAC,GAAGC,GAAA,GAAM,UAAU;IAC3B,GAAGD,KAAA;IACHC,GAAA,EAAK9D,SAAA,CAAU+D,SAAA,EAAWD,GAAG;IAC7BrB,KAAA,EAAO;MACL,GAAGoB,KAAA,CAAMpB,KAAA;MACTwB,QAAA,EAAU1C,QAAA;MACV2C,QAAA,EAAUlD,UAAA,GAAa,SAAY;MACnCmD,KAAA,EAAO;IACT;EACF,IACA,CAAC5C,QAAA,EAAUwC,SAAA,EAAW/C,UAAU,CAClC;EAEA,OAAO;IACLoD,MAAA,EAAQA,CAAA,KAAG;MAvSf,IAAApC,EAAA;MAuSkB,QAAAA,EAAA,GAAAH,QAAA,CAASI,OAAA,KAAT,gBAAAD,EAAA,CAAkBoC,MAAA;IAAA;IAChCZ,WAAA,EAAaA,CAAA,KAAG;MAxSpB,IAAAxB,EAAA;MAwSuB,QAAAA,EAAA,GAAAH,QAAA,CAASI,OAAA,KAAT,gBAAAD,EAAA,CAAkBwB,WAAA;IAAA;IACrCa,eAAA,EAAiB;IACjBX,YAAA;IACAK,SAAA;IACAC,cAAA;IACAJ;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
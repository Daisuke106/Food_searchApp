{"ast":null,"code":"\"use client\";\n\n// src/switch.tsx\nimport { useCheckbox } from \"@yamada-ui/checkbox\";\nimport { ui, forwardRef, omitThemeProps, useMultiComponentStyle } from \"@yamada-ui/core\";\nimport { motion } from \"@yamada-ui/motion\";\nimport { cx, dataAttr } from \"@yamada-ui/utils\";\nimport { cloneElement } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Switch = forwardRef((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"Switch\", props);\n  const {\n    className,\n    gap = \"0.5rem\",\n    children,\n    icon,\n    inputProps,\n    labelProps,\n    isReverse,\n    flexDirection,\n    transition = {\n      type: \"spring\",\n      stiffness: 700,\n      damping: 40\n    },\n    ...computedProps\n  } = omitThemeProps(mergedProps);\n  const {\n    isChecked,\n    isFocused,\n    isHovered,\n    isActive,\n    getContainerProps,\n    getIconProps,\n    getInputProps,\n    getLabelProps,\n    props: rest\n  } = useCheckbox(computedProps);\n  const cloneIcon = icon ? cloneElement(icon, {\n    isChecked,\n    isFocused,\n    isHovered,\n    isActive\n  }) : null;\n  return /* @__PURE__ */jsxs(ui.label, {\n    ref,\n    className: cx(\"ui-switch\", className),\n    __css: {\n      cursor: \"pointer\",\n      position: \"relative\",\n      display: \"inline-flex\",\n      flexDirection: flexDirection != null ? flexDirection : isReverse ? \"row-reverse\" : \"row\",\n      alignItems: \"center\",\n      verticalAlign: \"top\",\n      gap,\n      ...styles.container\n    },\n    ...getContainerProps(),\n    ...rest,\n    children: [/* @__PURE__ */jsx(ui.input, {\n      className: cx(\"ui-switch__input\", className),\n      ...getInputProps(inputProps, ref)\n    }), cloneIcon != null ? cloneIcon : /* @__PURE__ */jsx(ui.span, {\n      className: cx(\"ui-switch__track\", className),\n      __css: {\n        boxSizing: \"content-box\",\n        display: \"inline-flex\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        flexShrink: 0,\n        ...styles.track\n      },\n      ...getIconProps(),\n      children: /* @__PURE__ */jsx(ui.span, {\n        as: motion.span,\n        className: cx(\"ui-switch__thumb\", className),\n        \"data-checked\": dataAttr(isChecked),\n        layout: true,\n        transition,\n        __css: {\n          ...styles.thumb\n        }\n      })\n    }), children ? /* @__PURE__ */jsx(ui.span, {\n      className: cx(\"ui-switch__label\", className),\n      __css: {\n        ...styles.label\n      },\n      ...getLabelProps(labelProps),\n      children\n    }) : null]\n  });\n});\nexport { Switch };","map":{"version":3,"names":["useCheckbox","ui","forwardRef","omitThemeProps","useMultiComponentStyle","motion","cx","dataAttr","cloneElement","jsx","jsxs","Switch","props","ref","styles","mergedProps","className","gap","children","icon","inputProps","labelProps","isReverse","flexDirection","transition","type","stiffness","damping","computedProps","isChecked","isFocused","isHovered","isActive","getContainerProps","getIconProps","getInputProps","getLabelProps","rest","cloneIcon","label","__css","cursor","position","display","alignItems","verticalAlign","container","input","span","boxSizing","justifyContent","flexShrink","track","as","layout","thumb"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\switch\\src\\switch.tsx"],"sourcesContent":["import type { UseCheckboxProps } from \"@yamada-ui/checkbox\"\nimport { useCheckbox } from \"@yamada-ui/checkbox\"\nimport type { HTMLUIProps, ThemeProps } from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  omitThemeProps,\n  useMultiComponentStyle,\n} from \"@yamada-ui/core\"\nimport type { MotionTransition } from \"@yamada-ui/motion\"\nimport { motion } from \"@yamada-ui/motion\"\nimport type { Merge } from \"@yamada-ui/utils\"\nimport { cx, dataAttr } from \"@yamada-ui/utils\"\nimport type { DOMAttributes, InputHTMLAttributes, ReactElement } from \"react\"\nimport { cloneElement } from \"react\"\n\nexport type SwitchIconProps = {\n  isChecked?: boolean\n  isFocused?: boolean\n  isHovered?: boolean\n  isActive?: boolean\n}\n\ntype SwitchOptions = {\n  /**\n   * The switch icon to use.\n   */\n  icon?: ReactElement<SwitchIconProps>\n  /**\n   * Props for switch input element.\n   */\n  inputProps?: InputHTMLAttributes<HTMLInputElement>\n  /**\n   * Props for switch label element.\n   */\n  labelProps?: HTMLUIProps<\"span\">\n  /**\n   * Change switch label from right to left.\n   *\n   * @default false\n   */\n  isReverse?: boolean\n  /**\n   * Motion transition settings.\n   */\n  transition?: MotionTransition\n}\n\nexport type SwitchProps = Merge<\n  HTMLUIProps<\"label\">,\n  Omit<UseCheckboxProps, \"isIndeterminate\">\n> &\n  ThemeProps<\"Switch\"> &\n  SwitchOptions\n\n/**\n * `Switch` is a component used to toggle between on and off states.\n *\n * @see Docs https://yamada-ui.com/components/forms/switch\n */\nexport const Switch = forwardRef<SwitchProps, \"input\">((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"Switch\", props)\n  const {\n    className,\n    gap = \"0.5rem\",\n    children,\n    icon,\n    inputProps,\n    labelProps,\n    isReverse,\n    flexDirection,\n    transition = {\n      type: \"spring\",\n      stiffness: 700,\n      damping: 40,\n    },\n    ...computedProps\n  } = omitThemeProps(mergedProps)\n\n  const {\n    isChecked,\n    isFocused,\n    isHovered,\n    isActive,\n    getContainerProps,\n    getIconProps,\n    getInputProps,\n    getLabelProps,\n    props: rest,\n  } = useCheckbox(computedProps)\n\n  const cloneIcon = icon\n    ? cloneElement(icon, {\n        isChecked,\n        isFocused,\n        isHovered,\n        isActive,\n      })\n    : null\n\n  return (\n    <ui.label\n      ref={ref}\n      className={cx(\"ui-switch\", className)}\n      __css={{\n        cursor: \"pointer\",\n        position: \"relative\",\n        display: \"inline-flex\",\n        flexDirection: flexDirection ?? (isReverse ? \"row-reverse\" : \"row\"),\n        alignItems: \"center\",\n        verticalAlign: \"top\",\n        gap,\n        ...styles.container,\n      }}\n      {...getContainerProps()}\n      {...rest}\n    >\n      <ui.input\n        className={cx(\"ui-switch__input\", className)}\n        {...getInputProps(inputProps, ref)}\n      />\n\n      {cloneIcon ?? (\n        <ui.span\n          className={cx(\"ui-switch__track\", className)}\n          __css={{\n            boxSizing: \"content-box\",\n            display: \"inline-flex\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n            flexShrink: 0,\n            ...styles.track,\n          }}\n          {...getIconProps()}\n        >\n          <ui.span\n            as={motion.span}\n            className={cx(\"ui-switch__thumb\", className)}\n            data-checked={dataAttr(isChecked)}\n            layout\n            transition={transition}\n            __css={{ ...styles.thumb }}\n          />\n        </ui.span>\n      )}\n\n      {children ? (\n        <ui.span\n          className={cx(\"ui-switch__label\", className)}\n          __css={{ ...styles.label }}\n          {...getLabelProps(labelProps as DOMAttributes<HTMLElement>)}\n        >\n          {children}\n        </ui.span>\n      ) : null}\n    </ui.label>\n  )\n})\n"],"mappings":";;;AACA,SAASA,WAAA,QAAmB;AAE5B,SACEC,EAAA,EACAC,UAAA,EACAC,cAAA,EACAC,sBAAA,QACK;AAEP,SAASC,MAAA,QAAc;AAEvB,SAASC,EAAA,EAAIC,QAAA,QAAgB;AAE7B,SAASC,YAAA,QAAoB;AAuFzB,SAgBEC,GAAA,EAhBFC,IAAA;AAzCG,IAAMC,MAAA,GAAST,UAAA,CAAiC,CAACU,KAAA,EAAOC,GAAA,KAAQ;EACrE,MAAM,CAACC,MAAA,EAAQC,WAAW,IAAIX,sBAAA,CAAuB,UAAUQ,KAAK;EACpE,MAAM;IACJI,SAAA;IACAC,GAAA,GAAM;IACNC,QAAA;IACAC,IAAA;IACAC,UAAA;IACAC,UAAA;IACAC,SAAA;IACAC,aAAA;IACAC,UAAA,GAAa;MACXC,IAAA,EAAM;MACNC,SAAA,EAAW;MACXC,OAAA,EAAS;IACX;IACA,GAAGC;EACL,IAAIzB,cAAA,CAAeY,WAAW;EAE9B,MAAM;IACJc,SAAA;IACAC,SAAA;IACAC,SAAA;IACAC,QAAA;IACAC,iBAAA;IACAC,YAAA;IACAC,aAAA;IACAC,aAAA;IACAxB,KAAA,EAAOyB;EACT,IAAIrC,WAAA,CAAY4B,aAAa;EAE7B,MAAMU,SAAA,GAAYnB,IAAA,GACdX,YAAA,CAAaW,IAAA,EAAM;IACjBU,SAAA;IACAC,SAAA;IACAC,SAAA;IACAC;EACF,CAAC,IACD;EAEJ,OACE,eAAAtB,IAAA,CAACT,EAAA,CAAGsC,KAAA,EAAH;IACC1B,GAAA;IACAG,SAAA,EAAWV,EAAA,CAAG,aAAaU,SAAS;IACpCwB,KAAA,EAAO;MACLC,MAAA,EAAQ;MACRC,QAAA,EAAU;MACVC,OAAA,EAAS;MACTpB,aAAA,EAAeA,aAAA,WAAAA,aAAA,GAAkBD,SAAA,GAAY,gBAAgB;MAC7DsB,UAAA,EAAY;MACZC,aAAA,EAAe;MACf5B,GAAA;MACA,GAAGH,MAAA,CAAOgC;IACZ;IACC,GAAGb,iBAAA,CAAkB;IACrB,GAAGI,IAAA;IAEJnB,QAAA,kBAAAT,GAAA,CAACR,EAAA,CAAG8C,KAAA,EAAH;MACC/B,SAAA,EAAWV,EAAA,CAAG,oBAAoBU,SAAS;MAC1C,GAAGmB,aAAA,CAAcf,UAAA,EAAYP,GAAG;IAAA,CACnC,GAECyB,SAAA,WAAAA,SAAA,GACC,eAAA7B,GAAA,CAACR,EAAA,CAAG+C,IAAA,EAAH;MACChC,SAAA,EAAWV,EAAA,CAAG,oBAAoBU,SAAS;MAC3CwB,KAAA,EAAO;QACLS,SAAA,EAAW;QACXN,OAAA,EAAS;QACTO,cAAA,EAAgB;QAChBN,UAAA,EAAY;QACZO,UAAA,EAAY;QACZ,GAAGrC,MAAA,CAAOsC;MACZ;MACC,GAAGlB,YAAA,CAAa;MAEjBhB,QAAA,iBAAAT,GAAA,CAACR,EAAA,CAAG+C,IAAA,EAAH;QACCK,EAAA,EAAIhD,MAAA,CAAO2C,IAAA;QACXhC,SAAA,EAAWV,EAAA,CAAG,oBAAoBU,SAAS;QAC3C,gBAAcT,QAAA,CAASsB,SAAS;QAChCyB,MAAA,EAAM;QACN9B,UAAA;QACAgB,KAAA,EAAO;UAAE,GAAG1B,MAAA,CAAOyC;QAAM;MAAA,CAC3B;IAAA,CACF,GAGDrC,QAAA,GACC,eAAAT,GAAA,CAACR,EAAA,CAAG+C,IAAA,EAAH;MACChC,SAAA,EAAWV,EAAA,CAAG,oBAAoBU,SAAS;MAC3CwB,KAAA,EAAO;QAAE,GAAG1B,MAAA,CAAOyB;MAAM;MACxB,GAAGH,aAAA,CAAcf,UAAwC;MAEzDH;IAAA,CACH,IACE;EAAA,CACN;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\n// src/infinite-scroll-area.tsx\nimport { ui, forwardRef } from \"@yamada-ui/core\";\nimport { useInfiniteScroll } from \"@yamada-ui/use-infinite-scroll\";\nimport { cx, mergeRefs } from \"@yamada-ui/utils\";\nimport { useMemo, useRef } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar InfiniteScrollArea = forwardRef((_ref, ref) => {\n  let {\n    rootRef: rootRefProp,\n    orientation = \"vertical\",\n    rootMargin,\n    threshold,\n    startIndex,\n    onLoad,\n    resetRef,\n    indexRef,\n    className,\n    children,\n    triggerProps,\n    loading,\n    finish,\n    isDisabled,\n    isReverse,\n    initialLoad,\n    ...rest\n  } = _ref;\n  const isVertical = orientation === \"vertical\";\n  const rootRef = useRef(null);\n  const {\n    ref: triggerRef,\n    isFinish\n  } = useInfiniteScroll({\n    orientation,\n    rootRef: rootRefProp != null ? rootRefProp : rootRef,\n    rootMargin,\n    threshold,\n    startIndex,\n    onLoad,\n    resetRef,\n    indexRef,\n    isDisabled,\n    isReverse,\n    initialLoad\n  });\n  const css = useMemo(() => ({\n    w: \"100%\",\n    display: \"flex\",\n    flexDirection: isVertical ? \"column\" : \"row\",\n    gap: \"1rem\"\n  }), [isVertical]);\n  const hasFinish = !!finish;\n  const showTrigger = !isDisabled && (hasFinish || !isFinish);\n  return /* @__PURE__ */jsxs(ui.div, {\n    ref: mergeRefs(rootRef, ref),\n    tabIndex: 0,\n    className: cx(\"ui-infinite-scroll-area\", className),\n    __css: css,\n    ...rest,\n    children: [isReverse && showTrigger ? /* @__PURE__ */jsx(InfiniteScrollTrigger, {\n      ref: triggerRef,\n      ...triggerProps,\n      children: isFinish ? finish : loading\n    }) : null, children, !isReverse && showTrigger ? /* @__PURE__ */jsx(InfiniteScrollTrigger, {\n      ref: triggerRef,\n      ...triggerProps,\n      children: isFinish ? finish : loading\n    }) : null]\n  });\n});\nvar InfiniteScrollTrigger = forwardRef((_ref2, ref) => {\n  let {\n    className,\n    ...rest\n  } = _ref2;\n  const css = useMemo(() => ({\n    w: \"100%\",\n    flex: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }), []);\n  return /* @__PURE__ */jsx(ui.div, {\n    ref,\n    className: cx(\"ui-infinite-scroll-area__trigger\", className),\n    __css: css,\n    ...rest\n  });\n});\nexport { InfiniteScrollArea };","map":{"version":3,"names":["ui","forwardRef","useInfiniteScroll","cx","mergeRefs","useMemo","useRef","jsx","jsxs","InfiniteScrollArea","_ref","ref","rootRef","rootRefProp","orientation","rootMargin","threshold","startIndex","onLoad","resetRef","indexRef","className","children","triggerProps","loading","finish","isDisabled","isReverse","initialLoad","rest","isVertical","triggerRef","isFinish","css","w","display","flexDirection","gap","hasFinish","showTrigger","div","tabIndex","__css","InfiniteScrollTrigger","_ref2","flex","justifyContent","alignItems"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\infinite-scroll-area\\src\\infinite-scroll-area.tsx"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport type { UseInfiniteScrollProps } from \"@yamada-ui/use-infinite-scroll\"\nimport { useInfiniteScroll } from \"@yamada-ui/use-infinite-scroll\"\nimport { cx, mergeRefs } from \"@yamada-ui/utils\"\nimport type { ReactNode } from \"react\"\nimport { useMemo, useRef } from \"react\"\n\ntype InfiniteScrollAreaOptions = {\n  /**\n   * Props for infinite scroll area trigger component.\n   */\n  triggerProps?: HTMLUIProps<\"div\">\n  /**\n   * The infinite scroll area loading to use.\n   */\n  loading?: ReactNode\n  /**\n   * The infinite scroll area finish to use.\n   */\n  finish?: ReactNode\n}\n\nexport type InfiniteScrollAreaProps = Omit<\n  HTMLUIProps<\"div\">,\n  keyof UseInfiniteScrollProps\n> &\n  UseInfiniteScrollProps &\n  InfiniteScrollAreaOptions\n\n/**\n * `InfiniteScrollArea` is for providing infinite scroll functionality.\n * This feature provides a smooth scrolling experience by automatically loading and displaying the next dataset when the user reaches the end of the page.\n *\n * @see Docs https://yamada-ui.com/components/data-display/infinite-scroll-area\n */\nexport const InfiniteScrollArea = forwardRef<InfiniteScrollAreaProps, \"div\">(\n  (\n    {\n      rootRef: rootRefProp,\n      orientation = \"vertical\",\n      rootMargin,\n      threshold,\n      startIndex,\n      onLoad,\n      resetRef,\n      indexRef,\n      className,\n      children,\n      triggerProps,\n      loading,\n      finish,\n      isDisabled,\n      isReverse,\n      initialLoad,\n      ...rest\n    },\n    ref,\n  ) => {\n    const isVertical = orientation === \"vertical\"\n    const rootRef = useRef<HTMLDivElement>(null)\n    const { ref: triggerRef, isFinish } = useInfiniteScroll({\n      orientation,\n      rootRef: rootRefProp ?? rootRef,\n      rootMargin,\n      threshold,\n      startIndex,\n      onLoad,\n      resetRef,\n      indexRef,\n      isDisabled,\n      isReverse,\n      initialLoad,\n    })\n\n    const css: CSSUIObject = useMemo(\n      () => ({\n        w: \"100%\",\n        display: \"flex\",\n        flexDirection: isVertical ? \"column\" : \"row\",\n        gap: \"1rem\",\n      }),\n      [isVertical],\n    )\n\n    const hasFinish = !!finish\n    const showTrigger = !isDisabled && (hasFinish || !isFinish)\n\n    return (\n      <ui.div\n        ref={mergeRefs(rootRef, ref)}\n        tabIndex={0}\n        className={cx(\"ui-infinite-scroll-area\", className)}\n        __css={css}\n        {...rest}\n      >\n        {isReverse && showTrigger ? (\n          <InfiniteScrollTrigger ref={triggerRef} {...triggerProps}>\n            {isFinish ? finish : loading}\n          </InfiniteScrollTrigger>\n        ) : null}\n\n        {children}\n\n        {!isReverse && showTrigger ? (\n          <InfiniteScrollTrigger ref={triggerRef} {...triggerProps}>\n            {isFinish ? finish : loading}\n          </InfiniteScrollTrigger>\n        ) : null}\n      </ui.div>\n    )\n  },\n)\n\ntype InfiniteScrollTrigger = HTMLUIProps<\"div\">\n\nconst InfiniteScrollTrigger = forwardRef<InfiniteScrollTrigger, \"div\">(\n  ({ className, ...rest }, ref) => {\n    const css: CSSUIObject = useMemo(\n      () => ({\n        w: \"100%\",\n        flex: 1,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }),\n      [],\n    )\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-infinite-scroll-area__trigger\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n"],"mappings":";;;AACA,SAASA,EAAA,EAAIC,UAAA,QAAkB;AAE/B,SAASC,iBAAA,QAAyB;AAClC,SAASC,EAAA,EAAIC,SAAA,QAAiB;AAE9B,SAASC,OAAA,EAASC,MAAA,QAAc;AAmF1B,SAQIC,GAAA,EARJC,IAAA;AArDC,IAAMC,kBAAA,GAAqBR,UAAA,CAChC,CAAAS,IAAA,EAoBEC,GAAA,KACG;EAAA,IApBH;IACEC,OAAA,EAASC,WAAA;IACTC,WAAA,GAAc;IACdC,UAAA;IACAC,SAAA;IACAC,UAAA;IACAC,MAAA;IACAC,QAAA;IACAC,QAAA;IACAC,SAAA;IACAC,QAAA;IACAC,YAAA;IACAC,OAAA;IACAC,MAAA;IACAC,UAAA;IACAC,SAAA;IACAC,WAAA;IACA,GAAGC;EACL,IAAAnB,IAAA;EAGA,MAAMoB,UAAA,GAAahB,WAAA,KAAgB;EACnC,MAAMF,OAAA,GAAUN,MAAA,CAAuB,IAAI;EAC3C,MAAM;IAAEK,GAAA,EAAKoB,UAAA;IAAYC;EAAS,IAAI9B,iBAAA,CAAkB;IACtDY,WAAA;IACAF,OAAA,EAASC,WAAA,WAAAA,WAAA,GAAeD,OAAA;IACxBG,UAAA;IACAC,SAAA;IACAC,UAAA;IACAC,MAAA;IACAC,QAAA;IACAC,QAAA;IACAM,UAAA;IACAC,SAAA;IACAC;EACF,CAAC;EAED,MAAMK,GAAA,GAAmB5B,OAAA,CACvB,OAAO;IACL6B,CAAA,EAAG;IACHC,OAAA,EAAS;IACTC,aAAA,EAAeN,UAAA,GAAa,WAAW;IACvCO,GAAA,EAAK;EACP,IACA,CAACP,UAAU,CACb;EAEA,MAAMQ,SAAA,GAAY,CAAC,CAACb,MAAA;EACpB,MAAMc,WAAA,GAAc,CAACb,UAAA,KAAeY,SAAA,IAAa,CAACN,QAAA;EAElD,OACE,eAAAxB,IAAA,CAACR,EAAA,CAAGwC,GAAA,EAAH;IACC7B,GAAA,EAAKP,SAAA,CAAUQ,OAAA,EAASD,GAAG;IAC3B8B,QAAA,EAAU;IACVpB,SAAA,EAAWlB,EAAA,CAAG,2BAA2BkB,SAAS;IAClDqB,KAAA,EAAOT,GAAA;IACN,GAAGJ,IAAA;IAEHP,QAAA,GAAAK,SAAA,IAAaY,WAAA,GACZ,eAAAhC,GAAA,CAACoC,qBAAA;MAAsBhC,GAAA,EAAKoB,UAAA;MAAa,GAAGR,YAAA;MACzCD,QAAA,EAAAU,QAAA,GAAWP,MAAA,GAASD;IAAA,CACvB,IACE,MAEHF,QAAA,EAEA,CAACK,SAAA,IAAaY,WAAA,GACb,eAAAhC,GAAA,CAACoC,qBAAA;MAAsBhC,GAAA,EAAKoB,UAAA;MAAa,GAAGR,YAAA;MACzCD,QAAA,EAAAU,QAAA,GAAWP,MAAA,GAASD;IAAA,CACvB,IACE;EAAA,CACN;AAEJ,CACF;AAIA,IAAMmB,qBAAA,GAAwB1C,UAAA,CAC5B,CAAA2C,KAAA,EAAyBjC,GAAA,KAAQ;EAAA,IAAhC;IAAEU,SAAA;IAAW,GAAGQ;EAAK,IAAAe,KAAA;EACpB,MAAMX,GAAA,GAAmB5B,OAAA,CACvB,OAAO;IACL6B,CAAA,EAAG;IACHW,IAAA,EAAM;IACNV,OAAA,EAAS;IACTW,cAAA,EAAgB;IAChBC,UAAA,EAAY;EACd,IACA,EACF;EAEA,OACE,eAAAxC,GAAA,CAACP,EAAA,CAAGwC,GAAA,EAAH;IACC7B,GAAA;IACAU,SAAA,EAAWlB,EAAA,CAAG,oCAAoCkB,SAAS;IAC3DqB,KAAA,EAAOT,GAAA;IACN,GAAGJ;EAAA,CACN;AAEJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\nimport { useAvatarContext } from \"./chunk-F7MHUXUL.mjs\";\n\n// src/avatar-badge.tsx\nimport { ui, forwardRef } from \"@yamada-ui/core\";\nimport { useAnimation } from \"@yamada-ui/use-animation\";\nimport { cx } from \"@yamada-ui/utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar placementStyles = {\n  \"top-start\": {\n    top: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, -25%)\"\n  },\n  \"top-end\": {\n    top: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, -25%)\"\n  },\n  \"bottom-start\": {\n    bottom: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, 25%)\"\n  },\n  \"bottom-end\": {\n    bottom: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, 25%)\"\n  }\n};\nvar AvatarBadge = forwardRef((_ref, ref) => {\n  let {\n    className,\n    boxSize = \"1em\",\n    placement = \"bottom-end\",\n    ping,\n    pingColor = [\"blackAlpha.400\", \"whiteAlpha.500\"],\n    pingDuration = \"1.4s\",\n    pingCount = \"infinite\",\n    pingScale = 1.8,\n    children,\n    ...rest\n  } = _ref;\n  const styles = useAvatarContext();\n  const animation = useAnimation({\n    keyframes: {\n      \"75%, 100%\": {\n        transform: \"scale(\".concat(pingScale, \")\"),\n        opacity: 0\n      }\n    },\n    fillMode: \"forwards\",\n    duration: pingDuration,\n    timingFunction: \"cubic-bezier(0, 0, 0.2, 1)\",\n    iterationCount: pingCount\n  });\n  const css = {\n    position: \"absolute\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    ...placementStyles[placement],\n    ...styles.badge\n  };\n  return /* @__PURE__ */jsxs(ui.div, {\n    ref,\n    className: cx(\"ui-avatar__badge\", className),\n    boxSize,\n    __css: css,\n    ...rest,\n    children: [children, ping ? /* @__PURE__ */jsx(ui.div, {\n      className: \"ui-avatar__badge__ping\",\n      __css: {\n        position: \"absolute\",\n        boxSize: \"100%\",\n        rounded: \"fallback(full, 9999px)\",\n        opacity: 0.75,\n        zIndex: -1,\n        bg: pingColor\n      },\n      animation\n    }) : null]\n  });\n});\nexport { AvatarBadge };","map":{"version":3,"names":["ui","forwardRef","useAnimation","cx","jsx","jsxs","placementStyles","top","insetStart","transform","insetEnd","bottom","AvatarBadge","_ref","ref","className","boxSize","placement","ping","pingColor","pingDuration","pingCount","pingScale","children","rest","styles","useAvatarContext","animation","keyframes","concat","opacity","fillMode","duration","timingFunction","iterationCount","css","position","display","justifyContent","alignItems","badge","div","__css","rounded","zIndex","bg"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\avatar\\src\\avatar-badge.tsx"],"sourcesContent":["import type { HTMLUIProps, CSSUIObject, AnimationStyle } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { useAnimation } from \"@yamada-ui/use-animation\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useAvatarContext } from \"./avatar\"\n\ntype AvatarBadgeOptions = {\n  /**\n   * The placement of the badge.\n   *\n   * @default 'bottom-end'\n   */\n  placement?: \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\"\n  /**\n   * If `true`, make an element scale and fade like a radar ping or ripple of water.\n   *\n   * @default false\n   */\n  ping?: boolean\n  /**\n   * It is used for the color of the ping animation.\n   *\n   * @default '[\"blackAlpha.400\", \"whiteAlpha.500\"]'\n   */\n  pingColor?: HTMLUIProps<\"div\">[\"backgroundColor\"]\n  /**\n   * It is used for the scale of the ping animation.\n   *\n   * @default 1.8\n   */\n  pingScale?: number\n  /**\n   * It is used for the count of the ping animation.\n   *\n   * @default \"infinite\"\n   */\n  pingCount?: AnimationStyle[\"iterationCount\"]\n  /**\n   * It is used for the duration of the ping animation.\n   *\n   * @default \"1.4s\"\n   */\n  pingDuration?: AnimationStyle[\"direction\"]\n}\n\nexport type AvatarBadgeProps = HTMLUIProps<\"div\"> & AvatarBadgeOptions\n\nconst placementStyles: Record<\n  \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\",\n  CSSUIObject\n> = {\n  \"top-start\": {\n    top: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, -25%)\",\n  },\n  \"top-end\": {\n    top: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, -25%)\",\n  },\n  \"bottom-start\": {\n    bottom: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, 25%)\",\n  },\n  \"bottom-end\": {\n    bottom: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, 25%)\",\n  },\n}\n\nexport const AvatarBadge = forwardRef<AvatarBadgeProps, \"div\">(\n  (\n    {\n      className,\n      boxSize = \"1em\",\n      placement = \"bottom-end\",\n      ping,\n      pingColor = [\"blackAlpha.400\", \"whiteAlpha.500\"],\n      pingDuration = \"1.4s\",\n      pingCount = \"infinite\",\n      pingScale = 1.8,\n      children,\n      ...rest\n    },\n    ref,\n  ) => {\n    const styles = useAvatarContext()\n    const animation = useAnimation({\n      keyframes: {\n        \"75%, 100%\": {\n          transform: `scale(${pingScale})`,\n          opacity: 0,\n        },\n      },\n      fillMode: \"forwards\",\n      duration: pingDuration,\n      timingFunction: \"cubic-bezier(0, 0, 0.2, 1)\",\n      iterationCount: pingCount,\n    })\n\n    const css: CSSUIObject = {\n      position: \"absolute\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      ...placementStyles[placement],\n      ...styles.badge,\n    }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-avatar__badge\", className)}\n        boxSize={boxSize}\n        __css={css}\n        {...rest}\n      >\n        {children}\n\n        {ping ? (\n          <ui.div\n            className=\"ui-avatar__badge__ping\"\n            __css={{\n              position: \"absolute\",\n              boxSize: \"100%\",\n              rounded: \"fallback(full, 9999px)\",\n              opacity: 0.75,\n              zIndex: -1,\n              bg: pingColor,\n            }}\n            animation={animation}\n          />\n        ) : null}\n      </ui.div>\n    )\n  },\n)\n"],"mappings":";;;;;AACA,SAASA,EAAA,EAAIC,UAAA,QAAkB;AAC/B,SAASC,YAAA,QAAoB;AAC7B,SAASC,EAAA,QAAU;AA8Gb,SAUIC,GAAA,EAVJC,IAAA;AAlEN,IAAMC,eAAA,GAGF;EACF,aAAa;IACXC,GAAA,EAAK;IACLC,UAAA,EAAY;IACZC,SAAA,EAAW;EACb;EACA,WAAW;IACTF,GAAA,EAAK;IACLG,QAAA,EAAU;IACVD,SAAA,EAAW;EACb;EACA,gBAAgB;IACdE,MAAA,EAAQ;IACRH,UAAA,EAAY;IACZC,SAAA,EAAW;EACb;EACA,cAAc;IACZE,MAAA,EAAQ;IACRD,QAAA,EAAU;IACVD,SAAA,EAAW;EACb;AACF;AAEO,IAAMG,WAAA,GAAcX,UAAA,CACzB,CAAAY,IAAA,EAaEC,GAAA,KACG;EAAA,IAbH;IACEC,SAAA;IACAC,OAAA,GAAU;IACVC,SAAA,GAAY;IACZC,IAAA;IACAC,SAAA,GAAY,CAAC,kBAAkB,gBAAgB;IAC/CC,YAAA,GAAe;IACfC,SAAA,GAAY;IACZC,SAAA,GAAY;IACZC,QAAA;IACA,GAAGC;EACL,IAAAX,IAAA;EAGA,MAAMY,MAAA,GAASC,gBAAA,CAAiB;EAChC,MAAMC,SAAA,GAAYzB,YAAA,CAAa;IAC7B0B,SAAA,EAAW;MACT,aAAa;QACXnB,SAAA,WAAAoB,MAAA,CAAoBP,SAAS;QAC7BQ,OAAA,EAAS;MACX;IACF;IACAC,QAAA,EAAU;IACVC,QAAA,EAAUZ,YAAA;IACVa,cAAA,EAAgB;IAChBC,cAAA,EAAgBb;EAClB,CAAC;EAED,MAAMc,GAAA,GAAmB;IACvBC,QAAA,EAAU;IACVC,OAAA,EAAS;IACTC,cAAA,EAAgB;IAChBC,UAAA,EAAY;IACZ,GAAGjC,eAAA,CAAgBW,SAAS;IAC5B,GAAGQ,MAAA,CAAOe;EACZ;EAEA,OACE,eAAAnC,IAAA,CAACL,EAAA,CAAGyC,GAAA,EAAH;IACC3B,GAAA;IACAC,SAAA,EAAWZ,EAAA,CAAG,oBAAoBY,SAAS;IAC3CC,OAAA;IACA0B,KAAA,EAAOP,GAAA;IACN,GAAGX,IAAA;IAEHD,QAAA,GAAAA,QAAA,EAEAL,IAAA,GACC,eAAAd,GAAA,CAACJ,EAAA,CAAGyC,GAAA,EAAH;MACC1B,SAAA,EAAU;MACV2B,KAAA,EAAO;QACLN,QAAA,EAAU;QACVpB,OAAA,EAAS;QACT2B,OAAA,EAAS;QACTb,OAAA,EAAS;QACTc,MAAA,EAAQ;QACRC,EAAA,EAAI1B;MACN;MACAQ;IAAA,CACF,IACE;EAAA,CACN;AAEJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\nimport { MenuIcon, useMenu, useUpstreamMenuItem } from \"./chunk-UTYWCSIS.mjs\";\n\n// src/menu-button.tsx\nimport { ui, forwardRef } from \"@yamada-ui/core\";\nimport { ChevronIcon } from \"@yamada-ui/icon\";\nimport { PopoverTrigger } from \"@yamada-ui/popover\";\nimport { assignRef, cx, dataAttr, funcAll, handlerAll } from \"@yamada-ui/utils\";\nimport { useCallback } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar MenuButton = forwardRef(({\n  className,\n  children,\n  as: As,\n  ...rest\n}, ref) => {\n  var _a;\n  const {\n    onKeyDownRef,\n    onUpstreamRestoreFocus\n  } = (_a = useUpstreamMenuItem()) != null ? _a : {};\n  const {\n    isOpen,\n    onOpen,\n    onClose,\n    onFocusFirstItem,\n    onFocusLastItem\n  } = useMenu();\n  const onKeyDown = useCallback(ev => {\n    const actions = {\n      Enter: funcAll(onOpen, onFocusFirstItem),\n      ArrowDown: funcAll(onOpen, onFocusFirstItem),\n      ArrowUp: funcAll(onOpen, onFocusLastItem)\n    };\n    const action = actions[ev.key];\n    if (!action) return;\n    ev.preventDefault();\n    action();\n  }, [onFocusFirstItem, onFocusLastItem, onOpen]);\n  const onItemKeyDown = useCallback(ev => {\n    const actions = {\n      ArrowRight: !isOpen ? funcAll(onOpen, onFocusFirstItem) : void 0,\n      ArrowLeft: isOpen ? funcAll(onUpstreamRestoreFocus, onClose) : void 0\n    };\n    const action = actions[ev.key];\n    if (!action) return;\n    ev.preventDefault();\n    action();\n  }, [isOpen, onOpen, onFocusFirstItem, onUpstreamRestoreFocus, onClose]);\n  assignRef(onKeyDownRef, onItemKeyDown);\n  const Component = As ? ui(As) : Button;\n  return /* @__PURE__ */jsx(PopoverTrigger, {\n    children: /* @__PURE__ */jsx(Component, {\n      ref,\n      className: cx(\"ui-menu\", className),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": isOpen,\n      ...rest,\n      \"data-active\": dataAttr(isOpen),\n      onKeyDown: handlerAll(rest.onKeyDown, onKeyDown),\n      children\n    })\n  });\n});\nvar Button = forwardRef((rest, ref) => {\n  const {\n    styles\n  } = useMenu();\n  const css = {\n    display: \"inline-flex\",\n    appearance: \"none\",\n    alignItems: \"center\",\n    outline: 0,\n    ...styles.button\n  };\n  return /* @__PURE__ */jsx(ui.button, {\n    ref,\n    __css: css,\n    ...rest\n  });\n});\nvar MenuItemButton = forwardRef(({\n  className,\n  children,\n  innerProps,\n  icon,\n  iconProps,\n  ...rest\n}, ref) => {\n  return /* @__PURE__ */jsxs(MenuButton, {\n    ref,\n    className: cx(\"ui-menu__item-button\", className),\n    flex: \"1\",\n    ...rest,\n    children: [/* @__PURE__ */jsx(ui.span, {\n      as: \"span\",\n      flex: \"1\",\n      ...innerProps,\n      children\n    }), /* @__PURE__ */jsx(MenuIcon, {\n      ...iconProps,\n      children: icon != null ? icon : /* @__PURE__ */jsx(ChevronIcon, {\n        fontSize: \"1.5em\",\n        transform: \"rotate(-90deg)\"\n      })\n    })]\n  });\n});\nexport { MenuButton, MenuItemButton };","map":{"version":3,"names":["ui","forwardRef","ChevronIcon","PopoverTrigger","assignRef","cx","dataAttr","funcAll","handlerAll","useCallback","jsx","jsxs","MenuButton","className","children","as","As","rest","ref","_a","onKeyDownRef","onUpstreamRestoreFocus","useUpstreamMenuItem","isOpen","onOpen","onClose","onFocusFirstItem","onFocusLastItem","useMenu","onKeyDown","ev","actions","Enter","ArrowDown","ArrowUp","action","key","preventDefault","onItemKeyDown","ArrowRight","ArrowLeft","Component","Button","styles","css","display","appearance","alignItems","outline","button","__css","MenuItemButton","innerProps","icon","iconProps","flex","span","MenuIcon","fontSize","transform"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\menu\\src\\menu-button.tsx"],"sourcesContent":["import type { HTMLUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { ChevronIcon } from \"@yamada-ui/icon\"\nimport { PopoverTrigger } from \"@yamada-ui/popover\"\nimport { assignRef, cx, dataAttr, funcAll, handlerAll } from \"@yamada-ui/utils\"\nimport type { KeyboardEvent, ReactNode } from \"react\"\nimport { useCallback } from \"react\"\nimport { useMenu } from \"./menu\"\nimport type { MenuIconProps } from \"./menu-item\"\nimport { MenuIcon, useUpstreamMenuItem } from \"./menu-item\"\n\nexport type MenuButtonProps = HTMLUIProps<\"button\">\n\nexport const MenuButton = forwardRef<MenuButtonProps, \"button\">(\n  ({ className, children, as: As, ...rest }, ref) => {\n    const { onKeyDownRef, onUpstreamRestoreFocus } = useUpstreamMenuItem() ?? {}\n    const { isOpen, onOpen, onClose, onFocusFirstItem, onFocusLastItem } =\n      useMenu()\n\n    const onKeyDown = useCallback(\n      (ev: KeyboardEvent) => {\n        const actions: Record<string, Function> = {\n          Enter: funcAll(onOpen, onFocusFirstItem),\n          ArrowDown: funcAll(onOpen, onFocusFirstItem),\n          ArrowUp: funcAll(onOpen, onFocusLastItem),\n        }\n\n        const action = actions[ev.key]\n\n        if (!action) return\n\n        ev.preventDefault()\n\n        action()\n      },\n      [onFocusFirstItem, onFocusLastItem, onOpen],\n    )\n\n    const onItemKeyDown = useCallback(\n      (ev: KeyboardEvent) => {\n        const actions: Record<string, Function | undefined> = {\n          ArrowRight: !isOpen ? funcAll(onOpen, onFocusFirstItem) : undefined,\n          ArrowLeft: isOpen\n            ? funcAll(onUpstreamRestoreFocus, onClose)\n            : undefined,\n        }\n\n        const action = actions[ev.key]\n\n        if (!action) return\n\n        ev.preventDefault()\n\n        action()\n      },\n      [isOpen, onOpen, onFocusFirstItem, onUpstreamRestoreFocus, onClose],\n    )\n\n    assignRef(onKeyDownRef, onItemKeyDown)\n\n    const Component = As ? ui(As) : Button\n\n    return (\n      <PopoverTrigger>\n        <Component\n          ref={ref}\n          className={cx(\"ui-menu\", className)}\n          aria-haspopup=\"menu\"\n          aria-expanded={isOpen}\n          {...rest}\n          data-active={dataAttr(isOpen)}\n          onKeyDown={handlerAll(rest.onKeyDown, onKeyDown)}\n        >\n          {children}\n        </Component>\n      </PopoverTrigger>\n    )\n  },\n)\n\nconst Button = forwardRef<MenuButtonProps, \"button\">((rest, ref) => {\n  const { styles } = useMenu()\n\n  const css: CSSUIObject = {\n    display: \"inline-flex\",\n    appearance: \"none\",\n    alignItems: \"center\",\n    outline: 0,\n    ...styles.button,\n  }\n\n  return <ui.button ref={ref} __css={css} {...rest} />\n})\n\nexport type MenuItemButtonProps = MenuButtonProps & {\n  innerProps?: HTMLUIProps<\"span\">\n  iconProps?: MenuIconProps\n  icon?: ReactNode\n}\n\nexport const MenuItemButton = forwardRef<MenuItemButtonProps, \"button\">(\n  ({ className, children, innerProps, icon, iconProps, ...rest }, ref) => {\n    return (\n      <MenuButton\n        ref={ref}\n        className={cx(\"ui-menu__item-button\", className)}\n        flex=\"1\"\n        {...rest}\n      >\n        <ui.span as=\"span\" flex=\"1\" {...innerProps}>\n          {children}\n        </ui.span>\n\n        <MenuIcon {...iconProps}>\n          {icon ?? <ChevronIcon fontSize=\"1.5em\" transform=\"rotate(-90deg)\" />}\n        </MenuIcon>\n      </MenuButton>\n    )\n  },\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
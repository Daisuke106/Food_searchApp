{"ast":null,"code":"\"use client\";\n\n// src/aspect-ratio.tsx\nimport { ui, forwardRef } from \"@yamada-ui/core\";\nimport { cx, replaceObject } from \"@yamada-ui/utils\";\nimport { Children } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar AspectRatio = forwardRef(({\n  className,\n  ratio = 4 / 3,\n  children,\n  ...rest\n}, ref) => {\n  const child = Children.only(children);\n  const css = {\n    position: \"relative\",\n    _before: {\n      content: `\"\"`,\n      display: \"block\",\n      h: 0,\n      pb: replaceObject(ratio, r => `${1 / r * 100}%`)\n    },\n    \"& > *:not(style)\": {\n      overflow: \"hidden\",\n      position: \"absolute\",\n      top: \"0\",\n      right: \"0\",\n      bottom: \"0\",\n      left: \"0\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      w: \"100%\",\n      h: \"100%\"\n    },\n    \"& > img, & > video\": {\n      objectFit: \"cover\"\n    }\n  };\n  return /* @__PURE__ */jsx(ui.div, {\n    ref,\n    className: cx(\"ui-aspect-ratio\", className),\n    __css: css,\n    ...rest,\n    children: child\n  });\n});\nexport { AspectRatio };","map":{"version":3,"names":["ui","forwardRef","cx","replaceObject","Children","jsx","AspectRatio","className","ratio","children","rest","ref","child","only","css","position","_before","content","display","h","pb","r","overflow","top","right","bottom","left","justifyContent","alignItems","w","objectFit","div","__css"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\layouts\\src\\aspect-ratio.tsx"],"sourcesContent":["import type { HTMLUIProps, CSSUIObject, Token } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx, replaceObject } from \"@yamada-ui/utils\"\nimport { Children } from \"react\"\n\ntype AspectRatioOptions = {\n  /**\n   * The aspect ratio of the Box.\n   *\n   * @default '4 / 3'\n   */\n  ratio?: Token<number>\n}\n\nexport type AspectRatioProps = HTMLUIProps<\"div\"> & AspectRatioOptions\n\n/**\n * `AspectRatio` is a component for embedding things like videos and maps while maintaining the aspect ratio.\n *\n * @see Docs https://yamada-ui.com/components/layouts/aspect-ratio\n */\nexport const AspectRatio = forwardRef<AspectRatioProps, \"div\">(\n  ({ className, ratio = 4 / 3, children, ...rest }, ref) => {\n    const child = Children.only(children)\n\n    const css: CSSUIObject = {\n      position: \"relative\",\n      _before: {\n        content: `\"\"`,\n        display: \"block\",\n        h: 0,\n        pb: replaceObject(ratio, (r) => `${(1 / r) * 100}%`),\n      },\n      \"& > *:not(style)\": {\n        overflow: \"hidden\",\n        position: \"absolute\",\n        top: \"0\",\n        right: \"0\",\n        bottom: \"0\",\n        left: \"0\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        w: \"100%\",\n        h: \"100%\",\n      },\n      \"& > img, & > video\": {\n        objectFit: \"cover\",\n      },\n    }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-aspect-ratio\", className)}\n        __css={css}\n        {...rest}\n      >\n        {child}\n      </ui.div>\n    )\n  },\n)\n"],"mappings":";;;AACA,SAASA,EAAA,EAAIC,UAAA,QAAkB;AAC/B,SAASC,EAAA,EAAIC,aAAA,QAAqB;AAClC,SAASC,QAAA,QAAgB;AAiDnB,SAAAC,GAAA;AA/BC,IAAMC,WAAA,GAAcL,UAAA,CACzB,CAAC;EAAEM,SAAA;EAAWC,KAAA,GAAQ,IAAI;EAAGC,QAAA;EAAU,GAAGC;AAAK,GAAGC,GAAA,KAAQ;EACxD,MAAMC,KAAA,GAAQR,QAAA,CAASS,IAAA,CAAKJ,QAAQ;EAEpC,MAAMK,GAAA,GAAmB;IACvBC,QAAA,EAAU;IACVC,OAAA,EAAS;MACPC,OAAA,EAAS;MACTC,OAAA,EAAS;MACTC,CAAA,EAAG;MACHC,EAAA,EAAIjB,aAAA,CAAcK,KAAA,EAAQa,CAAA,IAAM,GAAI,IAAIA,CAAA,GAAK,GAAG,GAAG;IACrD;IACA,oBAAoB;MAClBC,QAAA,EAAU;MACVP,QAAA,EAAU;MACVQ,GAAA,EAAK;MACLC,KAAA,EAAO;MACPC,MAAA,EAAQ;MACRC,IAAA,EAAM;MACNR,OAAA,EAAS;MACTS,cAAA,EAAgB;MAChBC,UAAA,EAAY;MACZC,CAAA,EAAG;MACHV,CAAA,EAAG;IACL;IACA,sBAAsB;MACpBW,SAAA,EAAW;IACb;EACF;EAEA,OACE,eAAAzB,GAAA,CAACL,EAAA,CAAG+B,GAAA,EAAH;IACCpB,GAAA;IACAJ,SAAA,EAAWL,EAAA,CAAG,mBAAmBK,SAAS;IAC1CyB,KAAA,EAAOlB,GAAA;IACN,GAAGJ,IAAA;IAEHD,QAAA,EAAAG;EAAA,CACH;AAEJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
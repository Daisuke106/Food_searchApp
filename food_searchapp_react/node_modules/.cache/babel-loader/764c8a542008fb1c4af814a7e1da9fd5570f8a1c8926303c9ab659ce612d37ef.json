{"ast":null,"code":"\"use client\";\n\nimport { Loading } from \"./chunk-CVMB44NZ.mjs\";\n\n// src/loading-provider.tsx\nimport { ui } from \"@yamada-ui/core\";\nimport { AnimatePresence, Motion, motion } from \"@yamada-ui/motion\";\nimport { Portal } from \"@yamada-ui/portal\";\nimport { useTimeout } from \"@yamada-ui/use-timeout\";\nimport { isValidElement, assignRef, useUpdateEffect, isNumber } from \"@yamada-ui/utils\";\nimport { createContext, memo, useContext, useMemo, useState, Fragment, useRef, createRef } from \"react\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport { Fragment as Fragment2, jsx, jsxs } from \"react/jsx-runtime\";\nvar LoadingContext = createContext({});\nvar createLoadingRefs = () => ({\n  isLoading: createRef(),\n  start: createRef(),\n  finish: createRef(),\n  update: createRef(),\n  force: createRef()\n});\nvar createLoadingFunc = refs => ({\n  isLoading: () => {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = refs.current.isLoading).current) == null ? void 0 : _b.call(_a)) != null ? _c : false;\n  },\n  start: props => {\n    var _a, _b;\n    return (_b = (_a = refs.current.start).current) == null ? void 0 : _b.call(_a, props);\n  },\n  finish: () => {\n    var _a, _b;\n    return (_b = (_a = refs.current.finish).current) == null ? void 0 : _b.call(_a);\n  },\n  update: props => {\n    var _a, _b;\n    return (_b = (_a = refs.current.update).current) == null ? void 0 : _b.call(_a, props);\n  },\n  force: state => {\n    var _a, _b;\n    return (_b = (_a = refs.current.force).current) == null ? void 0 : _b.call(_a, state);\n  }\n});\nvar incrementCount = prev => prev + 1;\nvar decrementCount = prev => prev === 0 ? prev : prev - 1;\nvar LoadingProvider = _ref => {\n  let {\n    screen,\n    page,\n    background,\n    custom,\n    children\n  } = _ref;\n  var _a, _b, _c, _d, _e;\n  const screenRefs = useRef(createLoadingRefs());\n  const pageRefs = useRef(createLoadingRefs());\n  const backgroundRefs = useRef(createLoadingRefs());\n  const customRefs = useRef(createLoadingRefs());\n  const screenLoadingFunc = createLoadingFunc(screenRefs);\n  const pageLoadingFunc = createLoadingFunc(pageRefs);\n  const backgroundLoadingFunc = createLoadingFunc(backgroundRefs);\n  const customLoadingFunc = createLoadingFunc(customRefs);\n  const value = {\n    screen: screenLoadingFunc,\n    page: pageLoadingFunc,\n    background: backgroundLoadingFunc,\n    custom: customLoadingFunc\n  };\n  return /* @__PURE__ */jsxs(LoadingContext.Provider, {\n    value,\n    children: [children, /* @__PURE__ */jsx(Controller, {\n      controlRefs: screenRefs,\n      ...screen,\n      component: (_a = screen == null ? void 0 : screen.component) != null ? _a : props => /* @__PURE__ */jsx(ScreenComponent, {\n        ...props\n      })\n    }), /* @__PURE__ */jsx(Controller, {\n      controlRefs: pageRefs,\n      ...page,\n      component: (_b = page == null ? void 0 : page.component) != null ? _b : props => /* @__PURE__ */jsx(PageComponent, {\n        ...props\n      })\n    }), /* @__PURE__ */jsx(Controller, {\n      controlRefs: backgroundRefs,\n      ...background,\n      blockScrollOnMount: (_c = background == null ? void 0 : background.blockScrollOnMount) != null ? _c : false,\n      component: (_d = background == null ? void 0 : background.component) != null ? _d : props => /* @__PURE__ */jsx(BackgroundComponent, {\n        ...props\n      })\n    }), /* @__PURE__ */jsx(Controller, {\n      controlRefs: customRefs,\n      blockScrollOnMount: (_e = background == null ? void 0 : background.blockScrollOnMount) != null ? _e : false,\n      ...custom,\n      component: custom == null ? void 0 : custom.component\n    })]\n  });\n};\nvar Controller = _ref2 => {\n  let {\n    controlRefs,\n    appendToParentPortal,\n    containerRef,\n    allowPinchZoom = false,\n    blockScrollOnMount = true,\n    initialState,\n    duration: durationProps = null,\n    icon,\n    text,\n    component\n  } = _ref2;\n  const isLoadingRef = useRef(false);\n  const [{\n    loadingCount,\n    message,\n    duration\n  }, setState] = useState({\n    loadingCount: initialState ? 1 : 0,\n    message: void 0,\n    duration: durationProps\n  });\n  const {\n    isLoading,\n    start,\n    finish,\n    update,\n    force\n  } = useMemo(() => ({\n    isLoading: () => isLoadingRef.current,\n    start: function () {\n      let {\n        message: message2,\n        duration: duration2 = durationProps\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      isLoadingRef.current = true;\n      setState(_ref3 => {\n        let {\n          loadingCount: loadingCount2\n        } = _ref3;\n        return {\n          loadingCount: incrementCount(loadingCount2),\n          message: message2,\n          duration: duration2\n        };\n      });\n    },\n    update: next => setState(prev => ({\n      ...prev,\n      ...next\n    })),\n    finish: () => {\n      isLoadingRef.current = false;\n      setState(_ref4 => {\n        let {\n          loadingCount: loadingCount2\n        } = _ref4;\n        return {\n          loadingCount: decrementCount(loadingCount2),\n          message: void 0,\n          duration: durationProps\n        };\n      });\n    },\n    force: _ref5 => {\n      let {\n        loadingCount: loadingCount2 = 0,\n        message: message2,\n        duration: duration2 = durationProps\n      } = _ref5;\n      isLoadingRef.current = !!loadingCount2;\n      setState({\n        loadingCount: loadingCount2,\n        message: message2,\n        duration: duration2\n      });\n    }\n  }), [durationProps]);\n  assignRef(controlRefs.current.isLoading, isLoading);\n  assignRef(controlRefs.current.start, start);\n  assignRef(controlRefs.current.finish, finish);\n  assignRef(controlRefs.current.update, update);\n  assignRef(controlRefs.current.force, force);\n  const props = {\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish: finish\n  };\n  useUpdateEffect(() => {\n    if (initialState || isNumber(durationProps)) setState({\n      loadingCount: initialState ? 1 : 0,\n      message: void 0,\n      duration: durationProps\n    });\n  }, [initialState, durationProps]);\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    initial: false,\n    children: loadingCount ? /* @__PURE__ */jsx(Portal, {\n      appendToParentPortal,\n      containerRef,\n      children: /* @__PURE__ */jsx(RemoveScroll, {\n        allowPinchZoom,\n        enabled: blockScrollOnMount,\n        forwardProps: true,\n        children: /* @__PURE__ */jsx(Fragment, {\n          children: /* @__PURE__ */jsx(Render, {\n            component,\n            ...props\n          })\n        })\n      })\n    }) : null\n  });\n};\nvar Render = _ref6 => {\n  let {\n    component,\n    ...props\n  } = _ref6;\n  if (typeof component === \"function\") {\n    return component(props);\n  } else {\n    return /* @__PURE__ */jsx(Fragment2, {});\n  }\n};\nvar Message = _ref7 => {\n  let {\n    message,\n    ...rest\n  } = _ref7;\n  return message ? isValidElement(message) ? message : /* @__PURE__ */jsx(ui.p, {\n    ...rest,\n    children: message\n  }) : null;\n};\nvar getVariants = function () {\n  let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"fade\";\n  return {\n    initial: {\n      opacity: 0,\n      scale: type === \"scaleFade\" ? 0.95 : void 0\n    },\n    animate: {\n      opacity: 1,\n      scale: type === \"scaleFade\" ? 1 : void 0,\n      transition: {\n        duration: 0.4,\n        ease: [0.4, 0, 0.2, 1]\n      }\n    },\n    exit: {\n      opacity: 0,\n      scale: type === \"scaleFade\" ? 0.95 : void 0,\n      transition: {\n        duration: 0.4,\n        ease: [0.4, 0, 1, 1]\n      }\n    }\n  };\n};\nvar getOverlayStyle = function () {\n  let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"fill\";\n  return {\n    position: \"fixed\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    zIndex: \"fallback(beerus, 9999)\",\n    bg: type === \"fill\" ? [\"fallback(white, #fbfbfb)\", \"fallback(black, #141414)\"] : \"fallback(blackAlpha.600, rgba(0, 0, 0, 0.48))\",\n    w: \"100vw\",\n    h: \"100dvh\",\n    p: \"fallback(4, 1rem)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  };\n};\nvar getMotionProps = function (initialState) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"fade\";\n  return {\n    initial: initialState ? false : \"initial\",\n    animate: \"animate\",\n    exit: \"exit\",\n    variants: getVariants(type)\n  };\n};\nvar ScreenComponent = memo(_ref8 => {\n  let {\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish\n  } = _ref8;\n  const css = {\n    maxW: \"24rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: \"fallback(2, 0.5rem)\"\n  };\n  useTimeout(onFinish, duration);\n  return /* @__PURE__ */jsx(Motion, {\n    className: \"ui-loading-screen\",\n    ...getMotionProps(initialState),\n    __css: getOverlayStyle(),\n    children: /* @__PURE__ */jsxs(ui.div, {\n      __css: css,\n      children: [/* @__PURE__ */jsx(Loading, {\n        size: \"6xl\",\n        ...icon\n      }), /* @__PURE__ */jsx(Message, {\n        message,\n        lineClamp: 3,\n        ...text\n      })]\n    })\n  });\n});\nScreenComponent.displayName = \"ScreenComponent\";\nvar PageComponent = memo(_ref9 => {\n  let {\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish\n  } = _ref9;\n  const css = {\n    bg: [\"fallback(white, #fbfbfb)\", \"fallback(black, #141414)\"],\n    maxW: \"24rem\",\n    p: \"fallback(4, 1rem)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: \"fallback(2, 0.5rem)\",\n    rounded: \"fallback(md, 0.375rem)\",\n    boxShadow: [\"fallback(lg, 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05))\", \"fallback(dark-lg, 0px 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 5px 10px rgba(0, 0, 0, 0.2), 0px 15px 40px rgba(0, 0, 0, 0.4))\"]\n  };\n  useTimeout(onFinish, duration);\n  return /* @__PURE__ */jsx(Motion, {\n    className: \"ui-loading-page\",\n    ...getMotionProps(initialState),\n    __css: getOverlayStyle(\"transparent\"),\n    children: /* @__PURE__ */jsxs(ui.div, {\n      as: motion.div,\n      className: \"ui-loading-page__inner\",\n      ...getMotionProps(initialState, \"scaleFade\"),\n      __css: css,\n      children: [/* @__PURE__ */jsx(Loading, {\n        size: \"6xl\",\n        ...icon\n      }), /* @__PURE__ */jsx(Message, {\n        message,\n        lineClamp: 3,\n        ...text\n      })]\n    })\n  });\n});\nPageComponent.displayName = \"PageComponent\";\nvar BackgroundComponent = memo(_ref10 => {\n  let {\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish\n  } = _ref10;\n  const css = {\n    position: \"fixed\",\n    right: \"fallback(4, 1rem)\",\n    bottom: \"fallback(4, 1rem)\",\n    zIndex: \"fallback(beerus, 9999)\",\n    bg: [\"fallback(white, #fbfbfb)\", \"fallback(black, #141414)\"],\n    maxW: \"20rem\",\n    p: \"fallback(2, 0.5rem)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: \"fallback(2, 0.5rem)\",\n    rounded: \"fallback(md, 0.375rem)\",\n    boxShadow: [\"fallback(3xl, 0 25px 50px -12px rgba(0, 0, 0, 0.25), 0 -25px 50px -12px rgba(0, 0, 0, 0.25))\", \"fallback(dark-lg, 0px 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 5px 10px rgba(0, 0, 0, 0.2), 0px 15px 40px rgba(0, 0, 0, 0.4))\"]\n  };\n  useTimeout(onFinish, duration);\n  return /* @__PURE__ */jsxs(Motion, {\n    className: \"ui-loading-background\",\n    ...getMotionProps(initialState, \"scaleFade\"),\n    __css: css,\n    children: [/* @__PURE__ */jsx(Loading, {\n      size: \"xl\",\n      ...icon\n    }), /* @__PURE__ */jsx(Message, {\n      message,\n      fontSize: \"sm\",\n      lineClamp: 1,\n      ...text\n    })]\n  });\n});\nBackgroundComponent.displayName = \"BackgroundComponent\";\nvar useLoading = () => {\n  const {\n    screen,\n    page,\n    background,\n    custom\n  } = useContext(LoadingContext);\n  return {\n    screen,\n    page,\n    background,\n    custom\n  };\n};\nexport { LoadingProvider, useLoading };","map":{"version":3,"names":["ui","AnimatePresence","Motion","motion","Portal","useTimeout","isValidElement","assignRef","useUpdateEffect","isNumber","createContext","memo","useContext","useMemo","useState","Fragment","useRef","createRef","RemoveScroll","Fragment2","jsx","jsxs","LoadingContext","createLoadingRefs","isLoading","start","finish","update","force","createLoadingFunc","refs","_a","_b","_c","current","call","props","state","incrementCount","prev","decrementCount","LoadingProvider","_ref","screen","page","background","custom","children","_d","_e","screenRefs","pageRefs","backgroundRefs","customRefs","screenLoadingFunc","pageLoadingFunc","backgroundLoadingFunc","customLoadingFunc","value","Provider","Controller","controlRefs","component","ScreenComponent","PageComponent","blockScrollOnMount","BackgroundComponent","_ref2","appendToParentPortal","containerRef","allowPinchZoom","initialState","duration","durationProps","icon","text","isLoadingRef","loadingCount","message","setState","message2","duration2","arguments","length","undefined","_ref3","loadingCount2","next","_ref4","_ref5","onFinish","initial","enabled","forwardProps","Render","_ref6","Message","_ref7","rest","p","getVariants","type","opacity","scale","animate","transition","ease","exit","getOverlayStyle","position","top","right","bottom","left","zIndex","bg","w","h","display","justifyContent","alignItems","getMotionProps","variants","_ref8","css","maxW","flexDirection","gap","className","__css","div","Loading","size","lineClamp","displayName","_ref9","rounded","boxShadow","as","_ref10","fontSize","useLoading"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\loading\\src\\loading-provider.tsx"],"sourcesContent":["import type {\n  ThemeConfig,\n  LoadingComponentProps,\n  CSSUIObject,\n  LoadingConfigOptions,\n  HTMLUIProps,\n} from \"@yamada-ui/core\"\nimport { ui } from \"@yamada-ui/core\"\nimport type { MotionVariants } from \"@yamada-ui/motion\"\nimport { AnimatePresence, Motion, motion } from \"@yamada-ui/motion\"\nimport { Portal } from \"@yamada-ui/portal\"\nimport { useTimeout } from \"@yamada-ui/use-timeout\"\nimport {\n  isValidElement,\n  assignRef,\n  useUpdateEffect,\n  isNumber,\n} from \"@yamada-ui/utils\"\nimport type {\n  FC,\n  PropsWithChildren,\n  ReactNode,\n  MutableRefObject,\n  RefObject,\n} from \"react\"\nimport {\n  createContext,\n  memo,\n  useContext,\n  useMemo,\n  useState,\n  Fragment,\n  useRef,\n  createRef,\n} from \"react\"\nimport { RemoveScroll } from \"react-remove-scroll\"\nimport { Loading } from \"./loading\"\n\ntype LoadingContextProps = {\n  /**\n   * Returns a judgement on whether it is currently loading or not.\n   */\n  isLoading: () => boolean\n  /**\n   * Function to start loading.\n   *\n   * If you specify a `message` etc. as an argument, the loading will change accordingly.\n   */\n  start: (props?: Partial<LoadingProps>) => void\n  /**\n   * Function to finish loading.\n   */\n  finish: () => void\n  /**\n   * Function to update loading.\n   *\n   * If you specify a `message` etc. as an argument, the loading will change accordingly.\n   */\n  update: (props: Partial<LoadingProps>) => void\n  /**\n   * Function to forcefully update the loading state.\n   *\n   * Please be careful, as it will forcefully overwrite the state of the loading component.\n   */\n  force: (state: Partial<LoadingState>) => void\n}\n\ntype LoadingContext = {\n  /**\n   * The screen loading animation.\n   */\n  screen: LoadingContextProps\n  /**\n   * The page loading animation.\n   */\n  page: LoadingContextProps\n  /**\n   * The background loading animation.\n   */\n  background: LoadingContextProps\n  /**\n   * The custom loading animation.\n   *\n   * This cannot be used unless a component is defined at `config/loading/custom.`\n   */\n  custom: LoadingContextProps\n}\n\ntype LoadingProps = {\n  message: ReactNode | undefined\n  duration: number | null\n}\n\ntype LoadingState = {\n  loadingCount: number\n  message: ReactNode | undefined\n  duration: number | null\n}\n\nexport type LoadingProviderProps = PropsWithChildren<ThemeConfig[\"loading\"]>\n\nconst LoadingContext = createContext({} as LoadingContext)\n\ntype Refs = {\n  isLoading: RefObject<LoadingContextProps[\"isLoading\"]>\n  start: RefObject<LoadingContextProps[\"start\"]>\n  finish: RefObject<LoadingContextProps[\"finish\"]>\n  update: RefObject<LoadingContextProps[\"update\"]>\n  force: RefObject<LoadingContextProps[\"force\"]>\n}\n\ntype ControlRefs = MutableRefObject<Refs>\n\nconst createLoadingRefs = (): Refs => ({\n  isLoading: createRef<LoadingContextProps[\"isLoading\"]>(),\n  start: createRef<LoadingContextProps[\"start\"]>(),\n  finish: createRef<LoadingContextProps[\"finish\"]>(),\n  update: createRef<LoadingContextProps[\"update\"]>(),\n  force: createRef<LoadingContextProps[\"force\"]>(),\n})\n\nconst createLoadingFunc = (refs: ControlRefs): LoadingContextProps => ({\n  isLoading: () => refs.current.isLoading.current?.() ?? false,\n  start: (props) => refs.current.start.current?.(props),\n  finish: () => refs.current.finish.current?.(),\n  update: (props) => refs.current.update.current?.(props),\n  force: (state) => refs.current.force.current?.(state),\n})\n\nconst incrementCount = (prev: number) => prev + 1\nconst decrementCount = (prev: number) => (prev === 0 ? prev : prev - 1)\n\nexport const LoadingProvider: FC<LoadingProviderProps> = ({\n  screen,\n  page,\n  background,\n  custom,\n  children,\n}) => {\n  const screenRefs = useRef(createLoadingRefs())\n  const pageRefs = useRef(createLoadingRefs())\n  const backgroundRefs = useRef(createLoadingRefs())\n  const customRefs = useRef(createLoadingRefs())\n\n  const screenLoadingFunc = createLoadingFunc(screenRefs)\n  const pageLoadingFunc = createLoadingFunc(pageRefs)\n  const backgroundLoadingFunc = createLoadingFunc(backgroundRefs)\n  const customLoadingFunc = createLoadingFunc(customRefs)\n\n  const value = {\n    screen: screenLoadingFunc,\n    page: pageLoadingFunc,\n    background: backgroundLoadingFunc,\n    custom: customLoadingFunc,\n  }\n\n  return (\n    <LoadingContext.Provider value={value}>\n      {children}\n\n      <Controller\n        controlRefs={screenRefs}\n        {...screen}\n        component={\n          screen?.component ?? ((props) => <ScreenComponent {...props} />)\n        }\n      />\n\n      <Controller\n        controlRefs={pageRefs}\n        {...page}\n        component={page?.component ?? ((props) => <PageComponent {...props} />)}\n      />\n\n      <Controller\n        controlRefs={backgroundRefs}\n        {...background}\n        blockScrollOnMount={background?.blockScrollOnMount ?? false}\n        component={\n          background?.component ??\n          ((props) => <BackgroundComponent {...props} />)\n        }\n      />\n\n      <Controller\n        controlRefs={customRefs}\n        blockScrollOnMount={background?.blockScrollOnMount ?? false}\n        {...custom}\n        component={custom?.component}\n      />\n    </LoadingContext.Provider>\n  )\n}\n\ntype ControllerProps = {\n  controlRefs: ControlRefs\n  render?: (props: LoadingComponentProps) => JSX.Element\n} & LoadingConfigOptions\n\nconst Controller: FC<ControllerProps> = ({\n  controlRefs,\n  appendToParentPortal,\n  containerRef,\n  allowPinchZoom = false,\n  blockScrollOnMount = true,\n  initialState,\n  duration: durationProps = null,\n  icon,\n  text,\n  component,\n}) => {\n  const isLoadingRef = useRef<boolean>(false)\n  const [{ loadingCount, message, duration }, setState] =\n    useState<LoadingState>({\n      loadingCount: initialState ? 1 : 0,\n      message: undefined,\n      duration: durationProps,\n    })\n\n  const { isLoading, start, finish, update, force }: LoadingContextProps =\n    useMemo(\n      () => ({\n        isLoading: () => isLoadingRef.current,\n\n        start: ({ message, duration = durationProps } = {}) => {\n          isLoadingRef.current = true\n\n          setState(({ loadingCount }) => ({\n            loadingCount: incrementCount(loadingCount),\n            message,\n            duration,\n          }))\n        },\n\n        update: (next) => setState((prev) => ({ ...prev, ...next })),\n\n        finish: () => {\n          isLoadingRef.current = false\n\n          setState(({ loadingCount }) => ({\n            loadingCount: decrementCount(loadingCount),\n            message: undefined,\n            duration: durationProps,\n          }))\n        },\n\n        force: ({ loadingCount = 0, message, duration = durationProps }) => {\n          isLoadingRef.current = !!loadingCount\n\n          setState({\n            loadingCount,\n            message,\n            duration,\n          })\n        },\n      }),\n      [durationProps],\n    )\n\n  assignRef(controlRefs.current.isLoading, isLoading)\n  assignRef(controlRefs.current.start, start)\n  assignRef(controlRefs.current.finish, finish)\n  assignRef(controlRefs.current.update, update)\n  assignRef(controlRefs.current.force, force)\n\n  const props: LoadingComponentProps = {\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish: finish,\n  }\n\n  useUpdateEffect(() => {\n    if (initialState || isNumber(durationProps))\n      setState({\n        loadingCount: initialState ? 1 : 0,\n        message: undefined,\n        duration: durationProps,\n      })\n  }, [initialState, durationProps])\n\n  return (\n    <AnimatePresence initial={false}>\n      {loadingCount ? (\n        <Portal\n          appendToParentPortal={appendToParentPortal}\n          containerRef={containerRef}\n        >\n          <RemoveScroll\n            allowPinchZoom={allowPinchZoom}\n            enabled={blockScrollOnMount}\n            forwardProps\n          >\n            <Fragment>\n              <Render component={component} {...props} />\n            </Fragment>\n          </RemoveScroll>\n        </Portal>\n      ) : null}\n    </AnimatePresence>\n  )\n}\n\ntype RenderProps = {\n  component?: (props: LoadingComponentProps) => ReactNode\n} & LoadingComponentProps\n\nconst Render: FC<RenderProps> = ({ component, ...props }) => {\n  if (typeof component === \"function\") {\n    return component(props) as JSX.Element\n  } else {\n    return <></>\n  }\n}\n\ntype MessageProps = { message: ReactNode } & HTMLUIProps<\"p\">\n\nconst Message: FC<MessageProps> = ({ message, ...rest }) => {\n  return message ? (\n    isValidElement(message) ? (\n      message\n    ) : (\n      <ui.p {...rest}>{message}</ui.p>\n    )\n  ) : null\n}\n\nconst getVariants = (type: \"fade\" | \"scaleFade\" = \"fade\"): MotionVariants => ({\n  initial: {\n    opacity: 0,\n    scale: type === \"scaleFade\" ? 0.95 : undefined,\n  },\n  animate: {\n    opacity: 1,\n    scale: type === \"scaleFade\" ? 1 : undefined,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: type === \"scaleFade\" ? 0.95 : undefined,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n})\n\nconst getOverlayStyle = (\n  type: \"fill\" | \"transparent\" = \"fill\",\n): CSSUIObject => ({\n  position: \"fixed\",\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  zIndex: \"fallback(beerus, 9999)\",\n  bg:\n    type === \"fill\"\n      ? [\"fallback(white, #fbfbfb)\", \"fallback(black, #141414)\"]\n      : \"fallback(blackAlpha.600, rgba(0, 0, 0, 0.48))\",\n  w: \"100vw\",\n  h: \"100dvh\",\n  p: \"fallback(4, 1rem)\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n})\n\nconst getMotionProps = (\n  initialState: boolean | undefined,\n  type: \"fade\" | \"scaleFade\" = \"fade\",\n) => ({\n  initial: initialState ? false : \"initial\",\n  animate: \"animate\",\n  exit: \"exit\",\n  variants: getVariants(type),\n})\n\nconst ScreenComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      maxW: \"24rem\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"fallback(2, 0.5rem)\",\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <Motion\n        className=\"ui-loading-screen\"\n        {...getMotionProps(initialState)}\n        __css={getOverlayStyle()}\n      >\n        <ui.div __css={css}>\n          <Loading size=\"6xl\" {...icon} />\n          <Message message={message} lineClamp={3} {...text} />\n        </ui.div>\n      </Motion>\n    )\n  },\n)\n\nScreenComponent.displayName = \"ScreenComponent\"\n\nconst PageComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      bg: [\"fallback(white, #fbfbfb)\", \"fallback(black, #141414)\"],\n      maxW: \"24rem\",\n      p: \"fallback(4, 1rem)\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"fallback(2, 0.5rem)\",\n      rounded: \"fallback(md, 0.375rem)\",\n      boxShadow: [\n        \"fallback(lg, 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05))\",\n        \"fallback(dark-lg, 0px 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 5px 10px rgba(0, 0, 0, 0.2), 0px 15px 40px rgba(0, 0, 0, 0.4))\",\n      ],\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <Motion\n        className=\"ui-loading-page\"\n        {...getMotionProps(initialState)}\n        __css={getOverlayStyle(\"transparent\")}\n      >\n        <ui.div\n          as={motion.div}\n          className=\"ui-loading-page__inner\"\n          {...getMotionProps(initialState, \"scaleFade\")}\n          __css={css}\n        >\n          <Loading size=\"6xl\" {...icon} />\n          <Message message={message} lineClamp={3} {...text} />\n        </ui.div>\n      </Motion>\n    )\n  },\n)\n\nPageComponent.displayName = \"PageComponent\"\n\nconst BackgroundComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      position: \"fixed\",\n      right: \"fallback(4, 1rem)\",\n      bottom: \"fallback(4, 1rem)\",\n      zIndex: \"fallback(beerus, 9999)\",\n      bg: [\"fallback(white, #fbfbfb)\", \"fallback(black, #141414)\"],\n      maxW: \"20rem\",\n      p: \"fallback(2, 0.5rem)\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"fallback(2, 0.5rem)\",\n      rounded: \"fallback(md, 0.375rem)\",\n      boxShadow: [\n        \"fallback(3xl, 0 25px 50px -12px rgba(0, 0, 0, 0.25), 0 -25px 50px -12px rgba(0, 0, 0, 0.25))\",\n        \"fallback(dark-lg, 0px 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 5px 10px rgba(0, 0, 0, 0.2), 0px 15px 40px rgba(0, 0, 0, 0.4))\",\n      ],\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <Motion\n        className=\"ui-loading-background\"\n        {...getMotionProps(initialState, \"scaleFade\")}\n        __css={css}\n      >\n        <Loading size=\"xl\" {...icon} />\n        <Message message={message} fontSize=\"sm\" lineClamp={1} {...text} />\n      </Motion>\n    )\n  },\n)\n\nBackgroundComponent.displayName = \"BackgroundComponent\"\n\n/**\n * `useLoading` is a custom hook for controlling the loading of the application.\n *\n * @see Docs https://yamada-ui.com/hooks/use-loading\n */\nexport const useLoading = (): LoadingContext => {\n  const { screen, page, background, custom } = useContext(LoadingContext)\n\n  return { screen, page, background, custom }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\n// src/index.ts\nimport { useColorMode, useTheme } from \"@yamada-ui/core\";\nimport { getMemoizedObject as get, isArray, isUndefined } from \"@yamada-ui/utils\";\nvar useToken = (name, path) => {\n  const {\n    theme\n  } = useTheme();\n  const {\n    colorMode\n  } = useColorMode();\n  return getToken(name, path)(theme, colorMode);\n};\nvar getToken = (name, path) => (theme, colorMode) => {\n  var _a, _b, _c;\n  if (name === \"layerStyles\") name = \"styles.layerStyles\";\n  if (name === \"textStyles\") name = \"styles.textStyles\";\n  if (name === \"transitionProperty\") name = \"transitions.property\";\n  if (name === \"transitionDuration\") name = \"transitions.duration\";\n  if (name === \"transitionEasing\") name = \"transitions.easing\";\n  let value = get(theme, \"\".concat(name, \".\").concat(path));\n  if (!isUndefined(value)) {\n    if (isArray(value)) {\n      const [lightValue, darkValue] = value;\n      return colorMode === \"light\" ? lightValue : darkValue;\n    } else {\n      return value;\n    }\n  } else {\n    value = get(theme, \"semantics.\".concat(name, \".\").concat(path));\n    if (isArray(value)) {\n      value = [(_a = get(theme, \"\".concat(name, \".\").concat(value[0]))) != null ? _a : value[0], (_b = get(theme, \"\".concat(name, \".\").concat(value[1]))) != null ? _b : value[1]];\n    } else {\n      value = (_c = get(theme, \"\".concat(name, \".\").concat(value))) != null ? _c : value;\n    }\n    if (isArray(value)) {\n      const [lightValue, darkValue] = value;\n      value = colorMode === \"light\" ? lightValue : darkValue;\n      if (isArray(value)) {\n        const [lightValue2, darkValue2] = value;\n        return colorMode === \"light\" ? lightValue2 : darkValue2;\n      } else {\n        return value;\n      }\n    } else {\n      return value;\n    }\n  }\n};\nexport { getToken, useToken };","map":{"version":3,"names":["useColorMode","useTheme","getMemoizedObject","get","isArray","isUndefined","useToken","name","path","theme","colorMode","getToken","_a","_b","_c","value","concat","lightValue","darkValue","lightValue2","darkValue2"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\use-token\\src\\index.ts"],"sourcesContent":["import type { ColorMode, StyledTheme, Theme } from \"@yamada-ui/core\"\nimport { useColorMode, useTheme } from \"@yamada-ui/core\"\nimport {\n  getMemoizedObject as get,\n  isArray,\n  isUndefined,\n} from \"@yamada-ui/utils\"\n\n/**\n * `useToken` is a custom hook for retrieving tokens from the theme.\n *\n * @see Docs https://yamada-ui.com/hooks/use-token\n */\nexport const useToken = <\n  Y extends string | number = string,\n  M extends keyof Omit<\n    Theme,\n    \"components\" | \"colorSchemes\" | \"themeSchemes\"\n  > = keyof Omit<Theme, \"components\" | \"colorSchemes\" | \"themeSchemes\">,\n>(\n  name: M,\n  path: Theme[M] | number | undefined,\n) => {\n  const { theme } = useTheme()\n  const { colorMode } = useColorMode()\n\n  return getToken<Y, M>(name, path)(theme, colorMode)\n}\n\nexport const getToken =\n  <\n    Y extends string | number = string,\n    M extends keyof Omit<\n      Theme,\n      \"components\" | \"colorSchemes\" | \"themeSchemes\"\n    > = keyof Omit<Theme, \"components\" | \"colorSchemes\" | \"themeSchemes\">,\n  >(\n    name: M,\n    path: Theme[M] | number | undefined,\n  ) =>\n  (theme: StyledTheme, colorMode: ColorMode) => {\n    if (name === \"layerStyles\") name = \"styles.layerStyles\" as M\n\n    if (name === \"textStyles\") name = \"styles.textStyles\" as M\n\n    if (name === \"transitionProperty\") name = \"transitions.property\" as M\n\n    if (name === \"transitionDuration\") name = \"transitions.duration\" as M\n\n    if (name === \"transitionEasing\") name = \"transitions.easing\" as M\n\n    let value = get<Y | [Y, Y] | undefined>(theme, `${name}.${path}`)\n\n    if (!isUndefined(value)) {\n      if (isArray(value)) {\n        const [lightValue, darkValue] = value\n\n        return colorMode === \"light\" ? lightValue : darkValue\n      } else {\n        return value\n      }\n    } else {\n      value = get<Y | [Y, Y] | undefined>(theme, `semantics.${name}.${path}`)\n\n      if (isArray(value)) {\n        value = [\n          get<Y>(theme, `${name}.${value[0]}`) ?? value[0],\n          get<Y>(theme, `${name}.${value[1]}`) ?? value[1],\n        ]\n      } else {\n        value = get<Y | undefined>(theme, `${name}.${value}`) ?? value\n      }\n\n      if (isArray(value)) {\n        const [lightValue, darkValue] = value\n\n        value = colorMode === \"light\" ? lightValue : darkValue\n\n        if (isArray(value)) {\n          const [lightValue, darkValue] = value as unknown as [Y, Y]\n\n          return colorMode === \"light\" ? lightValue : darkValue\n        } else {\n          return value\n        }\n      } else {\n        return value\n      }\n    }\n  }\n"],"mappings":";;;AACA,SAASA,YAAA,EAAcC,QAAA,QAAgB;AACvC,SACEC,iBAAA,IAAqBC,GAAA,EACrBC,OAAA,EACAC,WAAA,QACK;AAOA,IAAMC,QAAA,GAAWA,CAOtBC,IAAA,EACAC,IAAA,KACG;EACH,MAAM;IAAEC;EAAM,IAAIR,QAAA,CAAS;EAC3B,MAAM;IAAES;EAAU,IAAIV,YAAA,CAAa;EAEnC,OAAOW,QAAA,CAAeJ,IAAA,EAAMC,IAAI,EAAEC,KAAA,EAAOC,SAAS;AACpD;AAEO,IAAMC,QAAA,GACXA,CAOEJ,IAAA,EACAC,IAAA,KAEF,CAACC,KAAA,EAAoBC,SAAA,KAAyB;EAxChD,IAAAE,EAAA,EAAAC,EAAA,EAAAC,EAAA;EAyCI,IAAIP,IAAA,KAAS,eAAeA,IAAA,GAAO;EAEnC,IAAIA,IAAA,KAAS,cAAcA,IAAA,GAAO;EAElC,IAAIA,IAAA,KAAS,sBAAsBA,IAAA,GAAO;EAE1C,IAAIA,IAAA,KAAS,sBAAsBA,IAAA,GAAO;EAE1C,IAAIA,IAAA,KAAS,oBAAoBA,IAAA,GAAO;EAExC,IAAIQ,KAAA,GAAQZ,GAAA,CAA4BM,KAAA,KAAAO,MAAA,CAAUT,IAAI,OAAAS,MAAA,CAAIR,IAAI,CAAE;EAEhE,IAAI,CAACH,WAAA,CAAYU,KAAK,GAAG;IACvB,IAAIX,OAAA,CAAQW,KAAK,GAAG;MAClB,MAAM,CAACE,UAAA,EAAYC,SAAS,IAAIH,KAAA;MAEhC,OAAOL,SAAA,KAAc,UAAUO,UAAA,GAAaC,SAAA;IAC9C,OAAO;MACL,OAAOH,KAAA;IACT;EACF,OAAO;IACLA,KAAA,GAAQZ,GAAA,CAA4BM,KAAA,eAAAO,MAAA,CAAoBT,IAAI,OAAAS,MAAA,CAAIR,IAAI,CAAE;IAEtE,IAAIJ,OAAA,CAAQW,KAAK,GAAG;MAClBA,KAAA,GAAQ,EACNH,EAAA,GAAAT,GAAA,CAAOM,KAAA,KAAAO,MAAA,CAAUT,IAAI,OAAAS,MAAA,CAAID,KAAA,CAAM,CAAC,CAAC,CAAE,MAAnC,OAAAH,EAAA,GAAwCG,KAAA,CAAM,CAAC,IAC/CF,EAAA,GAAAV,GAAA,CAAOM,KAAA,KAAAO,MAAA,CAAUT,IAAI,OAAAS,MAAA,CAAID,KAAA,CAAM,CAAC,CAAC,CAAE,MAAnC,OAAAF,EAAA,GAAwCE,KAAA,CAAM,CAAC,EACjD;IACF,OAAO;MACLA,KAAA,IAAQD,EAAA,GAAAX,GAAA,CAAmBM,KAAA,KAAAO,MAAA,CAAUT,IAAI,OAAAS,MAAA,CAAID,KAAK,CAAE,MAA5C,OAAAD,EAAA,GAAiDC,KAAA;IAC3D;IAEA,IAAIX,OAAA,CAAQW,KAAK,GAAG;MAClB,MAAM,CAACE,UAAA,EAAYC,SAAS,IAAIH,KAAA;MAEhCA,KAAA,GAAQL,SAAA,KAAc,UAAUO,UAAA,GAAaC,SAAA;MAE7C,IAAId,OAAA,CAAQW,KAAK,GAAG;QAClB,MAAM,CAACI,WAAA,EAAYC,UAAS,IAAIL,KAAA;QAEhC,OAAOL,SAAA,KAAc,UAAUS,WAAA,GAAaC,UAAA;MAC9C,OAAO;QACL,OAAOL,KAAA;MACT;IACF,OAAO;MACL,OAAOA,KAAA;IACT;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\n// src/color-swatch.tsx\nimport { ui, forwardRef, omitThemeProps, useMultiComponentStyle } from \"@yamada-ui/core\";\nimport { cx } from \"@yamada-ui/utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar defaultOverlays = (background, withShadow) => {\n  let overlays = [{\n    bgImage: \"linear-gradient(45deg, var(--ui-checkers) 25%, transparent 25%), linear-gradient(-45deg, var(--ui-checkers) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, var(--ui-checkers) 75%), linear-gradient(-45deg, var(--ui-body) 75%, var(--ui-checkers) 75%)\",\n    bgSize: `8px 8px`,\n    bgPosition: `0 0, 0 4px, 4px -4px, -4px 0`,\n    var: [{\n      __prefix: \"ui\",\n      name: \"checkers\",\n      token: \"colors\",\n      value: [\"blackAlpha.300\", \"whiteAlpha.300\"]\n    }, {\n      __prefix: \"ui\",\n      name: \"body\",\n      token: \"colors\",\n      value: [\"whiteAlpha.500\", \"blackAlpha.500\"]\n    }]\n  }, {\n    background\n  }];\n  if (withShadow) overlays = [...overlays, {\n    boxShadow: `rgba(0, 0, 0, .1) 0 0 0 1px inset, rgb(0, 0, 0, .15) 0 0 4px inset`\n  }];\n  return overlays;\n};\nvar ColorSwatch = forwardRef((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"ColorSwatch\", props);\n  const {\n    className,\n    color = \"#ffffff00\",\n    withShadow = true,\n    overlays = defaultOverlays(color, withShadow),\n    isRounded,\n    __css,\n    ...rest\n  } = omitThemeProps(mergedProps);\n  const css = {\n    position: \"relative\",\n    _before: {\n      content: `\"\"`,\n      display: \"block\",\n      h: 0,\n      pb: \"100%\"\n    },\n    \"& > *\": {\n      overflow: \"hidden\",\n      position: \"absolute\",\n      top: \"0\",\n      right: \"0\",\n      bottom: \"0\",\n      left: \"0\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      w: \"100%\",\n      h: \"100%\"\n    },\n    ...styles.container,\n    ...__css\n  };\n  return /* @__PURE__ */jsx(ui.div, {\n    ref,\n    className: cx(\"ui-color-swatch\", className),\n    ...(isRounded ? {\n      rounded: \"fallback(full, 9999px)\"\n    } : {}),\n    __css: css,\n    ...rest,\n    children: /* @__PURE__ */jsx(ui.div, {\n      ...(isRounded ? {\n        rounded: \"fallback(full, 9999px)\"\n      } : {}),\n      children: overlays.map((props2, index) => /* @__PURE__ */jsx(ui.div, {\n        __css: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          ...styles.overlay\n        },\n        ...(isRounded ? {\n          rounded: \"fallback(full, 9999px)\"\n        } : {}),\n        ...props2\n      }, index))\n    })\n  });\n});\nexport { ColorSwatch };","map":{"version":3,"names":["ui","forwardRef","omitThemeProps","useMultiComponentStyle","cx","jsx","defaultOverlays","background","withShadow","overlays","bgImage","bgSize","bgPosition","var","__prefix","name","token","value","boxShadow","ColorSwatch","props","ref","styles","mergedProps","className","color","isRounded","__css","rest","css","position","_before","content","display","h","pb","overflow","top","right","bottom","left","justifyContent","alignItems","w","container","div","rounded","children","map","props2","index","overlay"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\color-picker\\src\\color-swatch.tsx"],"sourcesContent":["import {\n  ui,\n  forwardRef,\n  omitThemeProps,\n  useMultiComponentStyle,\n} from \"@yamada-ui/core\"\nimport type { CSSUIObject, HTMLUIProps, ThemeProps } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\n\nconst defaultOverlays = (\n  background: string,\n  withShadow: boolean,\n): HTMLUIProps<\"div\">[] => {\n  let overlays: HTMLUIProps<\"div\">[] = [\n    {\n      bgImage:\n        \"linear-gradient(45deg, var(--ui-checkers) 25%, transparent 25%), linear-gradient(-45deg, var(--ui-checkers) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, var(--ui-checkers) 75%), linear-gradient(-45deg, var(--ui-body) 75%, var(--ui-checkers) 75%)\",\n      bgSize: `8px 8px`,\n      bgPosition: `0 0, 0 4px, 4px -4px, -4px 0`,\n      var: [\n        {\n          __prefix: \"ui\",\n          name: \"checkers\",\n          token: \"colors\",\n          value: [\"blackAlpha.300\", \"whiteAlpha.300\"],\n        },\n        {\n          __prefix: \"ui\",\n          name: \"body\",\n          token: \"colors\",\n          value: [\"whiteAlpha.500\", \"blackAlpha.500\"],\n        },\n      ],\n    },\n    { background },\n  ]\n\n  if (withShadow)\n    overlays = [\n      ...overlays,\n      {\n        boxShadow: `rgba(0, 0, 0, .1) 0 0 0 1px inset, rgb(0, 0, 0, .15) 0 0 4px inset`,\n      },\n    ]\n\n  return overlays\n}\n\ntype ColorSwatchOptions = {\n  /**\n   * The color used for the swatch element.\n   *\n   * @default \"#ffffff00\"\n   */\n  color?: string\n  /**\n   * The overlay used for the swatch element.\n   */\n  overlays?: HTMLUIProps<\"div\">[]\n  /**\n   * If `true`, the swatch element has an inner `box-shadow`.\n   *\n   * @default true\n   */\n  withShadow?: boolean\n  /**\n   * If `true`, the color swatch will be perfectly round. Else, it'll be slightly round.\n   *\n   * @default false\n   */\n  isRounded?: boolean\n}\n\nexport type ColorSwatchProps = Omit<HTMLUIProps<\"div\">, \"color\"> &\n  ThemeProps<\"ColorSwatch\"> &\n  ColorSwatchOptions\n\n/**\n * `ColorSwatch` is a component that displays color samples.\n *\n * @see Docs https://yamada-ui.com/components/data-display/color-swatch\n */\nexport const ColorSwatch = forwardRef<ColorSwatchProps, \"div\">((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"ColorSwatch\", props)\n  const {\n    className,\n    color = \"#ffffff00\",\n    withShadow = true,\n    overlays = defaultOverlays(color, withShadow),\n    isRounded,\n    __css,\n    ...rest\n  } = omitThemeProps(mergedProps)\n\n  const css: CSSUIObject = {\n    position: \"relative\",\n    _before: {\n      content: `\"\"`,\n      display: \"block\",\n      h: 0,\n      pb: \"100%\",\n    },\n    \"& > *\": {\n      overflow: \"hidden\",\n      position: \"absolute\",\n      top: \"0\",\n      right: \"0\",\n      bottom: \"0\",\n      left: \"0\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      w: \"100%\",\n      h: \"100%\",\n    },\n    ...styles.container,\n    ...__css,\n  }\n\n  return (\n    <ui.div\n      ref={ref}\n      className={cx(\"ui-color-swatch\", className)}\n      {...(isRounded ? { rounded: \"fallback(full, 9999px)\" } : {})}\n      __css={css}\n      {...rest}\n    >\n      <ui.div {...(isRounded ? { rounded: \"fallback(full, 9999px)\" } : {})}>\n        {overlays.map((props, index) => (\n          <ui.div\n            key={index}\n            __css={{\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              ...styles.overlay,\n            }}\n            {...(isRounded ? { rounded: \"fallback(full, 9999px)\" } : {})}\n            {...props}\n          />\n        ))}\n      </ui.div>\n    </ui.div>\n  )\n})\n"],"mappings":";;;AAAA,SACEA,EAAA,EACAC,UAAA,EACAC,cAAA,EACAC,sBAAA,QACK;AAEP,SAASC,EAAA,QAAU;AA0HT,SAAAC,GAAA;AAxHV,IAAMC,eAAA,GAAkBA,CACtBC,UAAA,EACAC,UAAA,KACyB;EACzB,IAAIC,QAAA,GAAiC,CACnC;IACEC,OAAA,EACE;IACFC,MAAA,EAAQ;IACRC,UAAA,EAAY;IACZC,GAAA,EAAK,CACH;MACEC,QAAA,EAAU;MACVC,IAAA,EAAM;MACNC,KAAA,EAAO;MACPC,KAAA,EAAO,CAAC,kBAAkB,gBAAgB;IAC5C,GACA;MACEH,QAAA,EAAU;MACVC,IAAA,EAAM;MACNC,KAAA,EAAO;MACPC,KAAA,EAAO,CAAC,kBAAkB,gBAAgB;IAC5C;EAEJ,GACA;IAAEV;EAAW,EACf;EAEA,IAAIC,UAAA,EACFC,QAAA,GAAW,CACT,GAAGA,QAAA,EACH;IACES,SAAA,EAAW;EACb,EACF;EAEF,OAAOT,QAAA;AACT;AAoCO,IAAMU,WAAA,GAAclB,UAAA,CAAoC,CAACmB,KAAA,EAAOC,GAAA,KAAQ;EAC7E,MAAM,CAACC,MAAA,EAAQC,WAAW,IAAIpB,sBAAA,CAAuB,eAAeiB,KAAK;EACzE,MAAM;IACJI,SAAA;IACAC,KAAA,GAAQ;IACRjB,UAAA,GAAa;IACbC,QAAA,GAAWH,eAAA,CAAgBmB,KAAA,EAAOjB,UAAU;IAC5CkB,SAAA;IACAC,KAAA;IACA,GAAGC;EACL,IAAI1B,cAAA,CAAeqB,WAAW;EAE9B,MAAMM,GAAA,GAAmB;IACvBC,QAAA,EAAU;IACVC,OAAA,EAAS;MACPC,OAAA,EAAS;MACTC,OAAA,EAAS;MACTC,CAAA,EAAG;MACHC,EAAA,EAAI;IACN;IACA,SAAS;MACPC,QAAA,EAAU;MACVN,QAAA,EAAU;MACVO,GAAA,EAAK;MACLC,KAAA,EAAO;MACPC,MAAA,EAAQ;MACRC,IAAA,EAAM;MACNP,OAAA,EAAS;MACTQ,cAAA,EAAgB;MAChBC,UAAA,EAAY;MACZC,CAAA,EAAG;MACHT,CAAA,EAAG;IACL;IACA,GAAGZ,MAAA,CAAOsB,SAAA;IACV,GAAGjB;EACL;EAEA,OACE,eAAAtB,GAAA,CAACL,EAAA,CAAG6C,GAAA,EAAH;IACCxB,GAAA;IACAG,SAAA,EAAWpB,EAAA,CAAG,mBAAmBoB,SAAS;IACzC,IAAIE,SAAA,GAAY;MAAEoB,OAAA,EAAS;IAAyB,IAAI,CAAC;IAC1DnB,KAAA,EAAOE,GAAA;IACN,GAAGD,IAAA;IAEJmB,QAAA,iBAAA1C,GAAA,CAACL,EAAA,CAAG6C,GAAA,EAAH;MAAQ,IAAInB,SAAA,GAAY;QAAEoB,OAAA,EAAS;MAAyB,IAAI,CAAC;MAC/DC,QAAA,EAAAtC,QAAA,CAASuC,GAAA,CAAI,CAACC,MAAA,EAAOC,KAAA,KACpB,eAAA7C,GAAA,CAACL,EAAA,CAAG6C,GAAA,EAAH;QAEClB,KAAA,EAAO;UACLG,QAAA,EAAU;UACVO,GAAA,EAAK;UACLG,IAAA,EAAM;UACNF,KAAA,EAAO;UACPC,MAAA,EAAQ;UACR,GAAGjB,MAAA,CAAO6B;QACZ;QACC,IAAIzB,SAAA,GAAY;UAAEoB,OAAA,EAAS;QAAyB,IAAI,CAAC;QACzD,GAAGG;MAAA,GAVCC,KAWP,CACD;IAAA,CACH;EAAA,CACF;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
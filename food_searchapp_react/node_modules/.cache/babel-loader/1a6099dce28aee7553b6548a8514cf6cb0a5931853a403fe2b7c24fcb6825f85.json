{"ast":null,"code":"\"use client\";\n\n// src/index.ts\nimport { useEventListener } from \"@yamada-ui/use-event-listener\";\nimport { getActiveElement, getAllFocusable, isRefObject, isTabbable, useSafeLayoutEffect, useUpdateEffect, isSafari } from \"@yamada-ui/utils\";\nimport { useCallback, useRef } from \"react\";\nvar preventReturnFocus = containerRef => {\n  const el = containerRef.current;\n  if (!el) return false;\n  const activeElement = getActiveElement(el);\n  if (!activeElement) return false;\n  if (el.contains(activeElement)) return false;\n  if (isTabbable(activeElement)) return true;\n  return false;\n};\nvar useFocusOnHide = (containerRef, {\n  shouldFocus: shouldFocusProp,\n  visible,\n  focusRef\n}) => {\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus) return;\n    if (preventReturnFocus(containerRef)) return;\n    const el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n    if (el) {\n      requestAnimationFrame(() => {\n        el.focus();\n      });\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n};\nvar useFocusOnShow = (target, {\n  focusRef,\n  preventScroll,\n  shouldFocus,\n  visible\n} = {\n  preventScroll: true,\n  shouldFocus: false\n}) => {\n  const element = isRefObject(target) ? target.current : target;\n  const autoFocusValue = shouldFocus && visible;\n  const autoFocusRef = useRef(autoFocusValue);\n  const lastVisibleRef = useRef(visible);\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) autoFocusRef.current = autoFocusValue;\n    lastVisibleRef.current = visible;\n  }, [visible, autoFocusValue]);\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current) return;\n    autoFocusRef.current = false;\n    if (element.contains(document.activeElement)) return;\n    if (focusRef == null ? void 0 : focusRef.current) {\n      requestAnimationFrame(() => {\n        var _a;\n        (_a = focusRef.current) == null ? void 0 : _a.focus({\n          preventScroll\n        });\n      });\n    } else {\n      const tabbableEls = getAllFocusable(element);\n      if (tabbableEls.length > 0) requestAnimationFrame(() => {\n        tabbableEls[0].focus({\n          preventScroll\n        });\n      });\n    }\n  }, [visible, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(element, \"transitionend\", onFocus);\n};\nvar useFocusOnPointerDown = ({\n  ref,\n  elements,\n  enabled\n}) => {\n  const doc = () => {\n    var _a, _b;\n    return (_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument) != null ? _b : document;\n  };\n  useEventListener(doc, \"pointerdown\", ev => {\n    if (!isSafari() || !enabled) return;\n    const target = ev.target;\n    const els = elements != null ? elements : [ref];\n    const isValidTarget = els.some(elementOrRef => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef;\n      return (el == null ? void 0 : el.contains(target)) || el === target;\n    });\n    if (doc().activeElement !== target && isValidTarget) {\n      ev.preventDefault();\n      target.focus();\n    }\n  });\n};\nexport { useFocusOnHide, useFocusOnPointerDown, useFocusOnShow };","map":{"version":3,"names":["useEventListener","getActiveElement","getAllFocusable","isRefObject","isTabbable","useSafeLayoutEffect","useUpdateEffect","isSafari","useCallback","useRef","preventReturnFocus","containerRef","el","current","activeElement","contains","useFocusOnHide","shouldFocus","shouldFocusProp","visible","focusRef","requestAnimationFrame","focus","useFocusOnShow","target","preventScroll","element","autoFocusValue","autoFocusRef","lastVisibleRef","onFocus","document","_a","tabbableEls","length","useFocusOnPointerDown","ref","elements","enabled","doc","_b","ownerDocument","ev","els","isValidTarget","some","elementOrRef","preventDefault"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\use-focus\\src\\index.ts"],"sourcesContent":["import { useEventListener } from \"@yamada-ui/use-event-listener\"\nimport type { FocusableElement } from \"@yamada-ui/utils\"\nimport {\n  getActiveElement,\n  getAllFocusable,\n  isRefObject,\n  isTabbable,\n  useSafeLayoutEffect,\n  useUpdateEffect,\n  isSafari,\n} from \"@yamada-ui/utils\"\nimport type { RefObject } from \"react\"\nimport { useCallback, useRef } from \"react\"\n\nexport type UseFocusOnHideProps = {\n  focusRef: RefObject<FocusableElement>\n  shouldFocus?: boolean\n  visible?: boolean\n}\n\nconst preventReturnFocus = (containerRef: React.RefObject<HTMLElement>) => {\n  const el = containerRef.current\n\n  if (!el) return false\n\n  const activeElement = getActiveElement(el)\n\n  if (!activeElement) return false\n  if (el.contains(activeElement)) return false\n  if (isTabbable(activeElement)) return true\n\n  return false\n}\n\nexport const useFocusOnHide = (\n  containerRef: RefObject<HTMLElement>,\n  { shouldFocus: shouldFocusProp, visible, focusRef }: UseFocusOnHideProps,\n) => {\n  const shouldFocus = shouldFocusProp && !visible\n\n  useUpdateEffect(() => {\n    if (!shouldFocus) return\n\n    if (preventReturnFocus(containerRef)) return\n\n    const el = focusRef?.current || containerRef.current\n\n    if (el) {\n      requestAnimationFrame(() => {\n        el.focus()\n      })\n    }\n  }, [shouldFocus, containerRef, focusRef])\n}\n\nexport type UseFocusOnShowProps = {\n  visible?: boolean\n  shouldFocus?: boolean\n  preventScroll?: boolean\n  focusRef?: React.RefObject<FocusableElement>\n}\n\nexport const useFocusOnShow = <T extends HTMLElement>(\n  target: React.RefObject<T> | T,\n  { focusRef, preventScroll, shouldFocus, visible }: UseFocusOnShowProps = {\n    preventScroll: true,\n    shouldFocus: false,\n  },\n) => {\n  const element = isRefObject(target) ? target.current : target\n\n  const autoFocusValue = shouldFocus && visible\n  const autoFocusRef = useRef(autoFocusValue)\n  const lastVisibleRef = useRef(visible)\n\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible)\n      autoFocusRef.current = autoFocusValue\n\n    lastVisibleRef.current = visible\n  }, [visible, autoFocusValue])\n\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current) return\n\n    autoFocusRef.current = false\n\n    if (element.contains(document.activeElement as HTMLElement)) return\n\n    if (focusRef?.current) {\n      requestAnimationFrame(() => {\n        focusRef.current?.focus({ preventScroll })\n      })\n    } else {\n      const tabbableEls = getAllFocusable(element)\n\n      if (tabbableEls.length > 0)\n        requestAnimationFrame(() => {\n          tabbableEls[0].focus({ preventScroll })\n        })\n    }\n  }, [visible, preventScroll, element, focusRef])\n\n  useUpdateEffect(() => {\n    onFocus()\n  }, [onFocus])\n\n  useEventListener(element, \"transitionend\", onFocus)\n}\n\nexport type UseFocusOnMouseDownProps = {\n  ref: React.RefObject<HTMLElement>\n  enabled?: boolean\n  elements?: Array<React.RefObject<HTMLElement> | HTMLElement | null>\n}\n\nexport const useFocusOnPointerDown = ({\n  ref,\n  elements,\n  enabled,\n}: UseFocusOnMouseDownProps) => {\n  const doc = () => ref.current?.ownerDocument ?? document\n\n  useEventListener(doc, \"pointerdown\", (ev) => {\n    if (!isSafari() || !enabled) return\n    const target = ev.target as HTMLElement\n\n    const els = elements ?? [ref]\n\n    const isValidTarget = els.some((elementOrRef) => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef\n      return el?.contains(target) || el === target\n    })\n\n    if (doc().activeElement !== target && isValidTarget) {\n      ev.preventDefault()\n\n      target.focus()\n    }\n  })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
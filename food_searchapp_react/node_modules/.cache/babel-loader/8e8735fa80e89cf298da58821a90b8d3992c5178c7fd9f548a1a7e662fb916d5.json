{"ast":null,"code":"\"use client\";\n\nimport { useButtonGroup } from \"./chunk-QEKFZB7J.mjs\";\n\n// src/button.tsx\nimport { ui, forwardRef, useComponentStyle, omitThemeProps } from \"@yamada-ui/core\";\nimport { Loading as LoadingIcon } from \"@yamada-ui/loading\";\nimport { Ripple, useRipple } from \"@yamada-ui/ripple\";\nimport { cx, merge, dataAttr, mergeRefs } from \"@yamada-ui/utils\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  const group = useButtonGroup();\n  const [styles, mergedProps] = useComponentStyle(\"Button\", {\n    ...group,\n    ...props\n  });\n  const {\n    className,\n    as,\n    type,\n    isRounded,\n    isLoading,\n    isActive,\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    leftIcon,\n    rightIcon,\n    loadingIcon,\n    loadingText,\n    loadingPlacement = \"start\",\n    disableRipple,\n    __css,\n    ...rest\n  } = omitThemeProps(mergedProps);\n  const trulyDisabled = isDisabled || isLoading;\n  const {\n    ref: buttonRef,\n    type: defaultType\n  } = useButtonType(as);\n  const {\n    onPointerDown,\n    ...rippleProps\n  } = useRipple({\n    ...rest,\n    isDisabled: disableRipple || trulyDisabled\n  });\n  const css = useMemo(() => {\n    var _a;\n    const _focus = \"_focus\" in styles ? merge((_a = styles._focus) != null ? _a : {}, {\n      zIndex: \"fallback(yamcha, 1)\"\n    }) : {};\n    return {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      gap: \"fallback(2, 0.5rem)\",\n      appearance: \"none\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      overflow: \"hidden\",\n      outline: \"none\",\n      ...styles,\n      ...__css,\n      ...(!!group ? {\n        _focus\n      } : {}),\n      ...(isRounded ? {\n        borderRadius: \"fallback(full, 9999px)\"\n      } : {})\n    };\n  }, [styles, __css, group, isRounded]);\n  const contentProps = {\n    leftIcon,\n    rightIcon,\n    children\n  };\n  const loadingProps = {\n    loadingIcon,\n    loadingText\n  };\n  return /* @__PURE__ */jsxs(ui.button, {\n    ref: mergeRefs(ref, buttonRef),\n    as,\n    className: cx(\"ui-button\", className),\n    type: type != null ? type : defaultType,\n    disabled: trulyDisabled,\n    \"data-active\": dataAttr(isActive),\n    \"data-loading\": dataAttr(isLoading),\n    __css: css,\n    ...rest,\n    onPointerDown,\n    children: [isLoading && loadingPlacement === \"start\" ? /* @__PURE__ */jsx(Loading, {\n      className: \"ui-button__loading--start\",\n      ...loadingProps\n    }) : null, isLoading ? loadingText || /* @__PURE__ */jsx(ui.span, {\n      opacity: 0,\n      children: /* @__PURE__ */jsx(Content, {\n        ...contentProps\n      })\n    }) : /* @__PURE__ */jsx(Content, {\n      ...contentProps\n    }), isLoading && loadingPlacement === \"end\" ? /* @__PURE__ */jsx(Loading, {\n      className: \"ui-button__loading--end\",\n      ...loadingProps\n    }) : null, /* @__PURE__ */jsx(Ripple, {\n      isDisabled: disableRipple || trulyDisabled,\n      ...rippleProps\n    })]\n  });\n});\nvar Loading = ({\n  className,\n  loadingIcon,\n  loadingText\n}) => {\n  const css = useMemo(() => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    position: loadingText ? \"relative\" : \"absolute\",\n    fontSize: \"1em\",\n    lineHeight: \"normal\"\n  }), [loadingText]);\n  const element = useMemo(() => {\n    if (typeof loadingIcon === \"string\") {\n      return /* @__PURE__ */jsx(LoadingIcon, {\n        color: \"current\",\n        variant: loadingIcon\n      });\n    } else {\n      return loadingIcon || /* @__PURE__ */jsx(LoadingIcon, {\n        color: \"current\"\n      });\n    }\n  }, [loadingIcon]);\n  return /* @__PURE__ */jsx(ui.div, {\n    className: cx(\"ui-button__loading\", className),\n    __css: css,\n    children: element\n  });\n};\nvar Content = ({\n  leftIcon,\n  rightIcon,\n  children\n}) => {\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [leftIcon ? /* @__PURE__ */jsx(Icon, {\n      children: leftIcon\n    }) : null, children, rightIcon ? /* @__PURE__ */jsx(Icon, {\n      children: rightIcon\n    }) : null]\n  });\n};\nvar Icon = ({\n  children,\n  className,\n  ...rest\n}) => {\n  return /* @__PURE__ */jsx(ui.span, {\n    className: cx(\"ui-button__icon\", className),\n    display: \"inline-flex\",\n    alignSelf: \"center\",\n    flexShrink: 0,\n    \"aria-hidden\": true,\n    ...rest,\n    children\n  });\n};\nvar useButtonType = value => {\n  const isButton = useRef(!value);\n  const ref = useCallback(node => {\n    if (node) isButton.current = node.tagName === \"BUTTON\";\n  }, []);\n  const type = isButton.current ? \"button\" : void 0;\n  return {\n    ref,\n    type\n  };\n};\nexport { Button, useButtonType };","map":{"version":3,"names":["ui","forwardRef","useComponentStyle","omitThemeProps","Loading","LoadingIcon","Ripple","useRipple","cx","merge","dataAttr","mergeRefs","useCallback","useMemo","useRef","Fragment","jsx","jsxs","Button","children","props","ref","group","useButtonGroup","styles","mergedProps","className","as","type","isRounded","isLoading","isActive","isDisabled","leftIcon","rightIcon","loadingIcon","loadingText","loadingPlacement","disableRipple","__css","rest","trulyDisabled","buttonRef","defaultType","useButtonType","onPointerDown","rippleProps","css","_a","_focus","zIndex","display","alignItems","justifyContent","gap","appearance","userSelect","position","whiteSpace","verticalAlign","overflow","outline","borderRadius","contentProps","loadingProps","button","disabled","span","opacity","Content","fontSize","lineHeight","element","color","variant","div","Icon","alignSelf","flexShrink","value","isButton","node","current","tagName"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\button\\src\\button.tsx"],"sourcesContent":["import type { HTMLUIProps, ThemeProps, CSSUIObject } from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport type { LoadingProps } from \"@yamada-ui/loading\"\nimport { Loading as LoadingIcon } from \"@yamada-ui/loading\"\nimport { Ripple, useRipple } from \"@yamada-ui/ripple\"\nimport { cx, merge, dataAttr, mergeRefs } from \"@yamada-ui/utils\"\nimport type { ElementType, FC, ReactElement } from \"react\"\nimport { useCallback, useMemo, useRef } from \"react\"\nimport { useButtonGroup } from \"./button-group\"\n\ntype ButtonOptions = {\n  /**\n   * The type of button. Accepts `button`, `reset`, or `submit`.\n   *\n   * @default 'button'\n   */\n  type?: \"button\" | \"reset\" | \"submit\"\n  /**\n   * If true, the button is full rounded. Else, it'll be slightly round.\n   *\n   * @default false\n   */\n  isRounded?: boolean\n  /**\n   * If `true`, the loading state of the button is represented.\n   *\n   * @default false\n   */\n  isLoading?: boolean\n  /**\n   * If `true`, the button is represented as active.\n   *\n   * @default false\n   */\n  isActive?: boolean\n  /**\n   * If `true`, the button is disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * The icon to display at the left side of the button.\n   */\n  leftIcon?: ReactElement\n  /**\n   * The icon to display at the right side of the button.\n   */\n  rightIcon?: ReactElement\n  /**\n   * The icon to display when the button is loading.\n   */\n  loadingIcon?: ReactElement | LoadingProps[\"variant\"]\n  /**\n   * The text to display when the button is loading.\n   */\n  loadingText?: string\n  /**\n   * The placement of the loading indicator. Accepts `start` or `end`.\n   *\n   * @default 'start'\n   */\n  loadingPlacement?: \"start\" | \"end\"\n  /**\n   * If `true`, disable ripple effects when pressing a element.\n   *\n   * @default false\n   */\n  disableRipple?: boolean\n}\n\nexport type ButtonProps = HTMLUIProps<\"button\"> &\n  ThemeProps<\"Button\"> &\n  ButtonOptions\n\n/**\n * `Button` is an interactive component that allows users to perform actions such as submitting forms and toggling modals.\n *\n * @see Docs https://yamada-ui.com/components/forms/button\n */\nexport const Button = forwardRef<ButtonProps, \"button\">(\n  ({ children, ...props }, ref) => {\n    const group = useButtonGroup()\n    const [styles, mergedProps] = useComponentStyle(\"Button\", {\n      ...group,\n      ...props,\n    })\n    const {\n      className,\n      as,\n      type,\n      isRounded,\n      isLoading,\n      isActive,\n      isDisabled = group?.isDisabled,\n      leftIcon,\n      rightIcon,\n      loadingIcon,\n      loadingText,\n      loadingPlacement = \"start\",\n      disableRipple,\n      __css,\n      ...rest\n    } = omitThemeProps(mergedProps)\n\n    const trulyDisabled = isDisabled || isLoading\n\n    const { ref: buttonRef, type: defaultType } = useButtonType(as)\n    const { onPointerDown, ...rippleProps } = useRipple({\n      ...rest,\n      isDisabled: disableRipple || trulyDisabled,\n    })\n\n    const css: CSSUIObject = useMemo(() => {\n      const _focus =\n        \"_focus\" in styles\n          ? merge(styles._focus ?? {}, { zIndex: \"fallback(yamcha, 1)\" })\n          : {}\n\n      return {\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        gap: \"fallback(2, 0.5rem)\",\n        appearance: \"none\",\n        userSelect: \"none\",\n        position: \"relative\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        overflow: \"hidden\",\n        outline: \"none\",\n        ...styles,\n        ...__css,\n        ...(!!group ? { _focus } : {}),\n        ...(isRounded ? { borderRadius: \"fallback(full, 9999px)\" } : {}),\n      }\n    }, [styles, __css, group, isRounded])\n\n    const contentProps = {\n      leftIcon,\n      rightIcon,\n      children,\n    }\n\n    const loadingProps = {\n      loadingIcon,\n      loadingText,\n    }\n\n    return (\n      <ui.button\n        ref={mergeRefs(ref, buttonRef)}\n        as={as}\n        className={cx(\"ui-button\", className)}\n        type={type ?? defaultType}\n        disabled={trulyDisabled}\n        data-active={dataAttr(isActive)}\n        data-loading={dataAttr(isLoading)}\n        __css={css}\n        {...rest}\n        onPointerDown={onPointerDown}\n      >\n        {isLoading && loadingPlacement === \"start\" ? (\n          <Loading className=\"ui-button__loading--start\" {...loadingProps} />\n        ) : null}\n\n        {isLoading ? (\n          loadingText || (\n            <ui.span opacity={0}>\n              <Content {...contentProps} />\n            </ui.span>\n          )\n        ) : (\n          <Content {...contentProps} />\n        )}\n\n        {isLoading && loadingPlacement === \"end\" ? (\n          <Loading className=\"ui-button__loading--end\" {...loadingProps} />\n        ) : null}\n\n        <Ripple isDisabled={disableRipple || trulyDisabled} {...rippleProps} />\n      </ui.button>\n    )\n  },\n)\n\nconst Loading: FC<\n  Pick<ButtonProps, \"className\" | \"loadingIcon\" | \"loadingText\">\n> = ({ className, loadingIcon, loadingText }) => {\n  const css = useMemo(\n    (): CSSUIObject => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: loadingText ? \"relative\" : \"absolute\",\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n    }),\n    [loadingText],\n  )\n\n  const element = useMemo(() => {\n    if (typeof loadingIcon === \"string\") {\n      return <LoadingIcon color=\"current\" variant={loadingIcon} />\n    } else {\n      return loadingIcon || <LoadingIcon color=\"current\" />\n    }\n  }, [loadingIcon])\n\n  return (\n    <ui.div className={cx(\"ui-button__loading\", className)} __css={css}>\n      {element}\n    </ui.div>\n  )\n}\n\nconst Content: FC<Pick<ButtonProps, \"leftIcon\" | \"rightIcon\" | \"children\">> = ({\n  leftIcon,\n  rightIcon,\n  children,\n}) => {\n  return (\n    <>\n      {leftIcon ? <Icon>{leftIcon}</Icon> : null}\n      {children}\n      {rightIcon ? <Icon>{rightIcon}</Icon> : null}\n    </>\n  )\n}\n\nconst Icon: FC<HTMLUIProps<\"span\">> = ({ children, className, ...rest }) => {\n  return (\n    <ui.span\n      className={cx(\"ui-button__icon\", className)}\n      display=\"inline-flex\"\n      alignSelf=\"center\"\n      flexShrink={0}\n      aria-hidden={true}\n      {...rest}\n    >\n      {children}\n    </ui.span>\n  )\n}\n\nexport const useButtonType = (value?: ElementType) => {\n  const isButton = useRef(!value)\n\n  const ref = useCallback((node: HTMLElement | null) => {\n    if (node) isButton.current = node.tagName === \"BUTTON\"\n  }, [])\n\n  const type = isButton.current ? \"button\" : undefined\n\n  return { ref, type } as const\n}\n"],"mappings":";;;;;AACA,SACEA,EAAA,EACAC,UAAA,EACAC,iBAAA,EACAC,cAAA,QACK;AAEP,SAASC,OAAA,IAAWC,WAAA,QAAmB;AACvC,SAASC,MAAA,EAAQC,SAAA,QAAiB;AAClC,SAASC,EAAA,EAAIC,KAAA,EAAOC,QAAA,EAAUC,SAAA,QAAiB;AAE/C,SAASC,WAAA,EAAaC,OAAA,EAASC,MAAA,QAAc;AA+IvC,SAuEFC,QAAA,EA1DMC,GAAA,EAbJC,IAAA;AAtEC,IAAMC,MAAA,GAASjB,UAAA,CACpB,CAAC;EAAEkB,QAAA;EAAU,GAAGC;AAAM,GAAGC,GAAA,KAAQ;EAC/B,MAAMC,KAAA,GAAQC,cAAA,CAAe;EAC7B,MAAM,CAACC,MAAA,EAAQC,WAAW,IAAIvB,iBAAA,CAAkB,UAAU;IACxD,GAAGoB,KAAA;IACH,GAAGF;EACL,CAAC;EACD,MAAM;IACJM,SAAA;IACAC,EAAA;IACAC,IAAA;IACAC,SAAA;IACAC,SAAA;IACAC,QAAA;IACAC,UAAA,GAAaV,KAAA,oBAAAA,KAAA,CAAOU,UAAA;IACpBC,QAAA;IACAC,SAAA;IACAC,WAAA;IACAC,WAAA;IACAC,gBAAA,GAAmB;IACnBC,aAAA;IACAC,KAAA;IACA,GAAGC;EACL,IAAIrC,cAAA,CAAesB,WAAW;EAE9B,MAAMgB,aAAA,GAAgBT,UAAA,IAAcF,SAAA;EAEpC,MAAM;IAAET,GAAA,EAAKqB,SAAA;IAAWd,IAAA,EAAMe;EAAY,IAAIC,aAAA,CAAcjB,EAAE;EAC9D,MAAM;IAAEkB,aAAA;IAAe,GAAGC;EAAY,IAAIvC,SAAA,CAAU;IAClD,GAAGiC,IAAA;IACHR,UAAA,EAAYM,aAAA,IAAiBG;EAC/B,CAAC;EAED,MAAMM,GAAA,GAAmBlC,OAAA,CAAQ,MAAM;IAtH3C,IAAAmC,EAAA;IAuHM,MAAMC,MAAA,GACJ,YAAYzB,MAAA,GACRf,KAAA,EAAMuC,EAAA,GAAAxB,MAAA,CAAOyB,MAAA,KAAP,OAAAD,EAAA,GAAiB,CAAC,GAAG;MAAEE,MAAA,EAAQ;IAAsB,CAAC,IAC5D,CAAC;IAEP,OAAO;MACLC,OAAA,EAAS;MACTC,UAAA,EAAY;MACZC,cAAA,EAAgB;MAChBC,GAAA,EAAK;MACLC,UAAA,EAAY;MACZC,UAAA,EAAY;MACZC,QAAA,EAAU;MACVC,UAAA,EAAY;MACZC,aAAA,EAAe;MACfC,QAAA,EAAU;MACVC,OAAA,EAAS;MACT,GAAGrC,MAAA;MACH,GAAGe,KAAA;MACH,IAAI,CAAC,CAACjB,KAAA,GAAQ;QAAE2B;MAAO,IAAI,CAAC;MAC5B,IAAIpB,SAAA,GAAY;QAAEiC,YAAA,EAAc;MAAyB,IAAI,CAAC;IAChE;EACF,GAAG,CAACtC,MAAA,EAAQe,KAAA,EAAOjB,KAAA,EAAOO,SAAS,CAAC;EAEpC,MAAMkC,YAAA,GAAe;IACnB9B,QAAA;IACAC,SAAA;IACAf;EACF;EAEA,MAAM6C,YAAA,GAAe;IACnB7B,WAAA;IACAC;EACF;EAEA,OACE,eAAAnB,IAAA,CAACjB,EAAA,CAAGiE,MAAA,EAAH;IACC5C,GAAA,EAAKV,SAAA,CAAUU,GAAA,EAAKqB,SAAS;IAC7Bf,EAAA;IACAD,SAAA,EAAWlB,EAAA,CAAG,aAAakB,SAAS;IACpCE,IAAA,EAAMA,IAAA,WAAAA,IAAA,GAAQe,WAAA;IACduB,QAAA,EAAUzB,aAAA;IACV,eAAa/B,QAAA,CAASqB,QAAQ;IAC9B,gBAAcrB,QAAA,CAASoB,SAAS;IAChCS,KAAA,EAAOQ,GAAA;IACN,GAAGP,IAAA;IACJK,aAAA;IAEC1B,QAAA,GAAAW,SAAA,IAAaO,gBAAA,KAAqB,UACjC,eAAArB,GAAA,CAACZ,OAAA;MAAQsB,SAAA,EAAU;MAA6B,GAAGsC;IAAA,CAAc,IAC/D,MAEHlC,SAAA,GACCM,WAAA,IACE,eAAApB,GAAA,CAAChB,EAAA,CAAGmE,IAAA,EAAH;MAAQC,OAAA,EAAS;MAChBjD,QAAA,iBAAAH,GAAA,CAACqD,OAAA;QAAS,GAAGN;MAAA,CAAc;IAAA,CAC7B,IAGF,eAAA/C,GAAA,CAACqD,OAAA;MAAS,GAAGN;IAAA,CAAc,GAG5BjC,SAAA,IAAaO,gBAAA,KAAqB,QACjC,eAAArB,GAAA,CAACZ,OAAA;MAAQsB,SAAA,EAAU;MAA2B,GAAGsC;IAAA,CAAc,IAC7D,MAEJ,eAAAhD,GAAA,CAACV,MAAA;MAAO0B,UAAA,EAAYM,aAAA,IAAiBG,aAAA;MAAgB,GAAGK;IAAA,CAAa;EAAA,CACvE;AAEJ,CACF;AAEA,IAAM1C,OAAA,GAEFA,CAAC;EAAEsB,SAAA;EAAWS,WAAA;EAAaC;AAAY,MAAM;EAC/C,MAAMW,GAAA,GAAMlC,OAAA,CACV,OAAoB;IAClBsC,OAAA,EAAS;IACTC,UAAA,EAAY;IACZK,QAAA,EAAUrB,WAAA,GAAc,aAAa;IACrCkC,QAAA,EAAU;IACVC,UAAA,EAAY;EACd,IACA,CAACnC,WAAW,CACd;EAEA,MAAMoC,OAAA,GAAU3D,OAAA,CAAQ,MAAM;IAC5B,IAAI,OAAOsB,WAAA,KAAgB,UAAU;MACnC,OAAO,eAAAnB,GAAA,CAACX,WAAA;QAAYoE,KAAA,EAAM;QAAUC,OAAA,EAASvC;MAAA,CAAa;IAC5D,OAAO;MACL,OAAOA,WAAA,IAAe,eAAAnB,GAAA,CAACX,WAAA;QAAYoE,KAAA,EAAM;MAAA,CAAU;IACrD;EACF,GAAG,CAACtC,WAAW,CAAC;EAEhB,OACE,eAAAnB,GAAA,CAAChB,EAAA,CAAG2E,GAAA,EAAH;IAAOjD,SAAA,EAAWlB,EAAA,CAAG,sBAAsBkB,SAAS;IAAGa,KAAA,EAAOQ,GAAA;IAC5D5B,QAAA,EAAAqD;EAAA,CACH;AAEJ;AAEA,IAAMH,OAAA,GAAwEA,CAAC;EAC7EpC,QAAA;EACAC,SAAA;EACAf;AACF,MAAM;EACJ,OACE,eAAAF,IAAA,CAAAF,QAAA;IACGI,QAAA,GAAAc,QAAA,GAAW,eAAAjB,GAAA,CAAC4D,IAAA;MAAMzD,QAAA,EAAAc;IAAA,CAAS,IAAU,MACrCd,QAAA,EACAe,SAAA,GAAY,eAAAlB,GAAA,CAAC4D,IAAA;MAAMzD,QAAA,EAAAe;IAAA,CAAU,IAAU;EAAA,CAC1C;AAEJ;AAEA,IAAM0C,IAAA,GAAgCA,CAAC;EAAEzD,QAAA;EAAUO,SAAA;EAAW,GAAGc;AAAK,MAAM;EAC1E,OACE,eAAAxB,GAAA,CAAChB,EAAA,CAAGmE,IAAA,EAAH;IACCzC,SAAA,EAAWlB,EAAA,CAAG,mBAAmBkB,SAAS;IAC1CyB,OAAA,EAAQ;IACR0B,SAAA,EAAU;IACVC,UAAA,EAAY;IACZ,eAAa;IACZ,GAAGtC,IAAA;IAEHrB;EAAA,CACH;AAEJ;AAEO,IAAMyB,aAAA,GAAiBmC,KAAA,IAAwB;EACpD,MAAMC,QAAA,GAAWlE,MAAA,CAAO,CAACiE,KAAK;EAE9B,MAAM1D,GAAA,GAAMT,WAAA,CAAaqE,IAAA,IAA6B;IACpD,IAAIA,IAAA,EAAMD,QAAA,CAASE,OAAA,GAAUD,IAAA,CAAKE,OAAA,KAAY;EAChD,GAAG,EAAE;EAEL,MAAMvD,IAAA,GAAOoD,QAAA,CAASE,OAAA,GAAU,WAAW;EAE3C,OAAO;IAAE7D,GAAA;IAAKO;EAAK;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
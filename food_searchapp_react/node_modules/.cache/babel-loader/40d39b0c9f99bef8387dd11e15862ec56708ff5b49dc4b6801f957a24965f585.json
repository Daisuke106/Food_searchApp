{"ast":null,"code":"\"use client\";\n\n// src/index.ts\nimport { useRef, useEffect, useCallback, useState } from \"react\";\nvar useHover = () => {\n  const [hovered, setHovered] = useState(false);\n  const ref = useRef(null);\n  const onMouseEnter = useCallback(() => setHovered(true), []);\n  const onMouseLeave = useCallback(() => setHovered(false), []);\n  useEffect(() => {\n    const el = ref.current;\n    if (el) {\n      el.addEventListener(\"mouseenter\", onMouseEnter);\n      el.addEventListener(\"mouseleave\", onMouseLeave);\n      return () => {\n        el.removeEventListener(\"mouseenter\", onMouseEnter);\n        el.removeEventListener(\"mouseleave\", onMouseLeave);\n      };\n    }\n  }, [onMouseEnter, onMouseLeave]);\n  return {\n    ref,\n    hovered\n  };\n};\nexport { useHover };","map":{"version":3,"names":["useRef","useEffect","useCallback","useState","useHover","hovered","setHovered","ref","onMouseEnter","onMouseLeave","el","current","addEventListener","removeEventListener"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\use-hover\\src\\index.ts"],"sourcesContent":["import { useRef, useEffect, useCallback, useState } from \"react\"\n\n/**\n * `useHover` is a custom hook that detects whether the pointer has moved over or away from an element.\n *\n * @see Docs https://yamada-ui.com/hooks/use-hover\n */\nexport const useHover = <T extends HTMLElement = HTMLDivElement>() => {\n  const [hovered, setHovered] = useState(false)\n  const ref = useRef<T>(null)\n\n  const onMouseEnter = useCallback(() => setHovered(true), [])\n  const onMouseLeave = useCallback(() => setHovered(false), [])\n\n  useEffect(() => {\n    const el = ref.current\n\n    if (el) {\n      el.addEventListener(\"mouseenter\", onMouseEnter)\n      el.addEventListener(\"mouseleave\", onMouseLeave)\n\n      return () => {\n        el.removeEventListener(\"mouseenter\", onMouseEnter)\n        el.removeEventListener(\"mouseleave\", onMouseLeave)\n      }\n    }\n  }, [onMouseEnter, onMouseLeave])\n\n  return { ref, hovered }\n}\n"],"mappings":";;;AAAA,SAASA,MAAA,EAAQC,SAAA,EAAWC,WAAA,EAAaC,QAAA,QAAgB;AAOlD,IAAMC,QAAA,GAAWA,CAAA,KAA8C;EACpE,MAAM,CAACC,OAAA,EAASC,UAAU,IAAIH,QAAA,CAAS,KAAK;EAC5C,MAAMI,GAAA,GAAMP,MAAA,CAAU,IAAI;EAE1B,MAAMQ,YAAA,GAAeN,WAAA,CAAY,MAAMI,UAAA,CAAW,IAAI,GAAG,EAAE;EAC3D,MAAMG,YAAA,GAAeP,WAAA,CAAY,MAAMI,UAAA,CAAW,KAAK,GAAG,EAAE;EAE5DL,SAAA,CAAU,MAAM;IACd,MAAMS,EAAA,GAAKH,GAAA,CAAII,OAAA;IAEf,IAAID,EAAA,EAAI;MACNA,EAAA,CAAGE,gBAAA,CAAiB,cAAcJ,YAAY;MAC9CE,EAAA,CAAGE,gBAAA,CAAiB,cAAcH,YAAY;MAE9C,OAAO,MAAM;QACXC,EAAA,CAAGG,mBAAA,CAAoB,cAAcL,YAAY;QACjDE,EAAA,CAAGG,mBAAA,CAAoB,cAAcJ,YAAY;MACnD;IACF;EACF,GAAG,CAACD,YAAA,EAAcC,YAAY,CAAC;EAE/B,OAAO;IAAEF,GAAA;IAAKF;EAAQ;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u30C1\\u30FC\\u30E0\\u958B\\u767A\\\\Food_searchApp\\\\food_searchapp_react\\\\src\\\\ResetPass.js\",\n  _s = $RefreshSig$();\n// ResetPass.js\nimport React from 'react';\nimport { Button, Input, FormControl, useLoading } from '@yamada-ui/react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPass() {\n  _s();\n  const {\n    screen\n  } = useLoading();\n  const handleReset = async event => {\n    event.preventDefault();\n    screen.start();\n    try {\n      await new Promise(resolve => setTimeout(resolve, 2000)); // 遅延シミュレーション\n      // ここにパスワードリセットロジックを追加\n    } finally {\n      screen.finish();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5FD8\\u308C\\u305F\\u5834\\u5408\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u3054\\u767B\\u9332\\u3044\\u305F\\u3060\\u3044\\u305F\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u306B\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u518D\\u8A2D\\u5B9A\\u306E\\u305F\\u3081\\u306E\\u8A8D\\u8A3C\\u30B3\\u30FC\\u30C9\\u3092\\u9001\\u308A\\u307E\\u3059\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleReset,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        label: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          placeholder: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"\\u8A8D\\u8A3C\\u30B3\\u30FC\\u30C9\\u3092\\u9001\\u4FE1\\u3059\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\u623B\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPass, \"t1ZBGwqOhjCIGf9+oqWFiOSvgVs=\", false, function () {\n  return [useLoading];\n});\n_c = ResetPass;\nexport default ResetPass;\nvar _c;\n$RefreshReg$(_c, \"ResetPass\");","map":{"version":3,"names":["React","Button","Input","FormControl","useLoading","Link","jsxDEV","_jsxDEV","ResetPass","_s","screen","handleReset","event","preventDefault","start","Promise","resolve","setTimeout","finish","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","type","placeholder","to","_c","$RefreshReg$"],"sources":["C:/チーム開発/Food_searchApp/food_searchapp_react/src/ResetPass.js"],"sourcesContent":["// ResetPass.js\r\nimport React from 'react';\r\nimport { Button, Input, FormControl, useLoading } from '@yamada-ui/react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ResetPass() {\r\n    const { screen } = useLoading();\r\n\r\n    const handleReset = async (event) => {\r\n        event.preventDefault();\r\n        screen.start();\r\n\r\n        try {\r\n            await new Promise(resolve => setTimeout(resolve, 2000)); // 遅延シミュレーション\r\n            // ここにパスワードリセットロジックを追加\r\n        } finally {\r\n            screen.finish();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>パスワードを忘れた場合</h1>\r\n            <p>ご登録いただいたメールアドレスにパスワード再設定のための認証コードを送ります</p>\r\n            <form onSubmit={handleReset}>\r\n                <FormControl label=\"メールアドレス\">\r\n                    <Input type='email' placeholder='メールアドレス' />\r\n                </FormControl>\r\n                <Button type='submit'>認証コードを送信する</Button>\r\n            </form>\r\n            <Link to=\"/\"><Button>戻る</Button></Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPass;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,UAAU,QAAQ,kBAAkB;AACzE,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAO,CAAC,GAAGN,UAAU,CAAC,CAAC;EAE/B,MAAMO,WAAW,GAAG,MAAOC,KAAK,IAAK;IACjCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBH,MAAM,CAACI,KAAK,CAAC,CAAC;IAEd,IAAI;MACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;MACzD;IACJ,CAAC,SAAS;MACNN,MAAM,CAACQ,MAAM,CAAC,CAAC;IACnB;EACJ,CAAC;EAED,oBACIX,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBhB,OAAA;MAAAY,QAAA,EAAG;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC7ChB,OAAA;MAAMiB,QAAQ,EAAEb,WAAY;MAAAQ,QAAA,gBACxBZ,OAAA,CAACJ,WAAW;QAACsB,KAAK,EAAC,4CAAS;QAAAN,QAAA,eACxBZ,OAAA,CAACL,KAAK;UAACwB,IAAI,EAAC,OAAO;UAACC,WAAW,EAAC;QAAS;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACdhB,OAAA,CAACN,MAAM;QAACyB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACPhB,OAAA,CAACF,IAAI;MAACuB,EAAE,EAAC,GAAG;MAAAT,QAAA,eAACZ,OAAA,CAACN,MAAM;QAAAkB,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEd;AAACd,EAAA,CA5BQD,SAAS;EAAA,QACKJ,UAAU;AAAA;AAAAyB,EAAA,GADxBrB,SAAS;AA8BlB,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
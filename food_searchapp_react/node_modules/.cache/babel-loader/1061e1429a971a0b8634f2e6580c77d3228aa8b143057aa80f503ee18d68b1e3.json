{"ast":null,"code":"\"use client\";\n\n// src/breadcrumb.tsx\nimport { ui, forwardRef, omitThemeProps, useMultiComponentStyle } from \"@yamada-ui/core\";\nimport { Icon } from \"@yamada-ui/icon\";\nimport { cx, createContext, getValidChildren } from \"@yamada-ui/utils\";\nimport { cloneElement } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar [BreadcrumbProvider, useBreadcrumb] = createContext({\n  name: \"BreadcrumbContext\",\n  errorMessage: \"useBreadcrumb returned is 'undefined'. Seems you forgot to wrap the components in \\\"<Breadcrumb />\\\" \"\n});\nvar Breadcrumb = forwardRef((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"Breadcrumb\", props);\n  const {\n    className,\n    children,\n    separator = \"/\",\n    gap = \"fallback(2, 0.5rem)\",\n    listProps,\n    ...rest\n  } = omitThemeProps(mergedProps);\n  const css = {\n    display: \"flex\",\n    alignItems: \"center\",\n    ...styles.list\n  };\n  const validChildren = getValidChildren(children);\n  const count = validChildren.length;\n  const cloneChildren = validChildren.map((child, index) => cloneElement(child, {\n    separator,\n    gap,\n    isLastChild: count === index + 1\n  }));\n  return /* @__PURE__ */jsx(BreadcrumbProvider, {\n    value: styles,\n    children: /* @__PURE__ */jsx(ui.nav, {\n      ref,\n      className: cx(\"ui-breadcrumb\", className),\n      __css: styles.container,\n      ...rest,\n      children: /* @__PURE__ */jsx(ui.ol, {\n        className: \"ui-breadcrumb__list\",\n        ...listProps,\n        __css: css,\n        children: cloneChildren\n      })\n    })\n  });\n});\nvar BreadcrumbItem = forwardRef((_ref, ref) => {\n  let {\n    className,\n    children,\n    separator,\n    isCurrentPage,\n    isLastChild,\n    gap,\n    ...rest\n  } = _ref;\n  const styles = useBreadcrumb();\n  const validChildren = getValidChildren(children);\n  const cloneChildren = validChildren.map(child => {\n    if (child.type === BreadcrumbLink) {\n      return cloneElement(child, {\n        isCurrentPage\n      });\n    }\n    if (child.type === BreadcrumbSeparator) {\n      return cloneElement(child, {\n        gap,\n        children: child.props.children || separator\n      });\n    }\n    return child;\n  });\n  const css = {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    ...styles.item\n  };\n  return /* @__PURE__ */jsxs(ui.li, {\n    ref,\n    className: cx(\"ui-breadcrumb__item\", className),\n    __css: css,\n    ...rest,\n    children: [cloneChildren, !isLastChild ? /* @__PURE__ */jsx(BreadcrumbSeparator, {\n      gap,\n      children: separator\n    }) : null]\n  });\n});\nvar BreadcrumbLink = forwardRef((_ref2, ref) => {\n  let {\n    className,\n    children,\n    isCurrentPage,\n    href,\n    ...rest\n  } = _ref2;\n  const styles = useBreadcrumb();\n  return /* @__PURE__ */jsx(ui.a, {\n    ref,\n    as: !isCurrentPage ? \"a\" : \"span\",\n    href: !isCurrentPage ? href : void 0,\n    \"aria-current\": isCurrentPage ? \"page\" : void 0,\n    className: cx(\"ui-breadcrumb__link\", className),\n    __css: styles.link,\n    ...rest,\n    children\n  });\n});\nvar BreadcrumbSeparator = forwardRef((_ref3, ref) => {\n  let {\n    children,\n    gap: mx,\n    ...rest\n  } = _ref3;\n  const styles = useBreadcrumb();\n  const css = {\n    mx,\n    ...styles.separator\n  };\n  return /* @__PURE__ */jsx(ui.span, {\n    ref,\n    className: \"ui-breadcrumb__item__separator\",\n    __css: css,\n    ...rest,\n    children\n  });\n});\nvar BreadcrumbEllipsis = forwardRef((_ref4, ref) => {\n  let {\n    children,\n    className,\n    ...rest\n  } = _ref4;\n  const styles = useBreadcrumb();\n  const css = {\n    ...styles.ellipsis\n  };\n  return children != null ? children : /* @__PURE__ */jsxs(Icon, {\n    ref,\n    title: \"ellipsis\",\n    className: cx(\"ui-breadcrumb__item__ellipsis\", className),\n    __css: css,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 36 24\",\n    stroke: \"currentColor\",\n    strokeWidth: \"1.5\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    ...rest,\n    children: [/* @__PURE__ */jsx(\"circle\", {\n      cx: \"10\",\n      cy: \"12\",\n      r: \"2\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsx(\"circle\", {\n      cx: \"20\",\n      cy: \"12\",\n      r: \"2\",\n      fill: \"currentColor\"\n    }), /* @__PURE__ */jsx(\"circle\", {\n      cx: \"30\",\n      cy: \"12\",\n      r: \"2\",\n      fill: \"currentColor\"\n    })]\n  });\n});\nexport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbSeparator, BreadcrumbEllipsis };","map":{"version":3,"names":["ui","forwardRef","omitThemeProps","useMultiComponentStyle","Icon","cx","createContext","getValidChildren","cloneElement","jsx","jsxs","BreadcrumbProvider","useBreadcrumb","name","errorMessage","Breadcrumb","props","ref","styles","mergedProps","className","children","separator","gap","listProps","rest","css","display","alignItems","list","validChildren","count","length","cloneChildren","map","child","index","isLastChild","value","nav","__css","container","ol","BreadcrumbItem","_ref","isCurrentPage","type","BreadcrumbLink","BreadcrumbSeparator","item","li","_ref2","href","a","as","link","_ref3","mx","span","BreadcrumbEllipsis","_ref4","ellipsis","title","xmlns","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cy","r","fill"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\breadcrumb\\src\\breadcrumb.tsx"],"sourcesContent":["import type {\n  HTMLUIProps,\n  ThemeProps,\n  CSSUIObject,\n  CSSUIProps,\n} from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  omitThemeProps,\n  useMultiComponentStyle,\n} from \"@yamada-ui/core\"\nimport { Icon } from \"@yamada-ui/icon\"\nimport type { IconProps } from \"@yamada-ui/icon\"\nimport { cx, createContext, getValidChildren } from \"@yamada-ui/utils\"\nimport { cloneElement } from \"react\"\n\nconst [BreadcrumbProvider, useBreadcrumb] = createContext<\n  Record<string, CSSUIObject>\n>({\n  name: \"BreadcrumbContext\",\n  errorMessage: `useBreadcrumb returned is 'undefined'. Seems you forgot to wrap the components in \"<Breadcrumb />\" `,\n})\n\ntype BreadcrumbOptions = {\n  /**\n   * The visual separator between each breadcrumb item.\n   *\n   * @default '/'\n   */\n  separator?: string | JSX.Element\n  /**\n   * The left and right margin applied to the separator.\n   *\n   * @default '2'\n   */\n  gap?: CSSUIProps[\"mx\"]\n  /**\n   * Props for ol element.\n   */\n  listProps?: HTMLUIProps<\"ol\">\n}\n\nexport type BreadcrumbProps = Omit<HTMLUIProps<\"nav\">, \"gap\"> &\n  ThemeProps<\"Breadcrumb\"> &\n  BreadcrumbOptions\n\n/**\n * `Breadcrumb` is a component that helps users understand the hierarchy of a website.\n *\n * @see Docs https://yamada-ui.com/components/navigation/breadcrumb\n */\nexport const Breadcrumb = forwardRef<BreadcrumbProps, \"nav\">((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"Breadcrumb\", props)\n\n  const {\n    className,\n    children,\n    separator = \"/\",\n    gap = \"fallback(2, 0.5rem)\",\n    listProps,\n    ...rest\n  } = omitThemeProps(mergedProps)\n\n  const css: CSSUIObject = {\n    display: \"flex\",\n    alignItems: \"center\",\n    ...styles.list,\n  }\n\n  const validChildren = getValidChildren(children)\n  const count = validChildren.length\n\n  const cloneChildren = validChildren.map((child, index) =>\n    cloneElement(child, {\n      separator,\n      gap,\n      isLastChild: count === index + 1,\n    }),\n  )\n\n  return (\n    <BreadcrumbProvider value={styles}>\n      <ui.nav\n        ref={ref}\n        className={cx(\"ui-breadcrumb\", className)}\n        __css={styles.container}\n        {...rest}\n      >\n        <ui.ol className=\"ui-breadcrumb__list\" {...listProps} __css={css}>\n          {cloneChildren}\n        </ui.ol>\n      </ui.nav>\n    </BreadcrumbProvider>\n  )\n})\n\ntype BreadcrumbItemOptions = Pick<BreadcrumbProps, \"separator\" | \"gap\"> & {\n  /**\n   * If `true`, change to span element.\n   *\n   * @default false\n   */\n  isCurrentPage?: boolean\n  /**\n   * If `true`, not show separator.\n   *\n   * @default false\n   */\n  isLastChild?: boolean\n}\n\nexport type BreadcrumbItemProps = HTMLUIProps<\"li\"> & BreadcrumbItemOptions\n\nexport const BreadcrumbItem = forwardRef<BreadcrumbItemOptions, \"li\">(\n  (\n    {\n      className,\n      children,\n      separator,\n      isCurrentPage,\n      isLastChild,\n      gap,\n      ...rest\n    },\n    ref,\n  ) => {\n    const styles = useBreadcrumb()\n\n    const validChildren = getValidChildren(children)\n\n    const cloneChildren = validChildren.map((child) => {\n      if (child.type === BreadcrumbLink) {\n        return cloneElement(child, {\n          isCurrentPage,\n        })\n      }\n\n      if (child.type === BreadcrumbSeparator) {\n        return cloneElement(child, {\n          gap,\n          children: child.props.children || separator,\n        })\n      }\n\n      return child\n    })\n\n    const css: CSSUIObject = {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      ...styles.item,\n    }\n\n    return (\n      <ui.li\n        ref={ref}\n        className={cx(\"ui-breadcrumb__item\", className)}\n        __css={css}\n        {...rest}\n      >\n        {cloneChildren}\n\n        {!isLastChild ? (\n          <BreadcrumbSeparator gap={gap}>{separator}</BreadcrumbSeparator>\n        ) : null}\n      </ui.li>\n    )\n  },\n)\n\ntype BreadcrumbLinkOptions = {\n  /**\n   * If `true`, change to span element.\n   *\n   * @default false\n   */\n  isCurrentPage?: boolean\n}\n\nexport type BreadcrumbLinkProps = HTMLUIProps<\"a\"> & BreadcrumbLinkOptions\n\nexport const BreadcrumbLink = forwardRef<BreadcrumbLinkProps, \"a\">(\n  ({ className, children, isCurrentPage, href, ...rest }, ref) => {\n    const styles = useBreadcrumb()\n\n    return (\n      <ui.a\n        ref={ref}\n        as={!isCurrentPage ? \"a\" : \"span\"}\n        href={!isCurrentPage ? href : undefined}\n        aria-current={isCurrentPage ? \"page\" : undefined}\n        className={cx(\"ui-breadcrumb__link\", className)}\n        __css={styles.link}\n        {...rest}\n      >\n        {children}\n      </ui.a>\n    )\n  },\n)\n\ntype BreadcrumbSeparatorOptions = {\n  /**\n   * The CSS `margin-inline-start`, and `margin-inline-end` property.\n   */\n  gap?: CSSUIObject[\"mx\"]\n}\n\nexport type BreadcrumbSeparatorProps = HTMLUIProps<\"span\"> &\n  BreadcrumbSeparatorOptions\n\nexport const BreadcrumbSeparator = forwardRef<BreadcrumbSeparatorProps, \"span\">(\n  ({ children, gap: mx, ...rest }, ref) => {\n    const styles = useBreadcrumb()\n    const css: CSSUIObject = {\n      mx,\n      ...styles.separator,\n    }\n\n    return (\n      <ui.span\n        ref={ref}\n        className=\"ui-breadcrumb__item__separator\"\n        __css={css}\n        {...rest}\n      >\n        {children}\n      </ui.span>\n    )\n  },\n)\n\ntype BreadcrumbEllipsisOptions = {}\n\nexport type BreadcrumbEllipsisProps = IconProps & BreadcrumbEllipsisOptions\n\nexport const BreadcrumbEllipsis = forwardRef<BreadcrumbEllipsisProps, \"span\">(\n  ({ children, className, ...rest }, ref) => {\n    const styles = useBreadcrumb()\n\n    const css: CSSUIObject = {\n      ...styles.ellipsis,\n    }\n\n    return (\n      children ?? (\n        <Icon\n          ref={ref}\n          title=\"ellipsis\"\n          className={cx(\"ui-breadcrumb__item__ellipsis\", className)}\n          __css={css}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 36 24\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          {...rest}\n        >\n          <circle cx=\"10\" cy=\"12\" r=\"2\" fill=\"currentColor\" />\n          <circle cx=\"20\" cy=\"12\" r=\"2\" fill=\"currentColor\" />\n          <circle cx=\"30\" cy=\"12\" r=\"2\" fill=\"currentColor\" />\n        </Icon>\n      )\n    )\n  },\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
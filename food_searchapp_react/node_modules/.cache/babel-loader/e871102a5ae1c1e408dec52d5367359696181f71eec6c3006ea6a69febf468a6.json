{"ast":null,"code":"\"use client\";\n\n// src/index.ts\nimport { createPopper } from \"@popperjs/core\";\nimport { useValue } from \"@yamada-ui/use-value\";\nimport { mergeRefs } from \"@yamada-ui/utils\";\nimport { useCallback, useEffect, useRef } from \"react\";\nvar popperProperties = [\"enabled\", \"offset\", \"gutter\", \"preventOverflow\", \"flip\", \"matchWidth\", \"boundary\", \"eventListeners\", \"strategy\", \"placement\", \"modifiers\"];\nvar defaultEventListeners = {\n  scroll: true,\n  resize: true\n};\nvar transforms = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\"\n};\nvar usePopper = function () {\n  let {\n    enabled = true,\n    eventListeners = true,\n    matchWidth,\n    offset,\n    gutter: _gutter = 8,\n    flip = true,\n    preventOverflow = true,\n    boundary = \"clippingParents\",\n    strategy = \"absolute\",\n    placement: _placement = \"bottom\",\n    modifiers\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const reference = useRef(null);\n  const popper = useRef(null);\n  const instance = useRef(null);\n  const gutter = useValue(_gutter);\n  const placement = useValue(_placement);\n  const cleanup = useRef(() => {});\n  const setupPopper = useCallback(() => {\n    var _a;\n    if (!enabled || !reference.current || !popper.current) return;\n    (_a = cleanup.current) == null ? void 0 : _a.call(cleanup);\n    const modifierTransformOrigin = {\n      name: \"transformOrigin\",\n      enabled: true,\n      phase: \"write\",\n      fn: _ref => {\n        let {\n          state\n        } = _ref;\n        state.elements.popper.style.setProperty(\"--popper-transform-origin\", transforms[state.placement]);\n      },\n      effect: _ref2 => {\n        let {\n          state\n        } = _ref2;\n        return () => {\n          state.elements.popper.style.setProperty(\"--popper-transform-origin\", transforms[state.placement]);\n        };\n      }\n    };\n    const modifierEventListeners = {\n      name: \"eventListeners\",\n      ...(typeof eventListeners === \"object\" ? {\n        enabled: true,\n        options: {\n          ...defaultEventListeners,\n          ...eventListeners\n        }\n      } : {\n        enabled: eventListeners,\n        options: defaultEventListeners\n      })\n    };\n    const modifierOffset = {\n      name: \"offset\",\n      options: {\n        offset: offset != null ? offset : [0, gutter]\n      }\n    };\n    const modifierFlip = {\n      name: \"flip\",\n      enabled: !!flip,\n      options: {\n        padding: 8\n      }\n    };\n    const modifierPreventOverflow = {\n      name: \"preventOverflow\",\n      enabled: !!preventOverflow,\n      options: {\n        boundary\n      }\n    };\n    const modifierMatchWidth = {\n      name: \"matchWidth\",\n      enabled: !!matchWidth,\n      phase: \"beforeWrite\",\n      requires: [\"computeStyles\"],\n      fn: _ref3 => {\n        let {\n          state\n        } = _ref3;\n        state.styles.popper.width = \"\".concat(state.rects.reference.width, \"px\");\n      },\n      effect: _ref4 => {\n        let {\n          state\n        } = _ref4;\n        return () => {\n          state.elements.popper.style.width = \"\".concat(state.elements.reference.offsetWidth, \"px\");\n        };\n      }\n    };\n    instance.current = createPopper(reference.current, popper.current, {\n      placement,\n      modifiers: [modifierTransformOrigin, modifierMatchWidth, modifierEventListeners, modifierOffset, modifierFlip, modifierPreventOverflow, ...(modifiers != null ? modifiers : [])],\n      strategy\n    });\n    instance.current.forceUpdate();\n    cleanup.current = instance.current.destroy;\n  }, [placement, enabled, modifiers, matchWidth, eventListeners, offset, gutter, flip, preventOverflow, boundary, strategy]);\n  useEffect(() => {\n    return () => {\n      var _a;\n      if (reference.current || popper.current) return;\n      (_a = instance.current) == null ? void 0 : _a.destroy();\n      instance.current = null;\n    };\n  }, []);\n  const referenceRef = useCallback(el => {\n    reference.current = el;\n    setupPopper();\n  }, [setupPopper]);\n  const getReferenceProps = useCallback(function () {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return {\n      ...props,\n      ref: mergeRefs(referenceRef, ref)\n    };\n  }, [referenceRef]);\n  const popperRef = useCallback(el => {\n    popper.current = el;\n    setupPopper();\n  }, [setupPopper]);\n  const getPopperProps = useCallback(function () {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return {\n      ...props,\n      ref: mergeRefs(popperRef, ref),\n      style: {\n        ...props.style,\n        position: strategy,\n        minWidth: matchWidth ? void 0 : \"max-content\",\n        inset: \"0 auto auto 0\"\n      }\n    };\n  }, [strategy, popperRef, matchWidth]);\n  return {\n    update: () => {\n      var _a;\n      return (_a = instance.current) == null ? void 0 : _a.update();\n    },\n    forceUpdate: () => {\n      var _a;\n      return (_a = instance.current) == null ? void 0 : _a.forceUpdate();\n    },\n    transformOrigin: \"var(--popper-transform-origin)\",\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getReferenceProps\n  };\n};\nexport { popperProperties, usePopper };","map":{"version":3,"names":["createPopper","useValue","mergeRefs","useCallback","useEffect","useRef","popperProperties","defaultEventListeners","scroll","resize","transforms","top","bottom","left","right","usePopper","enabled","eventListeners","matchWidth","offset","gutter","_gutter","flip","preventOverflow","boundary","strategy","placement","_placement","modifiers","arguments","length","undefined","reference","popper","instance","cleanup","setupPopper","_a","current","call","modifierTransformOrigin","name","phase","fn","_ref","state","elements","style","setProperty","effect","_ref2","modifierEventListeners","options","modifierOffset","modifierFlip","padding","modifierPreventOverflow","modifierMatchWidth","requires","_ref3","styles","width","concat","rects","_ref4","offsetWidth","forceUpdate","destroy","referenceRef","el","getReferenceProps","props","ref","popperRef","getPopperProps","position","minWidth","inset","update","transformOrigin"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\use-popper\\src\\index.ts"],"sourcesContent":["import type {\n  Instance,\n  Modifier,\n  VirtualElement,\n  Placement,\n} from \"@popperjs/core\"\nimport { createPopper } from \"@popperjs/core\"\nimport type { Token } from \"@yamada-ui/core\"\nimport { useValue } from \"@yamada-ui/use-value\"\nimport type { PropGetter } from \"@yamada-ui/utils\"\nimport { mergeRefs } from \"@yamada-ui/utils\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\nexport const popperProperties: any[] = [\n  \"enabled\",\n  \"offset\",\n  \"gutter\",\n  \"preventOverflow\",\n  \"flip\",\n  \"matchWidth\",\n  \"boundary\",\n  \"eventListeners\",\n  \"strategy\",\n  \"placement\",\n  \"modifiers\",\n]\n\nexport type UsePopperProps = {\n  /**\n   * Whether the popper.js should be enabled.\n   *\n   * @default true\n   */\n  enabled?: boolean\n  /**\n   * The main and cross-axis offset to displace popper element from its reference element.\n   */\n  offset?: [number, number]\n  /**\n   * The distance or margin between the reference and popper.\n   * It is used internally to create an `offset` modifier.\n   *\n   * @default 8\n   */\n  gutter?: Token<number>\n  /**\n   * If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area.\n   *\n   * @default true\n   */\n  preventOverflow?: boolean\n  /**\n   * If `true`, the popper will change its placement and flip when it's about to overflow its boundary area.\n   *\n   * @default true\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popper will match the width of the reference at all times.\n   * It's useful for `autocomplete`, `date-picker` and `select` patterns.\n   *\n   * @default false\n   */\n  matchWidth?: boolean\n  /**\n   * The boundary area for the popper. Used within the `preventOverflow` modifier.\n   *\n   * @default 'clippingParents'\n   */\n  boundary?: \"clippingParents\" | \"scrollParent\" | HTMLElement\n  /**\n   * If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window.\n   *\n   * @default true\n   */\n  eventListeners?: boolean | { scroll?: boolean; resize?: boolean }\n  /**\n   * The CSS positioning strategy to use.\n   *\n   * @default 'absolute'\n   */\n  strategy?: \"absolute\" | \"fixed\"\n  /**\n   * The placement of the popper relative to its reference.\n   *\n   * @default 'bottom'\n   */\n  placement?: Token<Placement>\n  /**\n   * Array of popper.js modifiers.\n   * Check the docs to see the list of possible modifiers you can pass.\n   *\n   * @see Docs https://popper.js.org/docs/v2/modifiers/\n   */\n  modifiers?: Array<Partial<Modifier<string, any>>>\n}\n\nconst defaultEventListeners = {\n  scroll: true,\n  resize: true,\n}\n\nconst transforms: Record<string, string> = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\",\n}\n\nexport const usePopper = ({\n  enabled = true,\n  eventListeners = true,\n  matchWidth,\n  offset,\n  gutter: _gutter = 8,\n  flip = true,\n  preventOverflow = true,\n  boundary = \"clippingParents\",\n  strategy = \"absolute\",\n  placement: _placement = \"bottom\",\n  modifiers,\n}: UsePopperProps = {}) => {\n  const reference = useRef<Element | VirtualElement | null>(null)\n  const popper = useRef<HTMLElement | null>(null)\n  const instance = useRef<Instance | null>(null)\n\n  const gutter = useValue(_gutter)\n  const placement = useValue(_placement)\n\n  const cleanup = useRef(() => {})\n\n  const setupPopper = useCallback(() => {\n    if (!enabled || !reference.current || !popper.current) return\n\n    cleanup.current?.()\n\n    const modifierTransformOrigin: Modifier<\"transformOrigin\", any> = {\n      name: \"transformOrigin\",\n      enabled: true,\n      phase: \"write\",\n      fn: ({ state }) => {\n        state.elements.popper.style.setProperty(\n          \"--popper-transform-origin\",\n          transforms[state.placement],\n        )\n      },\n      effect:\n        ({ state }) =>\n        () => {\n          state.elements.popper.style.setProperty(\n            \"--popper-transform-origin\",\n            transforms[state.placement],\n          )\n        },\n    }\n\n    const modifierEventListeners = {\n      name: \"eventListeners\",\n      ...(typeof eventListeners === \"object\"\n        ? {\n            enabled: true,\n            options: { ...defaultEventListeners, ...eventListeners },\n          }\n        : {\n            enabled: eventListeners,\n            options: defaultEventListeners,\n          }),\n    }\n\n    const modifierOffset = {\n      name: \"offset\",\n      options: { offset: offset ?? [0, gutter] },\n    }\n\n    const modifierFlip = {\n      name: \"flip\",\n      enabled: !!flip,\n      options: { padding: 8 },\n    }\n\n    const modifierPreventOverflow = {\n      name: \"preventOverflow\",\n      enabled: !!preventOverflow,\n      options: { boundary },\n    }\n\n    const modifierMatchWidth: Modifier<\"matchWidth\", any> = {\n      name: \"matchWidth\",\n      enabled: !!matchWidth,\n      phase: \"beforeWrite\",\n      requires: [\"computeStyles\"],\n      fn: ({ state }) => {\n        state.styles.popper.width = `${state.rects.reference.width}px`\n      },\n      effect:\n        ({ state }) =>\n        () => {\n          state.elements.popper.style.width = `${\n            (state.elements.reference as HTMLElement).offsetWidth\n          }px`\n        },\n    }\n\n    instance.current = createPopper(reference.current, popper.current, {\n      placement,\n      modifiers: [\n        modifierTransformOrigin,\n        modifierMatchWidth,\n        modifierEventListeners,\n        modifierOffset,\n        modifierFlip,\n        modifierPreventOverflow,\n        ...(modifiers ?? []),\n      ],\n      strategy,\n    })\n\n    instance.current.forceUpdate()\n\n    cleanup.current = instance.current.destroy\n  }, [\n    placement,\n    enabled,\n    modifiers,\n    matchWidth,\n    eventListeners,\n    offset,\n    gutter,\n    flip,\n    preventOverflow,\n    boundary,\n    strategy,\n  ])\n\n  useEffect(() => {\n    return () => {\n      if (reference.current || popper.current) return\n\n      instance.current?.destroy()\n      instance.current = null\n    }\n  }, [])\n\n  const referenceRef = useCallback(\n    <T extends Element | VirtualElement>(el: T | null) => {\n      reference.current = el\n\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getReferenceProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(referenceRef, ref),\n    }),\n    [referenceRef],\n  )\n\n  const popperRef = useCallback(\n    <T extends HTMLElement>(el: T | null) => {\n      popper.current = el\n\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getPopperProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(popperRef, ref),\n      style: {\n        ...props.style,\n        position: strategy,\n        minWidth: matchWidth ? undefined : \"max-content\",\n        inset: \"0 auto auto 0\",\n      },\n    }),\n    [strategy, popperRef, matchWidth],\n  )\n\n  return {\n    update: () => instance.current?.update(),\n    forceUpdate: () => instance.current?.forceUpdate(),\n    transformOrigin: \"var(--popper-transform-origin)\",\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getReferenceProps,\n  }\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
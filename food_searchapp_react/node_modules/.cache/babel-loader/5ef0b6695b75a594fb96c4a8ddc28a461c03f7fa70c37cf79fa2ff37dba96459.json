{"ast":null,"code":"// src/components/avatar.ts\nimport { mode } from \"@yamada-ui/core\";\nimport { getMemoizedObject as get, isDark, randomColor } from \"@yamada-ui/utils\";\nvar Avatar = {\n  baseStyle: {\n    group: {},\n    container: _ref => {\n      let {\n        theme: t,\n        colorMode: m,\n        name: string\n      } = _ref;\n      const bg = string ? randomColor({\n        string\n      }) : mode(\"gray.200\", \"gray.500\")(m);\n      return {\n        bg,\n        color: isDark(bg)(t, m) ? \"white\" : \"black\",\n        borderColor: [\"white\", \"black\"],\n        verticalAlign: \"top\",\n        _loaded: {\n          bg: \"inherit\"\n        }\n      };\n    },\n    name: {},\n    excess: {\n      borderColor: [\"white\", \"black\"],\n      bg: [\"blackAlpha.200\", \"whiteAlpha.200\"]\n    },\n    badge: {\n      rounded: \"full\",\n      borderWidth: \"0.2em\",\n      borderColor: [\"white\", \"black\"]\n    }\n  },\n  sizes: {\n    \"2xs\": _ref2 => {\n      let {\n        theme: t\n      } = _ref2;\n      return {\n        container: {\n          w: \"4\",\n          h: \"4\",\n          fontSize: \"calc(\".concat(get(t, \"sizes.4\"), \" / 2.5)\")\n        },\n        name: {\n          fontSize: \"calc(\".concat(get(t, \"sizes.4\"), \" / 2.5)\"),\n          lineHeight: get(t, \"sizes.16\")\n        },\n        excess: {\n          w: \"4\",\n          h: \"4\",\n          fontSize: \"calc(\".concat(get(t, \"sizes.4\"), \" / 2.5)\"),\n          lineHeight: get(t, \"sizes.16\")\n        }\n      };\n    },\n    xs: _ref3 => {\n      let {\n        theme: t\n      } = _ref3;\n      return {\n        container: {\n          w: \"6\",\n          h: \"6\",\n          fontSize: \"calc(\".concat(get(t, \"sizes.6\"), \" / 2.5)\")\n        },\n        name: {\n          fontSize: \"calc(\".concat(get(t, \"sizes.6\"), \" / 2.5)\"),\n          lineHeight: get(t, \"sizes.16\")\n        },\n        excess: {\n          w: \"6\",\n          h: \"6\"\n        }\n      };\n    },\n    sm: _ref4 => {\n      let {\n        theme: t\n      } = _ref4;\n      return {\n        container: {\n          w: \"8\",\n          h: \"8\",\n          fontSize: \"calc(\".concat(get(t, \"sizes.8\"), \" / 2.5)\")\n        },\n        name: {\n          fontSize: \"calc(\".concat(get(t, \"sizes.8\"), \" / 2.5)\"),\n          lineHeight: get(t, \"sizes.16\")\n        },\n        excess: {\n          w: \"8\",\n          h: \"8\"\n        }\n      };\n    },\n    md: _ref5 => {\n      let {\n        theme: t\n      } = _ref5;\n      return {\n        container: {\n          w: \"12\",\n          h: \"12\",\n          fontSize: \"calc(\".concat(get(t, \"sizes.12\"), \" / 2.5)\")\n        },\n        name: {\n          fontSize: \"calc(\".concat(get(t, \"sizes.12\"), \" / 2.5)\"),\n          lineHeight: get(t, \"sizes.16\")\n        },\n        excess: {\n          w: \"12\",\n          h: \"12\"\n        }\n      };\n    },\n    lg: _ref6 => {\n      let {\n        theme: t\n      } = _ref6;\n      return {\n        container: {\n          w: \"16\",\n          h: \"16\",\n          fontSize: \"calc(\".concat(get(t, \"sizes.16\"), \" / 2.5)\")\n        },\n        name: {\n          fontSize: \"calc(\".concat(get(t, \"sizes.16\"), \" / 2.5)\"),\n          lineHeight: get(t, \"sizes.16\")\n        },\n        excess: {\n          w: \"16\",\n          h: \"16\"\n        }\n      };\n    },\n    xl: _ref7 => {\n      let {\n        theme: t\n      } = _ref7;\n      return {\n        container: {\n          w: \"24\",\n          h: \"24\",\n          fontSize: \"calc(\".concat(get(t, \"sizes.24\"), \" / 2.5)\")\n        },\n        name: {\n          fontSize: \"calc(\".concat(get(t, \"sizes.24\"), \" / 2.5)\"),\n          lineHeight: get(t, \"sizes.16\")\n        },\n        excess: {\n          w: \"24\",\n          h: \"24\"\n        }\n      };\n    },\n    \"2xl\": _ref8 => {\n      let {\n        theme: t\n      } = _ref8;\n      return {\n        container: {\n          w: \"32\",\n          h: \"32\",\n          fontSize: \"calc(\".concat(get(t, \"sizes.32\"), \" / 2.5)\")\n        },\n        name: {\n          fontSize: \"calc(\".concat(get(t, \"sizes.32\"), \" / 2.5)\"),\n          lineHeight: get(t, \"sizes.16\")\n        },\n        excess: {\n          w: \"32\",\n          h: \"32\"\n        }\n      };\n    }\n  },\n  defaultProps: {\n    size: \"md\"\n  }\n};\nexport { Avatar };","map":{"version":3,"names":["mode","getMemoizedObject","get","isDark","randomColor","Avatar","baseStyle","group","container","_ref","theme","t","colorMode","m","name","string","bg","color","borderColor","verticalAlign","_loaded","excess","badge","rounded","borderWidth","sizes","_ref2","w","h","fontSize","concat","lineHeight","xs","_ref3","sm","_ref4","md","_ref5","lg","_ref6","xl","_ref7","_ref8","defaultProps","size"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\theme\\src\\components\\avatar.ts"],"sourcesContent":["import { mode, type ComponentMultiStyle } from \"@yamada-ui/core\"\nimport { getMemoizedObject as get, isDark, randomColor } from \"@yamada-ui/utils\"\n\nexport const Avatar: ComponentMultiStyle = {\n  baseStyle: {\n    group: {},\n    container: ({ theme: t, colorMode: m, name: string }) => {\n      const bg = string\n        ? randomColor({ string })\n        : mode(\"gray.200\", \"gray.500\")(m)\n\n      return {\n        bg,\n        color: isDark(bg)(t, m) ? \"white\" : \"black\",\n        borderColor: [\"white\", \"black\"],\n        verticalAlign: \"top\",\n        _loaded: { bg: \"inherit\" },\n      }\n    },\n    name: {},\n    excess: {\n      borderColor: [\"white\", \"black\"],\n      bg: [\"blackAlpha.200\", \"whiteAlpha.200\"],\n    },\n    badge: {\n      rounded: \"full\",\n      borderWidth: \"0.2em\",\n      borderColor: [\"white\", \"black\"],\n    },\n  },\n\n  sizes: {\n    \"2xs\": ({ theme: t }) => ({\n      container: {\n        w: \"4\",\n        h: \"4\",\n        fontSize: `calc(${get(t, \"sizes.4\")} / 2.5)`,\n      },\n      name: {\n        fontSize: `calc(${get(t, \"sizes.4\")} / 2.5)`,\n        lineHeight: get(t, \"sizes.16\"),\n      },\n      excess: {\n        w: \"4\",\n        h: \"4\",\n        fontSize: `calc(${get(t, \"sizes.4\")} / 2.5)`,\n        lineHeight: get(t, \"sizes.16\"),\n      },\n    }),\n    xs: ({ theme: t }) => ({\n      container: {\n        w: \"6\",\n        h: \"6\",\n        fontSize: `calc(${get(t, \"sizes.6\")} / 2.5)`,\n      },\n      name: {\n        fontSize: `calc(${get(t, \"sizes.6\")} / 2.5)`,\n        lineHeight: get(t, \"sizes.16\"),\n      },\n      excess: { w: \"6\", h: \"6\" },\n    }),\n    sm: ({ theme: t }) => ({\n      container: {\n        w: \"8\",\n        h: \"8\",\n        fontSize: `calc(${get(t, \"sizes.8\")} / 2.5)`,\n      },\n      name: {\n        fontSize: `calc(${get(t, \"sizes.8\")} / 2.5)`,\n        lineHeight: get(t, \"sizes.16\"),\n      },\n      excess: { w: \"8\", h: \"8\" },\n    }),\n    md: ({ theme: t }) => ({\n      container: {\n        w: \"12\",\n        h: \"12\",\n        fontSize: `calc(${get(t, \"sizes.12\")} / 2.5)`,\n      },\n      name: {\n        fontSize: `calc(${get(t, \"sizes.12\")} / 2.5)`,\n        lineHeight: get(t, \"sizes.16\"),\n      },\n      excess: { w: \"12\", h: \"12\" },\n    }),\n    lg: ({ theme: t }) => ({\n      container: {\n        w: \"16\",\n        h: \"16\",\n        fontSize: `calc(${get(t, \"sizes.16\")} / 2.5)`,\n      },\n      name: {\n        fontSize: `calc(${get(t, \"sizes.16\")} / 2.5)`,\n        lineHeight: get(t, \"sizes.16\"),\n      },\n      excess: { w: \"16\", h: \"16\" },\n    }),\n    xl: ({ theme: t }) => ({\n      container: {\n        w: \"24\",\n        h: \"24\",\n        fontSize: `calc(${get(t, \"sizes.24\")} / 2.5)`,\n      },\n      name: {\n        fontSize: `calc(${get(t, \"sizes.24\")} / 2.5)`,\n        lineHeight: get(t, \"sizes.16\"),\n      },\n      excess: { w: \"24\", h: \"24\" },\n    }),\n    \"2xl\": ({ theme: t }) => ({\n      container: {\n        w: \"32\",\n        h: \"32\",\n        fontSize: `calc(${get(t, \"sizes.32\")} / 2.5)`,\n      },\n      name: {\n        fontSize: `calc(${get(t, \"sizes.32\")} / 2.5)`,\n        lineHeight: get(t, \"sizes.16\"),\n      },\n      excess: { w: \"32\", h: \"32\" },\n    }),\n  },\n\n  defaultProps: {\n    size: \"md\",\n  },\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
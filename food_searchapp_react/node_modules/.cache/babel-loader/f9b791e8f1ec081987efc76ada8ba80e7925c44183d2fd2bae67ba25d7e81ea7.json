{"ast":null,"code":"// src/assertion.ts\nvar isNumber = value => typeof value === \"number\";\nvar isNotNumber = value => typeof value !== \"number\" || Number.isNaN(value) || !Number.isFinite(value);\nvar isNumeric = value => value != null && parseFloat(value.toString()) - parseFloat(value.toString()) + 1 >= 0;\nvar isString = value => Object.prototype.toString.call(value) === \"[object String]\";\nvar isBoolean = value => typeof value === \"boolean\";\nvar isUndefined = value => typeof value === \"undefined\" && value === void 0;\nvar isNull = value => value === null;\nvar isObject = value => value !== null && (typeof value === \"object\" || typeof value === \"function\") && !isArray(value);\nvar isArray = value => Array.isArray(value);\nvar isEmpty = value => !isArray(value) || !value.length || value.every(v => v == null);\nvar isFunction = value => typeof value === \"function\";\nvar isUnit = value => /[0-9].*[px|rem|em|%|vw|vh]$/.test(value);\nvar cast = value => value;\nexport { isNumber, isNotNumber, isNumeric, isString, isBoolean, isUndefined, isNull, isObject, isArray, isEmpty, isFunction, isUnit, cast };","map":{"version":3,"names":["isNumber","value","isNotNumber","Number","isNaN","isFinite","isNumeric","parseFloat","toString","isString","Object","prototype","call","isBoolean","isUndefined","isNull","isObject","isArray","Array","isEmpty","length","every","v","isFunction","isUnit","test","cast"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\utils\\src\\assertion.ts"],"sourcesContent":["import type { Dict } from \".\"\n\nexport const isNumber = (value: any): value is number =>\n  typeof value === \"number\"\n\nexport const isNotNumber = (value: any): boolean =>\n  typeof value !== \"number\" || Number.isNaN(value) || !Number.isFinite(value)\n\nexport const isNumeric = (value: any): boolean =>\n  value != null &&\n  parseFloat(value.toString()) - parseFloat(value.toString()) + 1 >= 0\n\nexport const isString = (value: any): value is string =>\n  Object.prototype.toString.call(value) === \"[object String]\"\n\nexport const isBoolean = (value: any): value is boolean =>\n  typeof value === \"boolean\"\n\nexport const isUndefined = (value: any): value is undefined =>\n  typeof value === \"undefined\" && value === undefined\n\nexport const isNull = (value: any): value is null => value === null\n\nexport const isObject = <T extends Dict>(value: any): value is T =>\n  value !== null &&\n  (typeof value === \"object\" || typeof value === \"function\") &&\n  !isArray(value)\n\nexport const isArray = <T extends any[]>(value: any): value is T =>\n  Array.isArray(value)\n\nexport const isEmpty = (value: any): boolean =>\n  !isArray(value) || !value.length || value.every((v) => v == null)\n\nexport const isFunction = <T extends Function = Function>(\n  value: any,\n): value is T => typeof value === \"function\"\n\nexport const isUnit = (value: any): boolean =>\n  /[0-9].*[px|rem|em|%|vw|vh]$/.test(value)\n\nexport const cast = <T>(value: any) => value as T\n"],"mappings":";AAEO,IAAMA,QAAA,GAAYC,KAAA,IACvB,OAAOA,KAAA,KAAU;AAEZ,IAAMC,WAAA,GAAeD,KAAA,IAC1B,OAAOA,KAAA,KAAU,YAAYE,MAAA,CAAOC,KAAA,CAAMH,KAAK,KAAK,CAACE,MAAA,CAAOE,QAAA,CAASJ,KAAK;AAErE,IAAMK,SAAA,GAAaL,KAAA,IACxBA,KAAA,IAAS,QACTM,UAAA,CAAWN,KAAA,CAAMO,QAAA,CAAS,CAAC,IAAID,UAAA,CAAWN,KAAA,CAAMO,QAAA,CAAS,CAAC,IAAI,KAAK;AAE9D,IAAMC,QAAA,GAAYR,KAAA,IACvBS,MAAA,CAAOC,SAAA,CAAUH,QAAA,CAASI,IAAA,CAAKX,KAAK,MAAM;AAErC,IAAMY,SAAA,GAAaZ,KAAA,IACxB,OAAOA,KAAA,KAAU;AAEZ,IAAMa,WAAA,GAAeb,KAAA,IAC1B,OAAOA,KAAA,KAAU,eAAeA,KAAA,KAAU;AAErC,IAAMc,MAAA,GAAUd,KAAA,IAA8BA,KAAA,KAAU;AAExD,IAAMe,QAAA,GAA4Bf,KAAA,IACvCA,KAAA,KAAU,SACT,OAAOA,KAAA,KAAU,YAAY,OAAOA,KAAA,KAAU,eAC/C,CAACgB,OAAA,CAAQhB,KAAK;AAET,IAAMgB,OAAA,GAA4BhB,KAAA,IACvCiB,KAAA,CAAMD,OAAA,CAAQhB,KAAK;AAEd,IAAMkB,OAAA,GAAWlB,KAAA,IACtB,CAACgB,OAAA,CAAQhB,KAAK,KAAK,CAACA,KAAA,CAAMmB,MAAA,IAAUnB,KAAA,CAAMoB,KAAA,CAAOC,CAAA,IAAMA,CAAA,IAAK,IAAI;AAE3D,IAAMC,UAAA,GACXtB,KAAA,IACe,OAAOA,KAAA,KAAU;AAE3B,IAAMuB,MAAA,GAAUvB,KAAA,IACrB,8BAA8BwB,IAAA,CAAKxB,KAAK;AAEnC,IAAMyB,IAAA,GAAWzB,KAAA,IAAeA,KAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
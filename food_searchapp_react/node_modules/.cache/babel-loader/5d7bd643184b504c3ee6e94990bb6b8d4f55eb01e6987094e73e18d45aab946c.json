{"ast":null,"code":"// src/components/indicator.ts\nimport { isGray, shadeColor } from \"@yamada-ui/utils\";\nvar Indicator = {\n  baseStyle: _ref => {\n    let {\n      withBorder\n    } = _ref;\n    return {\n      zIndex: \"kurillin\",\n      rounded: \"full\",\n      w: \"fit-content\",\n      h: \"fit-content\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      outline: 0,\n      whiteSpace: \"nowrap\",\n      ...(withBorder ? {\n        borderWidth: \"0.2em\",\n        borderColor: [\"white\", \"black\"]\n      } : {})\n    };\n  },\n  sizes: {\n    sm: {\n      minH: 2,\n      minW: 2,\n      fontSize: \"xs\",\n      px: 1,\n      lineHeight: 1.6\n    },\n    md: {\n      minH: 3,\n      minW: 3,\n      fontSize: \"sm\",\n      px: 1.5,\n      lineHeight: 1.5\n    },\n    lg: {\n      minH: 4,\n      minW: 4,\n      fontSize: \"md\",\n      px: 2,\n      lineHeight: 1.4\n    }\n  },\n  variants: {\n    solid: _ref2 => {\n      let {\n        colorScheme: c = \"primary\"\n      } = _ref2;\n      return {\n        bg: [\"\".concat(c, \".500\"), \"\".concat(c, \".600\")],\n        color: \"white\",\n        var: [{\n          __prefix: \"ui\",\n          name: \"ping\",\n          token: \"colors\",\n          value: [\"\".concat(c, \".300\"), \"\".concat(c, \".400\")]\n        }]\n      };\n    },\n    subtle: _ref3 => {\n      let {\n        theme: t,\n        colorMode: m,\n        colorScheme: c = \"primary\"\n      } = _ref3;\n      return {\n        bg: [isGray(c) ? \"\".concat(c, \".50\") : \"\".concat(c, \".100\"), shadeColor(\"\".concat(c, \".300\"), 58)(t, m)],\n        color: [\"\".concat(c, \".800\"), isGray(c) ? \"\".concat(c, \".50\") : \"\".concat(c, \".200\")],\n        var: [{\n          __prefix: \"ui\",\n          name: \"ping\",\n          token: \"colors\",\n          value: [\"blackAlpha.400\", \"whiteAlpha.500\"]\n        }]\n      };\n    }\n  },\n  defaultProps: {\n    size: \"md\",\n    variant: \"solid\",\n    colorScheme: \"primary\"\n  }\n};\nexport { Indicator };","map":{"version":3,"names":["isGray","shadeColor","Indicator","baseStyle","_ref","withBorder","zIndex","rounded","w","h","display","justifyContent","alignItems","outline","whiteSpace","borderWidth","borderColor","sizes","sm","minH","minW","fontSize","px","lineHeight","md","lg","variants","solid","_ref2","colorScheme","c","bg","concat","color","var","__prefix","name","token","value","subtle","_ref3","theme","t","colorMode","m","defaultProps","size","variant"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\theme\\src\\components\\indicator.ts"],"sourcesContent":["import type { ComponentStyle } from \"@yamada-ui/core\"\nimport { isGray, shadeColor } from \"@yamada-ui/utils\"\n\nexport const Indicator: ComponentStyle = {\n  baseStyle: ({ withBorder }) => ({\n    zIndex: \"kurillin\",\n    rounded: \"full\",\n    w: \"fit-content\",\n    h: \"fit-content\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    outline: 0,\n    whiteSpace: \"nowrap\",\n    ...(withBorder\n      ? { borderWidth: \"0.2em\", borderColor: [\"white\", \"black\"] }\n      : {}),\n  }),\n\n  sizes: {\n    sm: { minH: 2, minW: 2, fontSize: \"xs\", px: 1, lineHeight: 1.6 },\n    md: { minH: 3, minW: 3, fontSize: \"sm\", px: 1.5, lineHeight: 1.5 },\n    lg: { minH: 4, minW: 4, fontSize: \"md\", px: 2, lineHeight: 1.4 },\n  },\n\n  variants: {\n    solid: ({ colorScheme: c = \"primary\" }) => ({\n      bg: [`${c}.500`, `${c}.600`],\n      color: `white`,\n      var: [\n        {\n          __prefix: \"ui\",\n          name: \"ping\",\n          token: \"colors\",\n          value: [`${c}.300`, `${c}.400`],\n        },\n      ],\n    }),\n    subtle: ({ theme: t, colorMode: m, colorScheme: c = \"primary\" }) => ({\n      bg: [\n        isGray(c) ? `${c}.50` : `${c}.100`,\n        shadeColor(`${c}.300`, 58)(t, m),\n      ],\n      color: [`${c}.800`, isGray(c) ? `${c}.50` : `${c}.200`],\n      var: [\n        {\n          __prefix: \"ui\",\n          name: \"ping\",\n          token: \"colors\",\n          value: [\"blackAlpha.400\", \"whiteAlpha.500\"],\n        },\n      ],\n    }),\n  },\n\n  defaultProps: {\n    size: \"md\",\n    variant: \"solid\",\n    colorScheme: \"primary\",\n  },\n}\n"],"mappings":";AACA,SAASA,MAAA,EAAQC,UAAA,QAAkB;AAE5B,IAAMC,SAAA,GAA4B;EACvCC,SAAA,EAAWC,IAAA;IAAA,IAAC;MAAEC;IAAW,IAAAD,IAAA;IAAA,OAAO;MAC9BE,MAAA,EAAQ;MACRC,OAAA,EAAS;MACTC,CAAA,EAAG;MACHC,CAAA,EAAG;MACHC,OAAA,EAAS;MACTC,cAAA,EAAgB;MAChBC,UAAA,EAAY;MACZC,OAAA,EAAS;MACTC,UAAA,EAAY;MACZ,IAAIT,UAAA,GACA;QAAEU,WAAA,EAAa;QAASC,WAAA,EAAa,CAAC,SAAS,OAAO;MAAE,IACxD,CAAC;IACP;EAAA;EAEAC,KAAA,EAAO;IACLC,EAAA,EAAI;MAAEC,IAAA,EAAM;MAAGC,IAAA,EAAM;MAAGC,QAAA,EAAU;MAAMC,EAAA,EAAI;MAAGC,UAAA,EAAY;IAAI;IAC/DC,EAAA,EAAI;MAAEL,IAAA,EAAM;MAAGC,IAAA,EAAM;MAAGC,QAAA,EAAU;MAAMC,EAAA,EAAI;MAAKC,UAAA,EAAY;IAAI;IACjEE,EAAA,EAAI;MAAEN,IAAA,EAAM;MAAGC,IAAA,EAAM;MAAGC,QAAA,EAAU;MAAMC,EAAA,EAAI;MAAGC,UAAA,EAAY;IAAI;EACjE;EAEAG,QAAA,EAAU;IACRC,KAAA,EAAOC,KAAA;MAAA,IAAC;QAAEC,WAAA,EAAaC,CAAA,GAAI;MAAU,IAAAF,KAAA;MAAA,OAAO;QAC1CG,EAAA,EAAI,IAAAC,MAAA,CAAIF,CAAC,cAAAE,MAAA,CAAWF,CAAC,UAAM;QAC3BG,KAAA,SAAO;QACPC,GAAA,EAAK,CACH;UACEC,QAAA,EAAU;UACVC,IAAA,EAAM;UACNC,KAAA,EAAO;UACPC,KAAA,EAAO,IAAAN,MAAA,CAAIF,CAAC,cAAAE,MAAA,CAAWF,CAAC;QAC1B;MAEJ;IAAA;IACAS,MAAA,EAAQC,KAAA;MAAA,IAAC;QAAEC,KAAA,EAAOC,CAAA;QAAGC,SAAA,EAAWC,CAAA;QAAGf,WAAA,EAAaC,CAAA,GAAI;MAAU,IAAAU,KAAA;MAAA,OAAO;QACnET,EAAA,EAAI,CACF/B,MAAA,CAAO8B,CAAC,OAAAE,MAAA,CAAOF,CAAC,cAAAE,MAAA,CAAWF,CAAC,WAC5B7B,UAAA,IAAA+B,MAAA,CAAcF,CAAC,WAAQ,EAAE,EAAEY,CAAA,EAAGE,CAAC,EACjC;QACAX,KAAA,EAAO,IAAAD,MAAA,CAAIF,CAAC,WAAQ9B,MAAA,CAAO8B,CAAC,OAAAE,MAAA,CAAOF,CAAC,cAAAE,MAAA,CAAWF,CAAC,SAAM;QACtDI,GAAA,EAAK,CACH;UACEC,QAAA,EAAU;UACVC,IAAA,EAAM;UACNC,KAAA,EAAO;UACPC,KAAA,EAAO,CAAC,kBAAkB,gBAAgB;QAC5C;MAEJ;IAAA;EACF;EAEAO,YAAA,EAAc;IACZC,IAAA,EAAM;IACNC,OAAA,EAAS;IACTlB,WAAA,EAAa;EACf;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
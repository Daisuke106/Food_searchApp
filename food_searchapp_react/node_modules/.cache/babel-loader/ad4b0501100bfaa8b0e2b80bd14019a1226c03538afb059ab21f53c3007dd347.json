{"ast":null,"code":"\"use client\";\n\n// src/ripple.tsx\nimport { AnimatePresence, Motion } from \"@yamada-ui/motion\";\nimport { cx, handlerAll } from \"@yamada-ui/utils\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nvar clamp = (value, min, max) => Math.min(Math.max(value, min), max);\nvar Ripple = _ref => {\n  let {\n    className,\n    ripples,\n    onAnimationComplete,\n    onClear,\n    color = \"currentColor\",\n    style,\n    isDisabled,\n    ...rest\n  } = _ref;\n  if (isDisabled) return null;\n  const css = {\n    rounded: \"fallback(full, 9999px)\",\n    zIndex: \"fallback(kurillin, 9)\"\n  };\n  return /* @__PURE__ */jsx(Fragment, {\n    children: ripples.map(_ref2 => {\n      let {\n        key,\n        x,\n        y,\n        size\n      } = _ref2;\n      const duration = clamp(0.01 * size, 0.2, size > 100 ? 0.75 : 0.5);\n      return /* @__PURE__ */jsx(AnimatePresence, {\n        mode: \"popLayout\",\n        children: /* @__PURE__ */jsx(Motion, {\n          as: \"span\",\n          className: cx(\"ui-ripple\", className),\n          initial: {\n            transform: \"scale(0)\",\n            opacity: 0.35\n          },\n          animate: {\n            transform: \"scale(2)\",\n            opacity: 0\n          },\n          exit: {\n            opacity: 0\n          },\n          transition: {\n            duration\n          },\n          bgColor: color,\n          style: {\n            position: \"absolute\",\n            transformOrigin: \"center\",\n            pointerEvents: \"none\",\n            left: x,\n            top: y,\n            width: \"\".concat(size, \"px\"),\n            height: \"\".concat(size, \"px\"),\n            ...style\n          },\n          __css: css,\n          ...rest,\n          onAnimationComplete: handlerAll(onAnimationComplete, () => onClear(key))\n        })\n      }, key);\n    })\n  });\n};\nexport { Ripple };","map":{"version":3,"names":["AnimatePresence","Motion","cx","handlerAll","Fragment","jsx","clamp","value","min","max","Math","Ripple","_ref","className","ripples","onAnimationComplete","onClear","color","style","isDisabled","rest","css","rounded","zIndex","children","map","_ref2","key","x","y","size","duration","mode","as","initial","transform","opacity","animate","exit","transition","bgColor","position","transformOrigin","pointerEvents","left","top","width","concat","height","__css"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\ripple\\src\\ripple.tsx"],"sourcesContent":["import type { CSSUIObject } from \"@yamada-ui/core\"\nimport { AnimatePresence, Motion, type MotionProps } from \"@yamada-ui/motion\"\nimport { cx, handlerAll } from \"@yamada-ui/utils\"\nimport type { FC, Key } from \"react\"\nimport type { RippleOptions } from \"./use-ripple\"\n\nconst clamp = (value: number, min: number, max: number) =>\n  Math.min(Math.max(value, min), max)\n\nexport type RippleProps = MotionProps<\"span\"> & {\n  /**\n   * If `true`, disable ripple effects when pressing a element.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  ripples: RippleOptions[]\n  onClear: (key: Key) => void\n}\n\n/**\n * `Ripple` is a component that adds a ripple effect to elements, allowing users to recognize when they have clicked.\n *\n * @see Docs https://yamada-ui.com/components/other/ripple\n */\nexport const Ripple: FC<RippleProps> = ({\n  className,\n  ripples,\n  onAnimationComplete,\n  onClear,\n  color = \"currentColor\",\n  style,\n  isDisabled,\n  ...rest\n}) => {\n  if (isDisabled) return null\n\n  const css: CSSUIObject = {\n    rounded: \"fallback(full, 9999px)\",\n    zIndex: \"fallback(kurillin, 9)\",\n  }\n\n  return (\n    <>\n      {ripples.map(({ key, x, y, size }) => {\n        const duration = clamp(0.01 * size, 0.2, size > 100 ? 0.75 : 0.5)\n\n        return (\n          <AnimatePresence key={key} mode=\"popLayout\">\n            <Motion\n              as=\"span\"\n              className={cx(\"ui-ripple\", className)}\n              initial={{ transform: \"scale(0)\", opacity: 0.35 }}\n              animate={{ transform: \"scale(2)\", opacity: 0 }}\n              exit={{ opacity: 0 }}\n              transition={{ duration }}\n              bgColor={color}\n              style={{\n                position: \"absolute\",\n                transformOrigin: \"center\",\n                pointerEvents: \"none\",\n                left: x,\n                top: y,\n                width: `${size}px`,\n                height: `${size}px`,\n                ...style,\n              }}\n              __css={css}\n              {...rest}\n              onAnimationComplete={handlerAll(onAnimationComplete, () =>\n                onClear(key),\n              )}\n            />\n          </AnimatePresence>\n        )\n      })}\n    </>\n  )\n}\n"],"mappings":";;;AACA,SAASA,eAAA,EAAiBC,MAAA,QAAgC;AAC1D,SAASC,EAAA,EAAIC,UAAA,QAAkB;AAyC3B,SAAAC,QAAA,EAMQC,GAAA,QANR;AArCJ,IAAMC,KAAA,GAAQA,CAACC,KAAA,EAAeC,GAAA,EAAaC,GAAA,KACzCC,IAAA,CAAKF,GAAA,CAAIE,IAAA,CAAKD,GAAA,CAAIF,KAAA,EAAOC,GAAG,GAAGC,GAAG;AAkB7B,IAAME,MAAA,GAA0BC,IAAA,IASjC;EAAA,IATkC;IACtCC,SAAA;IACAC,OAAA;IACAC,mBAAA;IACAC,OAAA;IACAC,KAAA,GAAQ;IACRC,KAAA;IACAC,UAAA;IACA,GAAGC;EACL,IAAAR,IAAA;EACE,IAAIO,UAAA,EAAY,OAAO;EAEvB,MAAME,GAAA,GAAmB;IACvBC,OAAA,EAAS;IACTC,MAAA,EAAQ;EACV;EAEA,OACE,eAAAlB,GAAA,CAAAD,QAAA;IACGoB,QAAA,EAAAV,OAAA,CAAQW,GAAA,CAAIC,KAAA,IAAyB;MAAA,IAAxB;QAAEC,GAAA;QAAKC,CAAA;QAAGC,CAAA;QAAGC;MAAK,IAAAJ,KAAA;MAC9B,MAAMK,QAAA,GAAWzB,KAAA,CAAM,OAAOwB,IAAA,EAAM,KAAKA,IAAA,GAAO,MAAM,OAAO,GAAG;MAEhE,OACE,eAAAzB,GAAA,CAACL,eAAA;QAA0BgC,IAAA,EAAK;QAC9BR,QAAA,iBAAAnB,GAAA,CAACJ,MAAA;UACCgC,EAAA,EAAG;UACHpB,SAAA,EAAWX,EAAA,CAAG,aAAaW,SAAS;UACpCqB,OAAA,EAAS;YAAEC,SAAA,EAAW;YAAYC,OAAA,EAAS;UAAK;UAChDC,OAAA,EAAS;YAAEF,SAAA,EAAW;YAAYC,OAAA,EAAS;UAAE;UAC7CE,IAAA,EAAM;YAAEF,OAAA,EAAS;UAAE;UACnBG,UAAA,EAAY;YAAER;UAAS;UACvBS,OAAA,EAASvB,KAAA;UACTC,KAAA,EAAO;YACLuB,QAAA,EAAU;YACVC,eAAA,EAAiB;YACjBC,aAAA,EAAe;YACfC,IAAA,EAAMhB,CAAA;YACNiB,GAAA,EAAKhB,CAAA;YACLiB,KAAA,KAAAC,MAAA,CAAUjB,IAAI;YACdkB,MAAA,KAAAD,MAAA,CAAWjB,IAAI;YACf,GAAGZ;UACL;UACA+B,KAAA,EAAO5B,GAAA;UACN,GAAGD,IAAA;UACJL,mBAAA,EAAqBZ,UAAA,CAAWY,mBAAA,EAAqB,MACnDC,OAAA,CAAQW,GAAG,CACb;QAAA,CACF;MAAA,GAxBoBA,GAyBtB;IAEJ,CAAC;EAAA,CACH;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
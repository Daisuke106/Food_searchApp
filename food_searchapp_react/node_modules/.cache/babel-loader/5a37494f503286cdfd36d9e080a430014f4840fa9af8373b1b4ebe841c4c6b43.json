{"ast":null,"code":"// src/components/editable.ts\nimport { mode } from \"@yamada-ui/core\";\nimport { getColor, isArray } from \"@yamada-ui/utils\";\nvar Editable = {\n  baseStyle: {\n    container: {\n      w: \"full\"\n    },\n    preview: {\n      rounded: \"md\",\n      p: \"1\",\n      whiteSpace: \"pre-line\",\n      transitionProperty: \"common\",\n      transitionDuration: \"normal\"\n    },\n    input: _ref => {\n      let {\n        theme: t,\n        colorMode: m,\n        focusBorderColor: fc = \"focus\",\n        errorBorderColor: ec = [\"danger.500\", \"danger.400\"]\n      } = _ref;\n      const focusBorderColor = isArray(fc) ? mode(getColor(fc[0], fc[0])(t, m), getColor(fc[1], fc[1])(t, m))(m) : getColor(fc, fc)(t, m);\n      const errorBorderColor = isArray(ec) ? mode(getColor(ec[0], ec[0])(t, m), getColor(ec[1], ec[1])(t, m))(m) : getColor(ec, ec)(t, m);\n      return {\n        rounded: \"md\",\n        p: \"1\",\n        w: \"full\",\n        transitionProperty: \"common\",\n        transitionDuration: \"normal\",\n        _placeholder: {\n          opacity: 0.6\n        },\n        _invalid: {\n          boxShadow: \"0px 0px 0px 1px \".concat(errorBorderColor)\n        },\n        _focus: {\n          zIndex: \"yamcha\",\n          boxShadow: \"0px 0px 0px 1px \".concat(focusBorderColor)\n        },\n        _focusVisible: {\n          zIndex: \"yamcha\",\n          boxShadow: \"0px 0px 0px 1px \".concat(focusBorderColor)\n        }\n      };\n    },\n    textarea: _ref2 => {\n      let {\n        theme: t,\n        colorMode: m,\n        focusBorderColor: fc = \"focus\",\n        errorBorderColor: ec = [\"danger.500\", \"danger.400\"]\n      } = _ref2;\n      const focusBorderColor = isArray(fc) ? mode(getColor(fc[0], fc[0])(t, m), getColor(fc[1], fc[1])(t, m))(m) : getColor(fc, fc)(t, m);\n      const errorBorderColor = isArray(ec) ? mode(getColor(ec[0], ec[0])(t, m), getColor(ec[1], ec[1])(t, m))(m) : getColor(ec, ec)(t, m);\n      return {\n        boxSizing: \"content-box\",\n        rounded: \"md\",\n        p: \"1\",\n        w: \"full\",\n        h: \"1lh\",\n        transitionProperty: \"common\",\n        transitionDuration: \"normal\",\n        _placeholder: {\n          opacity: 0.6\n        },\n        _invalid: {\n          boxShadow: \"0px 0px 0px 1px \".concat(errorBorderColor)\n        },\n        _focus: {\n          zIndex: \"yamcha\",\n          boxShadow: \"0px 0px 0px 1px \".concat(focusBorderColor)\n        },\n        _focusVisible: {\n          zIndex: \"yamcha\",\n          boxShadow: \"0px 0px 0px 1px \".concat(focusBorderColor)\n        }\n      };\n    }\n  }\n};\nexport { Editable };","map":{"version":3,"names":["mode","getColor","isArray","Editable","baseStyle","container","w","preview","rounded","p","whiteSpace","transitionProperty","transitionDuration","input","_ref","theme","t","colorMode","m","focusBorderColor","fc","errorBorderColor","ec","_placeholder","opacity","_invalid","boxShadow","concat","_focus","zIndex","_focusVisible","textarea","_ref2","boxSizing","h"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\theme\\src\\components\\editable.ts"],"sourcesContent":["import type { ComponentMultiStyle } from \"@yamada-ui/core\"\nimport { mode } from \"@yamada-ui/core\"\nimport { getColor, isArray } from \"@yamada-ui/utils\"\n\nexport const Editable: ComponentMultiStyle = {\n  baseStyle: {\n    container: {\n      w: \"full\",\n    },\n    preview: {\n      rounded: \"md\",\n      p: \"1\",\n      whiteSpace: \"pre-line\",\n      transitionProperty: \"common\",\n      transitionDuration: \"normal\",\n    },\n    input: ({\n      theme: t,\n      colorMode: m,\n      focusBorderColor: fc = \"focus\",\n      errorBorderColor: ec = [\"danger.500\", \"danger.400\"],\n    }) => {\n      const focusBorderColor = isArray(fc)\n        ? mode(getColor(fc[0], fc[0])(t, m), getColor(fc[1], fc[1])(t, m))(m)\n        : getColor(fc, fc)(t, m)\n      const errorBorderColor = isArray(ec)\n        ? mode(getColor(ec[0], ec[0])(t, m), getColor(ec[1], ec[1])(t, m))(m)\n        : getColor(ec, ec)(t, m)\n\n      return {\n        rounded: \"md\",\n        p: \"1\",\n        w: \"full\",\n        transitionProperty: \"common\",\n        transitionDuration: \"normal\",\n        _placeholder: { opacity: 0.6 },\n        _invalid: {\n          boxShadow: `0px 0px 0px 1px ${errorBorderColor}`,\n        },\n        _focus: {\n          zIndex: \"yamcha\",\n          boxShadow: `0px 0px 0px 1px ${focusBorderColor}`,\n        },\n        _focusVisible: {\n          zIndex: \"yamcha\",\n          boxShadow: `0px 0px 0px 1px ${focusBorderColor}`,\n        },\n      }\n    },\n    textarea: ({\n      theme: t,\n      colorMode: m,\n      focusBorderColor: fc = \"focus\",\n      errorBorderColor: ec = [\"danger.500\", \"danger.400\"],\n    }) => {\n      const focusBorderColor = isArray(fc)\n        ? mode(getColor(fc[0], fc[0])(t, m), getColor(fc[1], fc[1])(t, m))(m)\n        : getColor(fc, fc)(t, m)\n      const errorBorderColor = isArray(ec)\n        ? mode(getColor(ec[0], ec[0])(t, m), getColor(ec[1], ec[1])(t, m))(m)\n        : getColor(ec, ec)(t, m)\n\n      return {\n        boxSizing: \"content-box\",\n        rounded: \"md\",\n        p: \"1\",\n        w: \"full\",\n        h: \"1lh\",\n        transitionProperty: \"common\",\n        transitionDuration: \"normal\",\n        _placeholder: { opacity: 0.6 },\n        _invalid: {\n          boxShadow: `0px 0px 0px 1px ${errorBorderColor}`,\n        },\n        _focus: {\n          zIndex: \"yamcha\",\n          boxShadow: `0px 0px 0px 1px ${focusBorderColor}`,\n        },\n        _focusVisible: {\n          zIndex: \"yamcha\",\n          boxShadow: `0px 0px 0px 1px ${focusBorderColor}`,\n        },\n      }\n    },\n  },\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
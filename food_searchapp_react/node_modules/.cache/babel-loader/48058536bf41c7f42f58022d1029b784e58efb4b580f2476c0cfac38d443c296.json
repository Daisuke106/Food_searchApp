{"ast":null,"code":"\"use client\";\n\nimport { Skeleton } from \"./chunk-CYUQOKYE.mjs\";\n\n// src/skeleton-circle.tsx\nimport { forwardRef as forwardRef2 } from \"@yamada-ui/core\";\nimport { cx as cx2, getValidChildren } from \"@yamada-ui/utils\";\n\n// src/skeleton-text.tsx\nimport { ui, forwardRef } from \"@yamada-ui/core\";\nimport { useValue } from \"@yamada-ui/use-value\";\nimport { cx } from \"@yamada-ui/utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SkeletonText = forwardRef((_ref, ref) => {\n  let {\n    className,\n    lineClamp = 3,\n    startColor,\n    endColor,\n    fadeDuration,\n    speed,\n    isLoaded,\n    gap = \"fallback(2, 0.5rem)\",\n    textHeight = \"fallback(2, 0.5rem)\",\n    children,\n    ...rest\n  } = _ref;\n  const computedLineClamp = useValue(lineClamp);\n  const css = {\n    w: \"100%\"\n  };\n  return /* @__PURE__ */jsx(ui.div, {\n    ref,\n    className: cx(\"ui-skeleton__text\", className),\n    __css: css,\n    ...rest,\n    children: Array(computedLineClamp).fill(0).map((_, index) => {\n      if (isLoaded && index > 0) return null;\n      const isLast = index + 1 === computedLineClamp;\n      const props = !isLoaded ? {\n        mb: !isLast ? gap : void 0,\n        w: computedLineClamp > 1 ? !isLast ? \"100%\" : \"80%\" : \"100%\",\n        h: textHeight\n      } : {};\n      return /* @__PURE__ */jsx(Skeleton, {\n        ...{\n          startColor,\n          endColor,\n          fadeDuration,\n          speed,\n          isLoaded,\n          ...props\n        },\n        children: index === 0 ? children : void 0\n      }, index);\n    })\n  });\n});\n\n// src/skeleton-circle.tsx\nimport { jsx as jsx2 } from \"react/jsx-runtime\";\nvar SkeletonCircle = forwardRef2((_ref2, ref) => {\n  let {\n    className,\n    boxSize = \"fallback(12, 3rem)\",\n    children,\n    isFitContent,\n    ...rest\n  } = _ref2;\n  const validChildren = getValidChildren(children);\n  const hasChildren = !!validChildren.length;\n  isFitContent != null ? isFitContent : isFitContent = hasChildren;\n  return /* @__PURE__ */jsx2(Skeleton, {\n    ref,\n    className: cx2(\"ui-skeleton__circle\", className),\n    rounded: \"fallback(full, 9999px)\",\n    isFitContent,\n    ...(!isFitContent ? {\n      boxSize\n    } : {}),\n    ...rest,\n    children: validChildren\n  });\n});\nexport { SkeletonCircle, SkeletonText };","map":{"version":3,"names":["forwardRef","forwardRef2","cx","cx2","getValidChildren","ui","useValue","jsx","SkeletonText","_ref","ref","className","lineClamp","startColor","endColor","fadeDuration","speed","isLoaded","gap","textHeight","children","rest","computedLineClamp","css","w","div","__css","Array","fill","map","_","index","isLast","props","mb","h","Skeleton","jsx2","SkeletonCircle","_ref2","boxSize","isFitContent","validChildren","hasChildren","length","rounded"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\skeleton\\src\\skeleton-circle.tsx","C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\skeleton\\src\\skeleton-text.tsx"],"sourcesContent":["import { forwardRef } from \"@yamada-ui/core\"\nimport { cx, getValidChildren } from \"@yamada-ui/utils\"\nimport type { SkeletonProps } from \"./\"\nimport { Skeleton } from \"./\"\n\nexport type SkeletonCircleProps = SkeletonProps\n\nexport const SkeletonCircle = forwardRef<SkeletonCircleProps, \"div\">(\n  (\n    {\n      className,\n      boxSize = \"fallback(12, 3rem)\",\n      children,\n      isFitContent,\n      ...rest\n    },\n    ref,\n  ) => {\n    const validChildren = getValidChildren(children)\n    const hasChildren = !!validChildren.length\n\n    isFitContent ??= hasChildren\n\n    return (\n      <Skeleton\n        ref={ref}\n        className={cx(\"ui-skeleton__circle\", className)}\n        rounded=\"fallback(full, 9999px)\"\n        isFitContent={isFitContent}\n        {...(!isFitContent ? { boxSize } : {})}\n        {...rest}\n      >\n        {validChildren}\n      </Skeleton>\n    )\n  },\n)\n","import type { CSSUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { useValue } from \"@yamada-ui/use-value\"\nimport { cx } from \"@yamada-ui/utils\"\nimport type { SkeletonProps } from \"./\"\nimport { Skeleton } from \"./\"\n\ntype SkeletonTextOptions = {\n  /**\n   * The CSS `gap` property.\n   */\n  gap?: CSSUIProps[\"gap\"]\n  /**\n   * The CSS `height` property.\n   */\n  textHeight?: CSSUIProps[\"height\"]\n}\n\nexport type SkeletonTextProps = SkeletonProps & SkeletonTextOptions\n\nexport const SkeletonText = forwardRef<SkeletonTextProps, \"div\">(\n  (\n    {\n      className,\n      lineClamp = 3,\n      startColor,\n      endColor,\n      fadeDuration,\n      speed,\n      isLoaded,\n      gap = \"fallback(2, 0.5rem)\",\n      textHeight = \"fallback(2, 0.5rem)\",\n      children,\n      ...rest\n    },\n    ref,\n  ) => {\n    const computedLineClamp = useValue(lineClamp)\n\n    const css: CSSUIObject = {\n      w: \"100%\",\n    }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-skeleton__text\", className)}\n        __css={css}\n        {...rest}\n      >\n        {Array(computedLineClamp)\n          .fill(0)\n          .map((_, index) => {\n            if (isLoaded && index > 0) return null\n\n            const isLast = index + 1 === computedLineClamp\n\n            const props: SkeletonProps = !isLoaded\n              ? {\n                  mb: !isLast ? gap : undefined,\n                  w:\n                    computedLineClamp > 1 ? (!isLast ? \"100%\" : \"80%\") : \"100%\",\n                  h: textHeight,\n                }\n              : {}\n\n            return (\n              <Skeleton\n                key={index}\n                {...{\n                  startColor,\n                  endColor,\n                  fadeDuration,\n                  speed,\n                  isLoaded,\n                  ...props,\n                }}\n              >\n                {index === 0 ? children : undefined}\n              </Skeleton>\n            )\n          })}\n      </ui.div>\n    )\n  },\n)\n"],"mappings":";;;;;AAAA,SAASA,UAAA,IAAAC,WAAA,QAAkB;AAC3B,SAASC,EAAA,IAAAC,GAAA,EAAIC,gBAAA,QAAwB;;;ACArC,SAASC,EAAA,EAAIL,UAAA,QAAkB;AAC/B,SAASM,QAAA,QAAgB;AACzB,SAASJ,EAAA,QAAU;AAgEL,SAAAK,GAAA;AA/CP,IAAMC,YAAA,GAAeR,UAAA,CAC1B,CAAAS,IAAA,EAcEC,GAAA,KACG;EAAA,IAdH;IACEC,SAAA;IACAC,SAAA,GAAY;IACZC,UAAA;IACAC,QAAA;IACAC,YAAA;IACAC,KAAA;IACAC,QAAA;IACAC,GAAA,GAAM;IACNC,UAAA,GAAa;IACbC,QAAA;IACA,GAAGC;EACL,IAAAZ,IAAA;EAGA,MAAMa,iBAAA,GAAoBhB,QAAA,CAASM,SAAS;EAE5C,MAAMW,GAAA,GAAmB;IACvBC,CAAA,EAAG;EACL;EAEA,OACE,eAAAjB,GAAA,CAACF,EAAA,CAAGoB,GAAA,EAAH;IACCf,GAAA;IACAC,SAAA,EAAWT,EAAA,CAAG,qBAAqBS,SAAS;IAC5Ce,KAAA,EAAOH,GAAA;IACN,GAAGF,IAAA;IAEHD,QAAA,EAAAO,KAAA,CAAML,iBAAiB,EACrBM,IAAA,CAAK,CAAC,EACNC,GAAA,CAAI,CAACC,CAAA,EAAGC,KAAA,KAAU;MACjB,IAAId,QAAA,IAAYc,KAAA,GAAQ,GAAG,OAAO;MAElC,MAAMC,MAAA,GAASD,KAAA,GAAQ,MAAMT,iBAAA;MAE7B,MAAMW,KAAA,GAAuB,CAAChB,QAAA,GAC1B;QACEiB,EAAA,EAAI,CAACF,MAAA,GAASd,GAAA,GAAM;QACpBM,CAAA,EACEF,iBAAA,GAAoB,IAAK,CAACU,MAAA,GAAS,SAAS,QAAS;QACvDG,CAAA,EAAGhB;MACL,IACA,CAAC;MAEL,OACE,eAAAZ,GAAA,CAAC6B,QAAA;QAEE,GAAG;UACFvB,UAAA;UACAC,QAAA;UACAC,YAAA;UACAC,KAAA;UACAC,QAAA;UACA,GAAGgB;QACL;QAECb,QAAA,EAAAW,KAAA,KAAU,IAAIX,QAAA,GAAW;MAAA,GAVrBW,KAWP;IAEJ,CAAC;EAAA,CACL;AAEJ,CACF;;;AD7DM,SAAAxB,GAAA,IAAA8B,IAAA;AAjBC,IAAMC,cAAA,GAAiBrC,WAAA,CAC5B,CAAAsC,KAAA,EAQE7B,GAAA,KACG;EAAA,IARH;IACEC,SAAA;IACA6B,OAAA,GAAU;IACVpB,QAAA;IACAqB,YAAA;IACA,GAAGpB;EACL,IAAAkB,KAAA;EAGA,MAAMG,aAAA,GAAgBtC,gBAAA,CAAiBgB,QAAQ;EAC/C,MAAMuB,WAAA,GAAc,CAAC,CAACD,aAAA,CAAcE,MAAA;EAEpCH,YAAA,WAAAA,YAAA,GAAAA,YAAA,GAAiBE,WAAA;EAEjB,OACE,eAAAN,IAAA,CAACD,QAAA;IACC1B,GAAA;IACAC,SAAA,EAAWR,GAAA,CAAG,uBAAuBQ,SAAS;IAC9CkC,OAAA,EAAQ;IACRJ,YAAA;IACC,IAAI,CAACA,YAAA,GAAe;MAAED;IAAQ,IAAI,CAAC;IACnC,GAAGnB,IAAA;IAEHD,QAAA,EAAAsB;EAAA,CACH;AAEJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
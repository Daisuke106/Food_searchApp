{"ast":null,"code":"\"use client\";\n\n// src/range-slider.tsx\nimport { ui, forwardRef, useMultiComponentStyle, omitThemeProps } from \"@yamada-ui/core\";\nimport { useFormControlProps, formControlProperties } from \"@yamada-ui/form-control\";\nimport { useControllableState } from \"@yamada-ui/use-controllable-state\";\nimport { useLatestRef } from \"@yamada-ui/use-latest-ref\";\nimport { usePanEvent } from \"@yamada-ui/use-pan-event\";\nimport { useSizes } from \"@yamada-ui/use-size\";\nimport { clampNumber, createContext, cx, dataAttr, omitChildren, findChildren, getValidChildren, handlerAll, isArray, isEmpty, mergeRefs, percentToValue, pickObject, roundNumberToStep, useCallbackRef, useUpdateEffect, valueToPercent, includesChildren } from \"@yamada-ui/utils\";\nimport { useCallback, useId, useRef, useState } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar useRangeSlider = ({\n  focusThumbOnChange = true,\n  ...props\n}) => {\n  if (!focusThumbOnChange) props.isReadOnly = true;\n  let {\n    id,\n    name,\n    min = 0,\n    max = 100,\n    step = 1,\n    defaultValue,\n    orientation = \"horizontal\",\n    isReversed,\n    betweenThumbs = 0,\n    required,\n    disabled,\n    readOnly,\n    value: valueProp,\n    onChange,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    onFocus,\n    onBlur,\n    \"aria-readonly\": ariaReadonly,\n    ...rest\n  } = useFormControlProps(props);\n  const formControlProps = pickObject(rest, formControlProperties);\n  defaultValue = defaultValue != null ? defaultValue : [min + (max - min) / 4, max - (max - min) / 4];\n  if (max < min) throw new Error(\"Do not assign a number less than 'min' to 'max'\");\n  const onChangeStart = useCallbackRef(onChangeStartProp);\n  const onChangeEnd = useCallbackRef(onChangeEndProp);\n  const [computedValues, setValues] = useControllableState({\n    value: valueProp,\n    defaultValue,\n    onChange\n  });\n  const [isDragging, setDragging] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(-1);\n  const isInteractive = !(disabled || readOnly);\n  const tenStep = (max - min) / 10;\n  const oneStep = step || (max - min) / 100;\n  const spacing = betweenThumbs * step;\n  const values = computedValues.map(value => clampNumber(value, min, max));\n  const [startValue, endValue] = values;\n  const reversedValues = values.map(value => max - value + min);\n  const thumbValues = isReversed ? reversedValues : values;\n  const thumbPercents = thumbValues.map(value => valueToPercent(value, min, max));\n  const valueBounds = [{\n    min,\n    max: endValue - spacing\n  }, {\n    min: startValue + spacing,\n    max\n  }];\n  const isVertical = orientation === \"vertical\";\n  const latestRef = useLatestRef({\n    min,\n    max,\n    step,\n    disabled,\n    values,\n    valueBounds,\n    isInteractive,\n    isReversed,\n    isVertical,\n    focusThumbOnChange,\n    betweenThumbs,\n    orientation\n  });\n  const eventSourceRef = useRef(null);\n  const containerRef = useRef(null);\n  const trackRef = useRef(null);\n  const thumbSizes = useSizes({\n    getNodes: () => {\n      var _a;\n      const nodes = (_a = containerRef.current) == null ? void 0 : _a.querySelectorAll(\"[role=slider]\");\n      return nodes ? Array.from(nodes) : [];\n    }\n  });\n  id != null ? id : id = useId();\n  name != null ? name : name = id;\n  const getThumbId = useCallback(i => `slider-thumb-${id}-${i}`, [id]);\n  const getInputId = useCallback(i => `slider-input-${id}-${i}`, [id]);\n  const getMarkerId = useCallback(i => `slider-marker-${id}-${i}`, [id]);\n  usePanEvent(containerRef, {\n    onSessionStart: ev => {\n      const {\n        isInteractive: isInteractive2,\n        values: values2\n      } = latestRef.current;\n      if (!isInteractive2) return;\n      setDragging(true);\n      const pointValue = getValueFromPointer(ev) || 0;\n      const distances = values2.map(value => Math.abs(value - pointValue));\n      const closest = Math.min(...distances);\n      let i = distances.indexOf(closest);\n      const thumbsPosition = distances.filter(distance => distance === closest);\n      const isThumbStacked = thumbsPosition.length > 1;\n      if (isThumbStacked && pointValue > values2[i]) i = i + thumbsPosition.length - 1;\n      setActiveIndex(i);\n      constrain(i, pointValue);\n      focusThumb(i);\n      onChangeStart(values2);\n    },\n    onSessionEnd: () => {\n      const {\n        isInteractive: isInteractive2,\n        values: values2\n      } = latestRef.current;\n      if (!isInteractive2) return;\n      setDragging(false);\n      onChangeEnd(values2);\n    },\n    onMove: ev => {\n      const {\n        isInteractive: isInteractive2\n      } = latestRef.current;\n      if (!isInteractive2 || activeIndex == -1) return;\n      const pointValue = getValueFromPointer(ev) || 0;\n      setActiveIndex(activeIndex);\n      constrain(activeIndex, pointValue);\n      focusThumb(activeIndex);\n    }\n  });\n  const getValueFromPointer = useCallback(ev => {\n    var _a, _b;\n    if (!trackRef.current) return;\n    const {\n      min: min2,\n      max: max2\n    } = latestRef.current;\n    eventSourceRef.current = \"pointer\";\n    const {\n      bottom,\n      left,\n      height,\n      width\n    } = trackRef.current.getBoundingClientRect();\n    const {\n      clientX,\n      clientY\n    } = (_b = (_a = ev.touches) == null ? void 0 : _a[0]) != null ? _b : ev;\n    const diff = isVertical ? bottom - clientY : clientX - left;\n    const length = isVertical ? height : width;\n    let percent = diff / length;\n    if (isReversed) percent = 1 - percent;\n    let nextValue = percentToValue(percent, min2, max2);\n    return nextValue;\n  }, [latestRef, isVertical, isReversed]);\n  const focusThumb = useCallback(i => {\n    var _a;\n    i != null ? i : i = activeIndex;\n    if (i === -1 || !focusThumbOnChange) return;\n    const id2 = getThumbId(i);\n    const el = (_a = containerRef.current) == null ? void 0 : _a.ownerDocument.getElementById(id2);\n    if (el) setTimeout(() => el.focus());\n  }, [activeIndex, focusThumbOnChange, getThumbId]);\n  const constrain = useCallback((i, value) => {\n    const {\n      isInteractive: isInteractive2,\n      valueBounds: valueBounds2,\n      values: values2\n    } = latestRef.current;\n    if (!isInteractive2) return;\n    const {\n      min: min2,\n      max: max2\n    } = valueBounds2[i];\n    value = parseFloat(roundNumberToStep(value, min2, oneStep));\n    value = clampNumber(value, min2, max2);\n    const nextValues = [...values2];\n    nextValues[i] = value;\n    setValues(nextValues);\n  }, [latestRef, oneStep, setValues]);\n  const stepUp = useCallback((i, step2 = oneStep) => {\n    const {\n      values: values2\n    } = latestRef.current;\n    const value = values2[i];\n    constrain(i, isReversed ? value - step2 : value + step2);\n  }, [constrain, isReversed, latestRef, oneStep]);\n  const stepDown = useCallback((i, step2 = oneStep) => {\n    const {\n      values: values2\n    } = latestRef.current;\n    const value = values2[i];\n    constrain(i, isReversed ? value + step2 : value - step2);\n  }, [constrain, isReversed, latestRef, oneStep]);\n  const reset = useCallback(() => setValues(defaultValue), [defaultValue, setValues]);\n  const onKeyDown = useCallback(ev => {\n    const {\n      valueBounds: valueBounds2\n    } = latestRef.current;\n    const {\n      min: min2,\n      max: max2\n    } = valueBounds2[activeIndex];\n    const actions = {\n      ArrowRight: () => stepUp(activeIndex),\n      ArrowUp: () => stepUp(activeIndex),\n      ArrowLeft: () => stepDown(activeIndex),\n      ArrowDown: () => stepDown(activeIndex),\n      PageUp: () => stepUp(activeIndex, tenStep),\n      PageDown: () => stepDown(activeIndex, tenStep),\n      Home: () => constrain(activeIndex, min2),\n      End: () => constrain(activeIndex, max2)\n    };\n    const action = actions[ev.key];\n    if (!action) return;\n    ev.preventDefault();\n    ev.stopPropagation();\n    action(ev);\n    eventSourceRef.current = \"keyboard\";\n  }, [activeIndex, constrain, latestRef, stepDown, stepUp, tenStep]);\n  useUpdateEffect(() => {\n    const {\n      values: values2\n    } = latestRef.current;\n    if (eventSourceRef.current === \"keyboard\") onChangeEnd(values2);\n  }, [startValue, endValue, onChangeEnd]);\n  const getContainerProps = useCallback((props2 = {}, ref = null) => {\n    var _a;\n    const z = {\n      width: 0,\n      height: 0\n    };\n    const p = isVertical ? \"height\" : \"width\";\n    const {\n      width: w,\n      height: h\n    } = (_a = thumbSizes.reduce((a = z, b = z) => a[p] > b[p] ? a : b, z)) != null ? _a : {};\n    const style = {\n      ...props2.style,\n      position: \"relative\",\n      userSelect: \"none\",\n      touchAction: \"none\",\n      WebkitTapHighlightColor: \"rgba(0, 0, 0, 0)\",\n      outline: 0,\n      ...(isVertical ? w ? {\n        paddingLeft: w / 2,\n        paddingRight: w / 2\n      } : {} : h ? {\n        paddingTop: h / 2,\n        paddingBottom: h / 2\n      } : {})\n    };\n    return {\n      ...rest,\n      ...props2,\n      id: `slider-container-${id}`,\n      ref: mergeRefs(ref, containerRef),\n      tabIndex: -1,\n      style\n    };\n  }, [id, isVertical, rest, thumbSizes]);\n  const getInputProps = useCallback(({\n    index: i,\n    ...props2\n  }, ref = null) => ({\n    \"aria-readonly\": ariaReadonly,\n    ...formControlProps,\n    ...props2,\n    ref,\n    id: getInputId(i),\n    type: \"hidden\",\n    name: isArray(name) ? name[i] : `${name}-${i}`,\n    value: values[i],\n    required,\n    disabled,\n    readOnly\n  }), [ariaReadonly, disabled, getInputId, name, readOnly, required, formControlProps, values]);\n  const getTrackProps = useCallback((props2 = {}, ref = null) => {\n    const style = {\n      ...props2.style,\n      position: \"absolute\",\n      ...(isVertical ? {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\"\n      } : {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\"\n      })\n    };\n    return {\n      ...formControlProps,\n      ...props2,\n      id: `slider-track-${id}`,\n      ref: mergeRefs(ref, trackRef),\n      style\n    };\n  }, [id, isVertical, formControlProps]);\n  const getFilledTrackProps = useCallback((props2 = {}, ref = null) => {\n    const n = Math.abs(thumbPercents[1] - thumbPercents[0]);\n    const s = isReversed ? 100 - thumbPercents[0] : thumbPercents[0];\n    const style = {\n      ...props2.style,\n      position: \"absolute\",\n      ...(isVertical ? {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: `${n}%`,\n        ...(isReversed ? {\n          top: `${s}%`\n        } : {\n          bottom: `${s}%`\n        })\n      } : {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: `${n}%`,\n        ...(isReversed ? {\n          right: `${s}%`\n        } : {\n          left: `${s}%`\n        })\n      })\n    };\n    return {\n      ...formControlProps,\n      ...props2,\n      id: `slider-filled-track-${id}`,\n      ref,\n      style\n    };\n  }, [id, isReversed, isVertical, formControlProps, thumbPercents]);\n  const getMarkProps = useCallback((props2, ref = null) => {\n    let n = valueToPercent(props2.value, min, max);\n    n = isReversed ? 100 - n : n;\n    const style = {\n      ...props2.style,\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      ...(isVertical ? {\n        bottom: `${n}%`\n      } : {\n        left: `${n}%`\n      })\n    };\n    return {\n      ...formControlProps,\n      ...props2,\n      ref,\n      id: getMarkerId(props2.value),\n      \"aria-hidden\": true,\n      \"data-invalid\": dataAttr(props2.value < min || max < props2.value),\n      \"data-highlighted\": dataAttr(values[0] <= props2.value && props2.value <= values[1]),\n      style\n    };\n  }, [getMarkerId, isReversed, isVertical, max, min, formControlProps, values]);\n  const getThumbProps = useCallback(({\n    index: i,\n    ...props2\n  }, ref = null) => {\n    var _a;\n    const n = thumbPercents[i];\n    const {\n      width: w,\n      height: h\n    } = (_a = thumbSizes[i]) != null ? _a : {\n      width: 0,\n      height: 0\n    };\n    const style = {\n      ...props2.style,\n      position: \"absolute\",\n      userSelect: \"none\",\n      touchAction: \"none\",\n      ...(isVertical ? {\n        bottom: `calc(${n}% - ${h / 2}px)`\n      } : {\n        left: `calc(${n}% - ${w / 2}px)`\n      })\n    };\n    const value = values[i];\n    if (value == null) throw new Error(`Cannot find value at index '${i}'. The 'value' or 'defaultValue'`);\n    return {\n      \"aria-label\": \"Slider thumb\",\n      \"aria-readonly\": ariaReadonly,\n      ...formControlProps,\n      ...props2,\n      ref,\n      id: getThumbId(i),\n      tabIndex: isInteractive && focusThumbOnChange ? 0 : void 0,\n      role: \"slider\",\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": value,\n      \"data-active\": dataAttr(isDragging && focusThumbOnChange && activeIndex === i),\n      \"aria-orientation\": orientation,\n      onKeyDown: handlerAll(props2.onKeyDown, onKeyDown),\n      onFocus: handlerAll(props2.onFocus, onFocus, () => {\n        setFocused(true);\n        setActiveIndex(i);\n      }),\n      onBlur: handlerAll(props2.onBlur, onBlur, () => {\n        setFocused(false);\n        setActiveIndex(-1);\n      }),\n      style\n    };\n  }, [thumbPercents, thumbSizes, isVertical, values, ariaReadonly, formControlProps, getThumbId, isInteractive, focusThumbOnChange, min, max, isDragging, activeIndex, orientation, onKeyDown, onFocus, onBlur]);\n  return {\n    values,\n    isFocused,\n    isDragging,\n    isVertical,\n    stepUp,\n    stepDown,\n    reset,\n    setActiveIndex,\n    getThumbId,\n    getInputId,\n    getMarkerId,\n    getContainerProps,\n    getInputProps,\n    getTrackProps,\n    getFilledTrackProps,\n    getMarkProps,\n    getThumbProps\n  };\n};\nvar [RangeSliderProvider, useRangeSliderContext] = createContext({\n  name: \"RangeSliderContext\",\n  errorMessage: `useRangeSliderContext returned is 'undefined'. Seems you forgot to wrap the components in \"<RangeSlider />\" `\n});\nvar RangeSlider = forwardRef((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"RangeSlider\", props);\n  const {\n    className,\n    children,\n    inputProps,\n    trackProps,\n    filledTrackProps,\n    thumbProps,\n    trackColor,\n    filledTrackColor,\n    trackSize,\n    thumbColor,\n    thumbSize,\n    ...rest\n  } = omitThemeProps(mergedProps);\n  const {\n    isVertical,\n    getContainerProps,\n    getInputProps,\n    getTrackProps,\n    getFilledTrackProps,\n    getMarkProps,\n    getThumbProps\n  } = useRangeSlider(rest);\n  const css = {\n    ...styles.container\n  };\n  const validChildren = getValidChildren(children);\n  const [customRangeSliderTrack] = findChildren(validChildren, RangeSliderTrack);\n  const [customRangeSliderStartThumb] = findChildren(validChildren, RangeSliderStartThumb);\n  const [customRangeSliderEndThumb] = findChildren(validChildren, RangeSliderEndThumb);\n  const hasRangeSliderStartThumb = includesChildren(validChildren, RangeSliderStartThumb);\n  const hasRangeSliderEndThumb = includesChildren(validChildren, RangeSliderEndThumb);\n  const cloneChildren = !isEmpty(validChildren) ? omitChildren(validChildren, RangeSliderTrack, RangeSliderStartThumb, RangeSliderEndThumb) : children;\n  return /* @__PURE__ */jsx(RangeSliderProvider, {\n    value: {\n      isVertical,\n      getTrackProps,\n      getFilledTrackProps,\n      getMarkProps,\n      getThumbProps,\n      getInputProps,\n      trackProps,\n      trackColor,\n      trackSize,\n      filledTrackProps,\n      filledTrackColor,\n      thumbProps,\n      thumbColor,\n      thumbSize,\n      inputProps,\n      styles\n    },\n    children: /* @__PURE__ */jsxs(ui.div, {\n      className: cx(\"ui-slider\", className),\n      __css: css,\n      ...getContainerProps({}, ref),\n      children: [customRangeSliderTrack != null ? customRangeSliderTrack : /* @__PURE__ */jsx(RangeSliderTrack, {}), cloneChildren, customRangeSliderStartThumb != null ? customRangeSliderStartThumb : !hasRangeSliderStartThumb ? /* @__PURE__ */jsx(RangeSliderStartThumb, {}) : null, customRangeSliderEndThumb != null ? customRangeSliderEndThumb : !hasRangeSliderEndThumb ? /* @__PURE__ */jsx(RangeSliderEndThumb, {}) : null]\n    })\n  });\n});\nvar RangeSliderTrack = forwardRef(({\n  className,\n  children,\n  filledTrackProps,\n  ...rest\n}, ref) => {\n  const {\n    styles,\n    trackProps,\n    trackColor,\n    trackSize,\n    isVertical,\n    getTrackProps\n  } = useRangeSliderContext();\n  const css = {\n    ...styles.track\n  };\n  return /* @__PURE__ */jsx(ui.div, {\n    className: cx(\"ui-slider__track\", className),\n    __css: css,\n    ...getTrackProps({\n      ...(trackColor ? {\n        bg: trackColor\n      } : {}),\n      ...(trackSize ? isVertical ? {\n        w: trackSize\n      } : {\n        h: trackSize\n      } : {}),\n      ...trackProps,\n      ...rest\n    }, ref),\n    children: children != null ? children : /* @__PURE__ */jsx(RangeSliderFilledTrack, {\n      ...filledTrackProps\n    })\n  });\n});\nvar RangeSliderFilledTrack = forwardRef(({\n  className,\n  ...rest\n}, ref) => {\n  const {\n    styles,\n    filledTrackProps,\n    filledTrackColor,\n    getFilledTrackProps\n  } = useRangeSliderContext();\n  const css = {\n    ...styles.filledTrack\n  };\n  return /* @__PURE__ */jsx(ui.div, {\n    className: cx(\"ui-slider__track-filled\", className),\n    __css: css,\n    ...getFilledTrackProps({\n      ...(filledTrackColor ? {\n        bg: filledTrackColor\n      } : {}),\n      ...filledTrackProps,\n      ...rest\n    }, ref)\n  });\n});\nvar RangeSliderMark = forwardRef(({\n  className,\n  ...rest\n}, ref) => {\n  const {\n    styles,\n    getMarkProps\n  } = useRangeSliderContext();\n  const css = {\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    ...styles.mark\n  };\n  return /* @__PURE__ */jsx(ui.div, {\n    className: cx(\"ui-slider__mark\", className),\n    __css: css,\n    ...getMarkProps(rest, ref)\n  });\n});\nvar RangeSliderThumb = forwardRef(({\n  className,\n  index,\n  children,\n  ...rest\n}, ref) => {\n  const {\n    styles,\n    thumbProps,\n    thumbColor,\n    thumbSize,\n    inputProps,\n    getThumbProps,\n    getInputProps\n  } = useRangeSliderContext();\n  const css = {\n    ...styles.thumb\n  };\n  const {\n    children: propChildren\n  } = thumbProps != null ? thumbProps : {};\n  return /* @__PURE__ */jsxs(ui.div, {\n    className: cx(\"ui-slider__thumb\", className),\n    __css: css,\n    ...getThumbProps({\n      index,\n      ...(thumbColor ? {\n        bg: thumbColor\n      } : {}),\n      ...(thumbSize ? {\n        boxSize: thumbSize\n      } : {}),\n      ...thumbProps,\n      ...rest\n    }, ref),\n    children: [/* @__PURE__ */jsx(ui.input, {\n      ...getInputProps({\n        ...inputProps,\n        index\n      }, ref)\n    }), children != null ? children : propChildren]\n  });\n});\nvar RangeSliderStartThumb = forwardRef((rest, ref) => {\n  return /* @__PURE__ */jsx(RangeSliderThumb, {\n    ref,\n    index: 0,\n    ...rest\n  });\n});\nvar RangeSliderEndThumb = forwardRef((rest, ref) => {\n  return /* @__PURE__ */jsx(RangeSliderThumb, {\n    ref,\n    index: 1,\n    ...rest\n  });\n});\nexport { useRangeSlider, RangeSlider, RangeSliderTrack, RangeSliderFilledTrack, RangeSliderMark, RangeSliderStartThumb, RangeSliderEndThumb };","map":{"version":3,"names":["ui","forwardRef","useMultiComponentStyle","omitThemeProps","useFormControlProps","formControlProperties","useControllableState","useLatestRef","usePanEvent","useSizes","clampNumber","createContext","cx","dataAttr","omitChildren","findChildren","getValidChildren","handlerAll","isArray","isEmpty","mergeRefs","percentToValue","pickObject","roundNumberToStep","useCallbackRef","useUpdateEffect","valueToPercent","includesChildren","useCallback","useId","useRef","useState","jsx","jsxs","useRangeSlider","focusThumbOnChange","props","isReadOnly","id","name","min","max","step","defaultValue","orientation","isReversed","betweenThumbs","required","disabled","readOnly","value","valueProp","onChange","onChangeStart","onChangeStartProp","onChangeEnd","onChangeEndProp","onFocus","onBlur","ariaReadonly","rest","formControlProps","Error","computedValues","setValues","isDragging","setDragging","isFocused","setFocused","activeIndex","setActiveIndex","isInteractive","tenStep","oneStep","spacing","values","map","startValue","endValue","reversedValues","thumbValues","thumbPercents","valueBounds","isVertical","latestRef","eventSourceRef","containerRef","trackRef","thumbSizes","getNodes","_a","nodes","current","querySelectorAll","Array","from","getThumbId","i","getInputId","getMarkerId","onSessionStart","ev","isInteractive2","values2","pointValue","getValueFromPointer","distances","Math","abs","closest","indexOf","thumbsPosition","filter","distance","isThumbStacked","length","constrain","focusThumb","onSessionEnd","onMove","_b","min2","max2","bottom","left","height","width","getBoundingClientRect","clientX","clientY","touches","diff","percent","nextValue","id2","el","ownerDocument","getElementById","setTimeout","focus","valueBounds2","parseFloat","nextValues","stepUp","step2","stepDown","reset","onKeyDown","actions","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","End","action","key","preventDefault","stopPropagation","getContainerProps","props2","ref","z","p","w","h","reduce","a","b","style","position","userSelect","touchAction","WebkitTapHighlightColor","outline","paddingLeft","paddingRight","paddingTop","paddingBottom","tabIndex","getInputProps","index","type","getTrackProps","transform","top","getFilledTrackProps","n","s","right","getMarkProps","pointerEvents","getThumbProps","role","RangeSliderProvider","useRangeSliderContext","errorMessage","RangeSlider","styles","mergedProps","className","children","inputProps","trackProps","filledTrackProps","thumbProps","trackColor","filledTrackColor","trackSize","thumbColor","thumbSize","css","container","validChildren","customRangeSliderTrack","RangeSliderTrack","customRangeSliderStartThumb","RangeSliderStartThumb","customRangeSliderEndThumb","RangeSliderEndThumb","hasRangeSliderStartThumb","hasRangeSliderEndThumb","cloneChildren","div","__css","track","bg","RangeSliderFilledTrack","filledTrack","RangeSliderMark","display","justifyContent","alignItems","mark","RangeSliderThumb","thumb","propChildren","boxSize","input"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\slider\\src\\range-slider.tsx"],"sourcesContent":["import type {\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n  CSSUIProps,\n  UIPropGetter,\n  RequiredUIPropGetter,\n} from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport type { FormControlOptions } from \"@yamada-ui/form-control\"\nimport {\n  useFormControlProps,\n  formControlProperties,\n} from \"@yamada-ui/form-control\"\nimport { useControllableState } from \"@yamada-ui/use-controllable-state\"\nimport { useLatestRef } from \"@yamada-ui/use-latest-ref\"\nimport { usePanEvent } from \"@yamada-ui/use-pan-event\"\nimport { useSizes } from \"@yamada-ui/use-size\"\nimport {\n  clampNumber,\n  createContext,\n  cx,\n  dataAttr,\n  omitChildren,\n  findChildren,\n  getValidChildren,\n  handlerAll,\n  isArray,\n  isEmpty,\n  mergeRefs,\n  percentToValue,\n  pickObject,\n  roundNumberToStep,\n  useCallbackRef,\n  useUpdateEffect,\n  valueToPercent,\n  includesChildren,\n} from \"@yamada-ui/utils\"\nimport type { CSSProperties, KeyboardEvent, KeyboardEventHandler } from \"react\"\nimport { useCallback, useId, useRef, useState } from \"react\"\n\nexport type UseRangeSliderProps = FormControlOptions & {\n  /**\n   * The base `id` to use for the slider.\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms.\n   */\n  name?: string | [string, string]\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   *\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   *\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments or decrements have to be made.\n   *\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider.\n   */\n  value?: [number, number]\n  /**\n   * The initial value of the slider.\n   */\n  defaultValue?: [number, number]\n  /**\n   * The orientation of the slider.\n   *\n   * @default 'horizontal'\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   */\n  isReversed?: boolean\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   *\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * The minimum distance between slider thumbs.\n   * Useful for preventing the thumbs from being too close together.\n   *\n   * @default 0\n   */\n  betweenThumbs?: number\n  /**\n   * Function called when the user starts selecting a new value.\n   */\n  onChangeStart?: (value: [number, number]) => void\n  /**\n   * Function called when the user is done selecting a new value.\n   */\n  onChangeEnd?: (value: [number, number]) => void\n  /**\n   * Function called whenever the slider value changes.\n   */\n  onChange?: (value: [number, number]) => void\n}\n\nexport const useRangeSlider = ({\n  focusThumbOnChange = true,\n  ...props\n}: UseRangeSliderProps) => {\n  if (!focusThumbOnChange) props.isReadOnly = true\n\n  let {\n    id,\n    name,\n    min = 0,\n    max = 100,\n    step = 1,\n    defaultValue,\n    orientation = \"horizontal\",\n    isReversed,\n    betweenThumbs = 0,\n    required,\n    disabled,\n    readOnly,\n    value: valueProp,\n    onChange,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    onFocus,\n    onBlur,\n    \"aria-readonly\": ariaReadonly,\n    ...rest\n  } = useFormControlProps(props)\n\n  const formControlProps = pickObject(rest, formControlProperties)\n\n  defaultValue = defaultValue ?? [min + (max - min) / 4, max - (max - min) / 4]\n\n  if (max < min)\n    throw new Error(\"Do not assign a number less than 'min' to 'max'\")\n\n  const onChangeStart = useCallbackRef(onChangeStartProp)\n  const onChangeEnd = useCallbackRef(onChangeEndProp)\n\n  const [computedValues, setValues] = useControllableState({\n    value: valueProp,\n    defaultValue,\n    onChange,\n  })\n\n  const [isDragging, setDragging] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const [activeIndex, setActiveIndex] = useState(-1)\n  const isInteractive = !(disabled || readOnly)\n\n  const tenStep = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n  const spacing = betweenThumbs * step\n\n  const values = computedValues.map((value) =>\n    clampNumber(value, min, max),\n  ) as [number, number]\n  const [startValue, endValue] = values\n  const reversedValues = values.map((value) => max - value + min) as [\n    number,\n    number,\n  ]\n  const thumbValues = isReversed ? reversedValues : values\n  const thumbPercents = thumbValues.map((value) =>\n    valueToPercent(value, min, max),\n  ) as [number, number]\n  const valueBounds = [\n    { min, max: endValue - spacing },\n    { min: startValue + spacing, max },\n  ]\n\n  const isVertical = orientation === \"vertical\"\n\n  const latestRef = useLatestRef({\n    min,\n    max,\n    step,\n    disabled,\n    values,\n    valueBounds,\n    isInteractive,\n    isReversed,\n    isVertical,\n    focusThumbOnChange,\n    betweenThumbs,\n    orientation,\n  })\n\n  const eventSourceRef = useRef<\"pointer\" | \"keyboard\" | null>(null)\n  const containerRef = useRef<HTMLElement>(null)\n  const trackRef = useRef<HTMLElement>(null)\n\n  const thumbSizes = useSizes({\n    getNodes: () => {\n      const nodes =\n        containerRef.current?.querySelectorAll<HTMLElement>(\"[role=slider]\")\n\n      return nodes ? Array.from(nodes) : []\n    },\n  })\n\n  id ??= useId()\n  name ??= id\n\n  const getThumbId = useCallback((i: number) => `slider-thumb-${id}-${i}`, [id])\n  const getInputId = useCallback((i: number) => `slider-input-${id}-${i}`, [id])\n  const getMarkerId = useCallback(\n    (i: number) => `slider-marker-${id}-${i}`,\n    [id],\n  )\n\n  usePanEvent(containerRef, {\n    onSessionStart: (ev) => {\n      const { isInteractive, values } = latestRef.current\n\n      if (!isInteractive) return\n\n      setDragging(true)\n\n      const pointValue = getValueFromPointer(ev) || 0\n      const distances = values.map((value) => Math.abs(value - pointValue)) as [\n        number,\n        number,\n      ]\n      const closest = Math.min(...distances)\n\n      let i = distances.indexOf(closest)\n\n      const thumbsPosition = distances.filter(\n        (distance) => distance === closest,\n      )\n      const isThumbStacked = thumbsPosition.length > 1\n\n      if (isThumbStacked && pointValue > values[i])\n        i = i + thumbsPosition.length - 1\n\n      setActiveIndex(i)\n      constrain(i, pointValue)\n      focusThumb(i)\n\n      onChangeStart(values)\n    },\n    onSessionEnd: () => {\n      const { isInteractive, values } = latestRef.current\n\n      if (!isInteractive) return\n\n      setDragging(false)\n      onChangeEnd(values)\n    },\n    onMove: (ev) => {\n      const { isInteractive } = latestRef.current\n\n      if (!isInteractive || activeIndex == -1) return\n\n      const pointValue = getValueFromPointer(ev) || 0\n\n      setActiveIndex(activeIndex)\n\n      constrain(activeIndex, pointValue)\n\n      focusThumb(activeIndex)\n    },\n  })\n\n  const getValueFromPointer = useCallback(\n    (ev: any) => {\n      if (!trackRef.current) return\n\n      const { min, max } = latestRef.current\n\n      eventSourceRef.current = \"pointer\"\n\n      const { bottom, left, height, width } =\n        trackRef.current.getBoundingClientRect()\n      const { clientX, clientY } = ev.touches?.[0] ?? ev\n\n      const diff = isVertical ? bottom - clientY : clientX - left\n\n      const length = isVertical ? height : width\n\n      let percent = diff / length\n\n      if (isReversed) percent = 1 - percent\n\n      let nextValue = percentToValue(percent, min, max)\n\n      return nextValue\n    },\n    [latestRef, isVertical, isReversed],\n  )\n\n  const focusThumb = useCallback(\n    (i?: number) => {\n      i ??= activeIndex\n\n      if (i === -1 || !focusThumbOnChange) return\n\n      const id = getThumbId(i)\n\n      const el = containerRef.current?.ownerDocument.getElementById(id)\n\n      if (el) setTimeout(() => el.focus())\n    },\n    [activeIndex, focusThumbOnChange, getThumbId],\n  )\n\n  const constrain = useCallback(\n    (i: number, value: number) => {\n      const { isInteractive, valueBounds, values } = latestRef.current\n\n      if (!isInteractive) return\n\n      const { min, max } = valueBounds[i]\n\n      value = parseFloat(roundNumberToStep(value, min, oneStep))\n      value = clampNumber(value, min, max)\n\n      const nextValues = [...values] as [number, number]\n\n      nextValues[i] = value\n\n      setValues(nextValues)\n    },\n    [latestRef, oneStep, setValues],\n  )\n\n  const stepUp = useCallback(\n    (i: number, step = oneStep) => {\n      const { values } = latestRef.current\n\n      const value = values[i]\n\n      constrain(i, isReversed ? value - step : value + step)\n    },\n    [constrain, isReversed, latestRef, oneStep],\n  )\n\n  const stepDown = useCallback(\n    (i: number, step = oneStep) => {\n      const { values } = latestRef.current\n\n      const value = values[i]\n\n      constrain(i, isReversed ? value + step : value - step)\n    },\n    [constrain, isReversed, latestRef, oneStep],\n  )\n\n  const reset = useCallback(\n    () => setValues(defaultValue as [number, number]),\n    [defaultValue, setValues],\n  )\n\n  const onKeyDown = useCallback(\n    (ev: KeyboardEvent<HTMLElement>) => {\n      const { valueBounds } = latestRef.current\n      const { min, max } = valueBounds[activeIndex]\n\n      const actions: Record<string, KeyboardEventHandler> = {\n        ArrowRight: () => stepUp(activeIndex),\n        ArrowUp: () => stepUp(activeIndex),\n        ArrowLeft: () => stepDown(activeIndex),\n        ArrowDown: () => stepDown(activeIndex),\n        PageUp: () => stepUp(activeIndex, tenStep),\n        PageDown: () => stepDown(activeIndex, tenStep),\n        Home: () => constrain(activeIndex, min),\n        End: () => constrain(activeIndex, max),\n      }\n\n      const action = actions[ev.key]\n\n      if (!action) return\n\n      ev.preventDefault()\n      ev.stopPropagation()\n\n      action(ev)\n\n      eventSourceRef.current = \"keyboard\"\n    },\n    [activeIndex, constrain, latestRef, stepDown, stepUp, tenStep],\n  )\n\n  useUpdateEffect(() => {\n    const { values } = latestRef.current\n\n    if (eventSourceRef.current === \"keyboard\") onChangeEnd(values)\n  }, [startValue, endValue, onChangeEnd])\n\n  const getContainerProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const z = { width: 0, height: 0 }\n      const p = isVertical ? \"height\" : \"width\"\n      const { width: w, height: h } =\n        thumbSizes.reduce((a = z, b = z) => (a[p] > b[p] ? a : b), z) ?? {}\n\n      const style: CSSProperties = {\n        ...props.style,\n        position: \"relative\",\n        userSelect: \"none\",\n        touchAction: \"none\",\n        WebkitTapHighlightColor: \"rgba(0, 0, 0, 0)\",\n        outline: 0,\n        ...(isVertical\n          ? w\n            ? { paddingLeft: w / 2, paddingRight: w / 2 }\n            : {}\n          : h\n            ? { paddingTop: h / 2, paddingBottom: h / 2 }\n            : {}),\n      }\n\n      return {\n        ...rest,\n        ...props,\n        id: `slider-container-${id}`,\n        ref: mergeRefs(ref, containerRef),\n        tabIndex: -1,\n        style,\n      }\n    },\n    [id, isVertical, rest, thumbSizes],\n  )\n\n  const getInputProps: RequiredUIPropGetter<\"input\", { index: number }> =\n    useCallback(\n      ({ index: i, ...props }, ref = null) => ({\n        \"aria-readonly\": ariaReadonly,\n        ...formControlProps,\n        ...props,\n        ref,\n        id: getInputId(i),\n        type: \"hidden\",\n        name: isArray(name) ? name[i] : `${name}-${i}`,\n        value: values[i],\n        required,\n        disabled,\n        readOnly,\n      }),\n      [\n        ariaReadonly,\n        disabled,\n        getInputId,\n        name,\n        readOnly,\n        required,\n        formControlProps,\n        values,\n      ],\n    )\n\n  const getTrackProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const style: CSSProperties = {\n        ...props.style,\n        position: \"absolute\",\n        ...(isVertical\n          ? {\n              left: \"50%\",\n              transform: \"translateX(-50%)\",\n              height: \"100%\",\n            }\n          : {\n              top: \"50%\",\n              transform: \"translateY(-50%)\",\n              width: \"100%\",\n            }),\n      }\n\n      return {\n        ...formControlProps,\n        ...props,\n        id: `slider-track-${id}`,\n        ref: mergeRefs(ref, trackRef),\n        style,\n      }\n    },\n    [id, isVertical, formControlProps],\n  )\n\n  const getFilledTrackProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const n = Math.abs(thumbPercents[1] - thumbPercents[0])\n      const s = isReversed ? 100 - thumbPercents[0] : thumbPercents[0]\n\n      const style: CSSProperties = {\n        ...props.style,\n        position: \"absolute\",\n        ...(isVertical\n          ? {\n              left: \"50%\",\n              transform: \"translateX(-50%)\",\n              height: `${n}%`,\n              ...(isReversed ? { top: `${s}%` } : { bottom: `${s}%` }),\n            }\n          : {\n              top: \"50%\",\n              transform: \"translateY(-50%)\",\n              width: `${n}%`,\n              ...(isReversed ? { right: `${s}%` } : { left: `${s}%` }),\n            }),\n      }\n\n      return {\n        ...formControlProps,\n        ...props,\n        id: `slider-filled-track-${id}`,\n        ref,\n        style,\n      }\n    },\n    [id, isReversed, isVertical, formControlProps, thumbPercents],\n  )\n\n  const getMarkProps: RequiredUIPropGetter<\"div\", { value: number }> =\n    useCallback(\n      (props, ref = null) => {\n        let n = valueToPercent(props.value, min, max)\n        n = isReversed ? 100 - n : n\n\n        const style: CSSProperties = {\n          ...props.style,\n          position: \"absolute\",\n          pointerEvents: \"none\",\n          ...(isVertical ? { bottom: `${n}%` } : { left: `${n}%` }),\n        }\n\n        return {\n          ...formControlProps,\n          ...props,\n          ref,\n          id: getMarkerId(props.value),\n          \"aria-hidden\": true,\n          \"data-invalid\": dataAttr(props.value < min || max < props.value),\n          \"data-highlighted\": dataAttr(\n            values[0] <= props.value && props.value <= values[1],\n          ),\n          style,\n        }\n      },\n      [getMarkerId, isReversed, isVertical, max, min, formControlProps, values],\n    )\n\n  const getThumbProps: RequiredUIPropGetter<\"div\", { index: number }> =\n    useCallback(\n      ({ index: i, ...props }, ref = null) => {\n        const n = thumbPercents[i]\n        const { width: w, height: h } = thumbSizes[i] ?? { width: 0, height: 0 }\n\n        const style: CSSProperties = {\n          ...props.style,\n          position: \"absolute\",\n          userSelect: \"none\",\n          touchAction: \"none\",\n          ...(isVertical\n            ? { bottom: `calc(${n}% - ${h / 2}px)` }\n            : { left: `calc(${n}% - ${w / 2}px)` }),\n        }\n\n        const value = values[i]\n\n        if (value == null)\n          throw new Error(\n            `Cannot find value at index '${i}'. The 'value' or 'defaultValue'`,\n          )\n\n        return {\n          \"aria-label\": \"Slider thumb\",\n          \"aria-readonly\": ariaReadonly,\n          ...formControlProps,\n          ...props,\n          ref,\n          id: getThumbId(i),\n          tabIndex: isInteractive && focusThumbOnChange ? 0 : undefined,\n          role: \"slider\",\n          \"aria-valuemin\": min,\n          \"aria-valuemax\": max,\n          \"aria-valuenow\": value,\n          \"data-active\": dataAttr(\n            isDragging && focusThumbOnChange && activeIndex === i,\n          ),\n          \"aria-orientation\": orientation,\n          onKeyDown: handlerAll(props.onKeyDown, onKeyDown),\n          onFocus: handlerAll(props.onFocus, onFocus, () => {\n            setFocused(true)\n            setActiveIndex(i)\n          }),\n          onBlur: handlerAll(props.onBlur, onBlur, () => {\n            setFocused(false)\n            setActiveIndex(-1)\n          }),\n          style,\n        }\n      },\n      [\n        thumbPercents,\n        thumbSizes,\n        isVertical,\n        values,\n        ariaReadonly,\n        formControlProps,\n        getThumbId,\n        isInteractive,\n        focusThumbOnChange,\n        min,\n        max,\n        isDragging,\n        activeIndex,\n        orientation,\n        onKeyDown,\n        onFocus,\n        onBlur,\n      ],\n    )\n\n  return {\n    values,\n    isFocused,\n    isDragging,\n    isVertical,\n    stepUp,\n    stepDown,\n    reset,\n    setActiveIndex,\n    getThumbId,\n    getInputId,\n    getMarkerId,\n    getContainerProps,\n    getInputProps,\n    getTrackProps,\n    getFilledTrackProps,\n    getMarkProps,\n    getThumbProps,\n  }\n}\n\nexport type ReturnUseRangeSliderProps = ReturnType<typeof useRangeSlider>\n\ntype RangeSliderContext = Pick<\n  ReturnUseRangeSliderProps,\n  | \"isVertical\"\n  | \"getTrackProps\"\n  | \"getFilledTrackProps\"\n  | \"getMarkProps\"\n  | \"getThumbProps\"\n  | \"getInputProps\"\n> &\n  RangeSliderOptions & {\n    styles: Record<string, CSSUIObject>\n  }\n\nconst [RangeSliderProvider, useRangeSliderContext] =\n  createContext<RangeSliderContext>({\n    name: \"RangeSliderContext\",\n    errorMessage: `useRangeSliderContext returned is 'undefined'. Seems you forgot to wrap the components in \"<RangeSlider />\" `,\n  })\n\ntype RangeSliderOptions = {\n  /**\n   * Props for range slider input element.\n   */\n  inputProps?: HTMLUIProps<\"input\">\n  /**\n   * Props for range slider track element.\n   */\n  trackProps?: RangeSliderTrackProps\n  /**\n   * Props for range slider filled track element.\n   */\n  filledTrackProps?: RangeSliderFilledTrackProps\n  /**\n   * Props for range slider thumb element.\n   */\n  thumbProps?: RangeSliderThumbProps\n  /**\n   * The CSS `color` property. Used in `color` of track element.\n   */\n  trackColor?: CSSUIProps[\"color\"]\n  /**\n   * The CSS `color` property. Used in `color` of filled track element.\n   */\n  filledTrackColor?: CSSUIProps[\"color\"]\n  /**\n   * The CSS `height` property. Used in `height` of track element.\n   */\n  trackSize?: CSSUIProps[\"h\"]\n  /**\n   * The CSS `background` property. Used in `background` of thumb element.\n   */\n  thumbColor?: CSSUIProps[\"bg\"]\n  /**\n   * The CSS `box-size` property. Used in `box-size` of thumb element.\n   */\n  thumbSize?: CSSUIProps[\"boxSize\"]\n}\n\nexport type RangeSliderProps = Omit<\n  HTMLUIProps<\"div\">,\n  keyof UseRangeSliderProps\n> &\n  ThemeProps<\"RangeSlider\"> &\n  UseRangeSliderProps &\n  RangeSliderOptions\n\n/**\n * `RangeSlider` is a component used for users to select a range of related values.\n *\n * @see Docs https://yamada-ui.com/components/forms/range-slider\n */\nexport const RangeSlider = forwardRef<RangeSliderProps, \"div\">((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"RangeSlider\", props)\n  const {\n    className,\n    children,\n    inputProps,\n    trackProps,\n    filledTrackProps,\n    thumbProps,\n    trackColor,\n    filledTrackColor,\n    trackSize,\n    thumbColor,\n    thumbSize,\n    ...rest\n  } = omitThemeProps(mergedProps)\n  const {\n    isVertical,\n    getContainerProps,\n    getInputProps,\n    getTrackProps,\n    getFilledTrackProps,\n    getMarkProps,\n    getThumbProps,\n  } = useRangeSlider(rest)\n\n  const css: CSSUIObject = { ...styles.container }\n\n  const validChildren = getValidChildren(children)\n\n  const [customRangeSliderTrack] = findChildren(validChildren, RangeSliderTrack)\n  const [customRangeSliderStartThumb] = findChildren(\n    validChildren,\n    RangeSliderStartThumb,\n  )\n  const [customRangeSliderEndThumb] = findChildren(\n    validChildren,\n    RangeSliderEndThumb,\n  )\n\n  const hasRangeSliderStartThumb = includesChildren(\n    validChildren,\n    RangeSliderStartThumb,\n  )\n  const hasRangeSliderEndThumb = includesChildren(\n    validChildren,\n    RangeSliderEndThumb,\n  )\n\n  const cloneChildren = !isEmpty(validChildren)\n    ? omitChildren(\n        validChildren,\n        RangeSliderTrack,\n        RangeSliderStartThumb,\n        RangeSliderEndThumb,\n      )\n    : children\n\n  return (\n    <RangeSliderProvider\n      value={{\n        isVertical,\n        getTrackProps,\n        getFilledTrackProps,\n        getMarkProps,\n        getThumbProps,\n        getInputProps,\n        trackProps,\n        trackColor,\n        trackSize,\n        filledTrackProps,\n        filledTrackColor,\n        thumbProps,\n        thumbColor,\n        thumbSize,\n        inputProps,\n        styles,\n      }}\n    >\n      <ui.div\n        className={cx(\"ui-slider\", className)}\n        __css={css}\n        {...getContainerProps({}, ref)}\n      >\n        {customRangeSliderTrack ?? <RangeSliderTrack />}\n\n        {cloneChildren}\n\n        {customRangeSliderStartThumb ??\n          (!hasRangeSliderStartThumb ? <RangeSliderStartThumb /> : null)}\n        {customRangeSliderEndThumb ??\n          (!hasRangeSliderEndThumb ? <RangeSliderEndThumb /> : null)}\n      </ui.div>\n    </RangeSliderProvider>\n  )\n})\n\nexport type RangeSliderTrackProps = HTMLUIProps<\"div\"> &\n  Pick<RangeSliderOptions, \"filledTrackProps\">\n\nexport const RangeSliderTrack = forwardRef<RangeSliderTrackProps, \"div\">(\n  ({ className, children, filledTrackProps, ...rest }, ref) => {\n    const {\n      styles,\n      trackProps,\n      trackColor,\n      trackSize,\n      isVertical,\n      getTrackProps,\n    } = useRangeSliderContext()\n\n    const css: CSSUIObject = { ...styles.track }\n\n    return (\n      <ui.div\n        className={cx(\"ui-slider__track\", className)}\n        __css={css}\n        {...getTrackProps(\n          {\n            ...(trackColor ? { bg: trackColor } : {}),\n            ...(trackSize\n              ? isVertical\n                ? { w: trackSize }\n                : { h: trackSize }\n              : {}),\n            ...trackProps,\n            ...rest,\n          },\n          ref,\n        )}\n      >\n        {children ?? <RangeSliderFilledTrack {...filledTrackProps} />}\n      </ui.div>\n    )\n  },\n)\n\nexport type RangeSliderFilledTrackProps = HTMLUIProps<\"div\">\n\nexport const RangeSliderFilledTrack = forwardRef<\n  RangeSliderFilledTrackProps,\n  \"div\"\n>(({ className, ...rest }, ref) => {\n  const { styles, filledTrackProps, filledTrackColor, getFilledTrackProps } =\n    useRangeSliderContext()\n\n  const css: CSSUIObject = { ...styles.filledTrack }\n\n  return (\n    <ui.div\n      className={cx(\"ui-slider__track-filled\", className)}\n      __css={css}\n      {...getFilledTrackProps(\n        {\n          ...(filledTrackColor ? { bg: filledTrackColor } : {}),\n          ...filledTrackProps,\n          ...rest,\n        },\n        ref,\n      )}\n    />\n  )\n})\n\nexport type RangeSliderMarkProps = HTMLUIProps<\"div\"> & { value: number }\n\nexport const RangeSliderMark = forwardRef<RangeSliderMarkProps, \"div\">(\n  ({ className, ...rest }, ref) => {\n    const { styles, getMarkProps } = useRangeSliderContext()\n\n    const css: CSSUIObject = {\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      ...styles.mark,\n    }\n\n    return (\n      <ui.div\n        className={cx(\"ui-slider__mark\", className)}\n        __css={css}\n        {...getMarkProps(rest, ref)}\n      />\n    )\n  },\n)\n\nexport type RangeSliderThumbProps = HTMLUIProps<\"div\">\n\nconst RangeSliderThumb = forwardRef<\n  RangeSliderThumbProps & { index: number },\n  \"div\"\n>(({ className, index, children, ...rest }, ref) => {\n  const {\n    styles,\n    thumbProps,\n    thumbColor,\n    thumbSize,\n    inputProps,\n    getThumbProps,\n    getInputProps,\n  } = useRangeSliderContext()\n\n  const css: CSSUIObject = { ...styles.thumb }\n\n  const { children: propChildren } = thumbProps ?? {}\n\n  return (\n    <ui.div\n      className={cx(\"ui-slider__thumb\", className)}\n      __css={css}\n      {...getThumbProps(\n        {\n          index,\n          ...(thumbColor ? { bg: thumbColor } : {}),\n          ...(thumbSize ? { boxSize: thumbSize } : {}),\n          ...thumbProps,\n          ...rest,\n        },\n        ref,\n      )}\n    >\n      <ui.input {...getInputProps({ ...inputProps, index }, ref)} />\n      {children ?? propChildren}\n    </ui.div>\n  )\n})\n\nexport const RangeSliderStartThumb = forwardRef<RangeSliderThumbProps, \"div\">(\n  (rest, ref) => {\n    return <RangeSliderThumb ref={ref} index={0} {...rest} />\n  },\n)\n\nexport const RangeSliderEndThumb = forwardRef<RangeSliderThumbProps, \"div\">(\n  (rest, ref) => {\n    return <RangeSliderThumb ref={ref} index={1} {...rest} />\n  },\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
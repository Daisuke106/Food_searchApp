{"ast":null,"code":"\"use client\";\n\n// src/skeleton.tsx\nimport { ui, forwardRef, omitThemeProps, useComponentStyle } from \"@yamada-ui/core\";\nimport { useAnimation } from \"@yamada-ui/use-animation\";\nimport { usePrevious } from \"@yamada-ui/use-previous\";\nimport { useValue } from \"@yamada-ui/use-value\";\nimport { cx, getValidChildren, useIsMounted } from \"@yamada-ui/utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Skeleton = forwardRef((props, ref) => {\n  const [styles, mergedProps] = useComponentStyle(\"Skeleton\", props);\n  let {\n    className,\n    startColor,\n    endColor,\n    fadeDuration = 0.4,\n    speed = 0.8,\n    isLoaded,\n    isFitContent,\n    children,\n    ...rest\n  } = omitThemeProps(mergedProps);\n  const [isMounted] = useIsMounted();\n  const validChildren = getValidChildren(children);\n  const prevIsLoaded = usePrevious(isLoaded);\n  const computedStartColor = useValue(startColor);\n  const computedEndColor = useValue(endColor);\n  const hasChildren = !!validChildren.length;\n  isFitContent != null ? isFitContent : isFitContent = hasChildren;\n  const fadeIn = useAnimation({\n    keyframes: {\n      \"0%\": {\n        opacity: 0\n      },\n      \"100%\": {\n        opacity: 1\n      }\n    },\n    duration: typeof fadeDuration === \"string\" ? fadeDuration : `${fadeDuration}s`\n  });\n  const animation = useAnimation({\n    keyframes: {\n      \"0%\": {\n        borderColor: computedStartColor,\n        background: computedStartColor\n      },\n      \"100%\": {\n        borderColor: computedEndColor,\n        background: computedEndColor\n      }\n    },\n    duration: typeof speed === \"string\" ? speed : `${speed}s`,\n    iterationCount: \"infinite\",\n    direction: \"alternate\",\n    timingFunction: \"linear\"\n  });\n  const css = {\n    w: isFitContent ? \"fit-content\" : \"100%\",\n    maxW: \"100%\",\n    h: isFitContent ? \"fit-content\" : \"fallback(4, 1rem)\",\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    },\n    ...styles\n  };\n  if (isLoaded) {\n    const animation2 = !isMounted() || prevIsLoaded ? \"none\" : fadeIn;\n    return /* @__PURE__ */jsx(ui.div, {\n      ref,\n      className: cx(\"ui-skeleton\", \"ui-skeleton--loaded\", className),\n      ...rest,\n      animation: animation2,\n      children: validChildren\n    });\n  } else {\n    return /* @__PURE__ */jsx(ui.div, {\n      ref,\n      className: cx(\"ui-skeleton\", className),\n      __css: css,\n      ...rest,\n      animation,\n      children: validChildren\n    });\n  }\n});\nexport { Skeleton };","map":{"version":3,"names":["ui","forwardRef","omitThemeProps","useComponentStyle","useAnimation","usePrevious","useValue","cx","getValidChildren","useIsMounted","jsx","Skeleton","props","ref","styles","mergedProps","className","startColor","endColor","fadeDuration","speed","isLoaded","isFitContent","children","rest","isMounted","validChildren","prevIsLoaded","computedStartColor","computedEndColor","hasChildren","length","fadeIn","keyframes","opacity","duration","animation","borderColor","background","iterationCount","direction","timingFunction","css","w","maxW","h","boxShadow","backgroundClip","cursor","color","pointerEvents","userSelect","visibility","animation2","div","__css"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\skeleton\\src\\skeleton.tsx"],"sourcesContent":["import type {\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n  CSSUIProps,\n} from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  omitThemeProps,\n  useComponentStyle,\n} from \"@yamada-ui/core\"\nimport { useAnimation } from \"@yamada-ui/use-animation\"\nimport { usePrevious } from \"@yamada-ui/use-previous\"\nimport { useValue } from \"@yamada-ui/use-value\"\nimport { cx, getValidChildren, useIsMounted } from \"@yamada-ui/utils\"\n\ntype SkeletonOptions = {\n  /**\n   * The color at the animation start.\n   */\n  startColor?: CSSUIProps[\"color\"]\n  /**\n   * The color at the animation end.\n   */\n  endColor?: CSSUIProps[\"color\"]\n  /**\n   * If `true`, it'll render its children with a nice fade transition.\n   *\n   * @default false\n   */\n  isLoaded?: boolean\n  /**\n   * The animation speed in seconds.\n   *\n   * @default 0.8\n   */\n  speed?: string | number\n  /**\n   * The fadeIn duration in seconds. Requires `isLoaded` toggled to `true` in order to see the transition.\n   *\n   * @default 0.4\n   */\n  fadeDuration?: string | number\n  /**\n   * If `true`, the skeleton will take the width of it's children.\n   *\n   * @default false\n   */\n  isFitContent?: boolean\n}\n\nexport type SkeletonProps = HTMLUIProps<\"div\"> &\n  ThemeProps<\"Skeleton\"> &\n  SkeletonOptions\n\n/**\n * `Skeleton` is a component that acts as a placeholder until content is loaded.\n *\n * @see Docs https://yamada-ui.com/components/feedback/skeleton\n */\nexport const Skeleton = forwardRef<SkeletonProps, \"div\">((props, ref) => {\n  const [styles, mergedProps] = useComponentStyle(\"Skeleton\", props)\n  let {\n    className,\n    startColor,\n    endColor,\n    fadeDuration = 0.4,\n    speed = 0.8,\n    isLoaded,\n    isFitContent,\n    children,\n    ...rest\n  } = omitThemeProps(mergedProps)\n  const [isMounted] = useIsMounted()\n  const validChildren = getValidChildren(children)\n  const prevIsLoaded = usePrevious(isLoaded)\n  const computedStartColor = useValue(startColor)\n  const computedEndColor = useValue(endColor)\n  const hasChildren = !!validChildren.length\n\n  isFitContent ??= hasChildren\n\n  const fadeIn = useAnimation({\n    keyframes: {\n      \"0%\": {\n        opacity: 0,\n      },\n      \"100%\": {\n        opacity: 1,\n      },\n    },\n    duration:\n      typeof fadeDuration === \"string\" ? fadeDuration : `${fadeDuration}s`,\n  })\n\n  const animation = useAnimation({\n    keyframes: {\n      \"0%\": {\n        borderColor: computedStartColor,\n        background: computedStartColor,\n      },\n      \"100%\": {\n        borderColor: computedEndColor,\n        background: computedEndColor,\n      },\n    },\n    duration: typeof speed === \"string\" ? speed : `${speed}s`,\n    iterationCount: \"infinite\",\n    direction: \"alternate\",\n    timingFunction: \"linear\",\n  })\n\n  const css: CSSUIObject = {\n    w: isFitContent ? \"fit-content\" : \"100%\",\n    maxW: \"100%\",\n    h: isFitContent ? \"fit-content\" : \"fallback(4, 1rem)\",\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\",\n    },\n    ...styles,\n  }\n\n  if (isLoaded) {\n    const animation = !isMounted() || prevIsLoaded ? \"none\" : fadeIn\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-skeleton\", \"ui-skeleton--loaded\", className)}\n        {...rest}\n        animation={animation}\n      >\n        {validChildren}\n      </ui.div>\n    )\n  } else {\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-skeleton\", className)}\n        __css={css}\n        {...rest}\n        animation={animation}\n      >\n        {validChildren}\n      </ui.div>\n    )\n  }\n})\n"],"mappings":";;;AAMA,SACEA,EAAA,EACAC,UAAA,EACAC,cAAA,EACAC,iBAAA,QACK;AACP,SAASC,YAAA,QAAoB;AAC7B,SAASC,WAAA,QAAmB;AAC5B,SAASC,QAAA,QAAgB;AACzB,SAASC,EAAA,EAAIC,gBAAA,EAAkBC,YAAA,QAAoB;AAsH7C,SAAAC,GAAA;AAxEC,IAAMC,QAAA,GAAWV,UAAA,CAAiC,CAACW,KAAA,EAAOC,GAAA,KAAQ;EACvE,MAAM,CAACC,MAAA,EAAQC,WAAW,IAAIZ,iBAAA,CAAkB,YAAYS,KAAK;EACjE,IAAI;IACFI,SAAA;IACAC,UAAA;IACAC,QAAA;IACAC,YAAA,GAAe;IACfC,KAAA,GAAQ;IACRC,QAAA;IACAC,YAAA;IACAC,QAAA;IACA,GAAGC;EACL,IAAItB,cAAA,CAAea,WAAW;EAC9B,MAAM,CAACU,SAAS,IAAIhB,YAAA,CAAa;EACjC,MAAMiB,aAAA,GAAgBlB,gBAAA,CAAiBe,QAAQ;EAC/C,MAAMI,YAAA,GAAetB,WAAA,CAAYgB,QAAQ;EACzC,MAAMO,kBAAA,GAAqBtB,QAAA,CAASW,UAAU;EAC9C,MAAMY,gBAAA,GAAmBvB,QAAA,CAASY,QAAQ;EAC1C,MAAMY,WAAA,GAAc,CAAC,CAACJ,aAAA,CAAcK,MAAA;EAEpCT,YAAA,WAAAA,YAAA,GAAAA,YAAA,GAAiBQ,WAAA;EAEjB,MAAME,MAAA,GAAS5B,YAAA,CAAa;IAC1B6B,SAAA,EAAW;MACT,MAAM;QACJC,OAAA,EAAS;MACX;MACA,QAAQ;QACNA,OAAA,EAAS;MACX;IACF;IACAC,QAAA,EACE,OAAOhB,YAAA,KAAiB,WAAWA,YAAA,GAAe,GAAGA,YAAY;EACrE,CAAC;EAED,MAAMiB,SAAA,GAAYhC,YAAA,CAAa;IAC7B6B,SAAA,EAAW;MACT,MAAM;QACJI,WAAA,EAAaT,kBAAA;QACbU,UAAA,EAAYV;MACd;MACA,QAAQ;QACNS,WAAA,EAAaR,gBAAA;QACbS,UAAA,EAAYT;MACd;IACF;IACAM,QAAA,EAAU,OAAOf,KAAA,KAAU,WAAWA,KAAA,GAAQ,GAAGA,KAAK;IACtDmB,cAAA,EAAgB;IAChBC,SAAA,EAAW;IACXC,cAAA,EAAgB;EAClB,CAAC;EAED,MAAMC,GAAA,GAAmB;IACvBC,CAAA,EAAGrB,YAAA,GAAe,gBAAgB;IAClCsB,IAAA,EAAM;IACNC,CAAA,EAAGvB,YAAA,GAAe,gBAAgB;IAClCwB,SAAA,EAAW;IACXC,cAAA,EAAgB;IAChBC,MAAA,EAAQ;IACRC,KAAA,EAAO;IACPC,aAAA,EAAe;IACfC,UAAA,EAAY;IACZ,0BAA0B;MACxBC,UAAA,EAAY;IACd;IACA,GAAGtC;EACL;EAEA,IAAIO,QAAA,EAAU;IACZ,MAAMgC,UAAA,GAAY,CAAC5B,SAAA,CAAU,KAAKE,YAAA,GAAe,SAASK,MAAA;IAE1D,OACE,eAAAtB,GAAA,CAACV,EAAA,CAAGsD,GAAA,EAAH;MACCzC,GAAA;MACAG,SAAA,EAAWT,EAAA,CAAG,eAAe,uBAAuBS,SAAS;MAC5D,GAAGQ,IAAA;MACJY,SAAA,EAAWiB,UAAA;MAEV9B,QAAA,EAAAG;IAAA,CACH;EAEJ,OAAO;IACL,OACE,eAAAhB,GAAA,CAACV,EAAA,CAAGsD,GAAA,EAAH;MACCzC,GAAA;MACAG,SAAA,EAAWT,EAAA,CAAG,eAAeS,SAAS;MACtCuC,KAAA,EAAOb,GAAA;MACN,GAAGlB,IAAA;MACJY,SAAA;MAECb,QAAA,EAAAG;IAAA,CACH;EAEJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\nimport { ContainerPortal } from \"./chunk-E6MH4TSG.mjs\";\nimport { DefaultPortal } from \"./chunk-VGV4UXU6.mjs\";\n\n// src/portal.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Portal = _ref => {\n  let {\n    containerRef,\n    appendToParentPortal = true,\n    isDisabled,\n    children\n  } = _ref;\n  if (isDisabled) return children;\n  return containerRef ? /* @__PURE__ */jsx(ContainerPortal, {\n    containerRef,\n    ...{\n      appendToParentPortal,\n      children\n    }\n  }) : /* @__PURE__ */jsx(DefaultPortal, {\n    ...{\n      appendToParentPortal,\n      children\n    }\n  });\n};\nPortal.className = \"ui-portal\";\nPortal.selector = \".ui-portal\";\nexport { Portal };","map":{"version":3,"names":["jsx","Portal","_ref","containerRef","appendToParentPortal","isDisabled","children","ContainerPortal","DefaultPortal","className","selector"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\portal\\src\\portal.tsx"],"sourcesContent":["import type { ReactNode, RefObject } from \"react\"\nimport { ContainerPortal, DefaultPortal } from \"./\"\n\nexport type PortalProps = {\n  /**\n   * The `ref` to the component where the portal will be attached to.\n   */\n  containerRef?: RefObject<HTMLElement | null>\n  children: ReactNode\n  /**\n   * If `true`, the portal will check if it is within a parent portal\n   * and append itself to the parent's portal node.\n   * This provides nesting for portals.\n   *\n   * If `false`, the portal will always append to `document.body`\n   * regardless of nesting. It is used to opt out of portal nesting.\n   *\n   * @default true\n   */\n  appendToParentPortal?: boolean\n  /**\n   * If `true`, the forwarding will be disabled.\n   */\n  isDisabled?: boolean\n}\n\n/**\n * `Portal` is a component that renders elements outside of the current `DOM` hierarchy.\n *\n * @see Docs https://yamada-ui.com/components/other/portal\n */\nexport const Portal = ({\n  containerRef,\n  appendToParentPortal = true,\n  isDisabled,\n  children,\n}: PortalProps) => {\n  if (isDisabled) return children\n\n  return containerRef ? (\n    <ContainerPortal\n      containerRef={containerRef}\n      {...{ appendToParentPortal, children }}\n    />\n  ) : (\n    <DefaultPortal {...{ appendToParentPortal, children }} />\n  )\n}\n\nPortal.className = \"ui-portal\"\nPortal.selector = \".ui-portal\"\n"],"mappings":";;;;;;AAwCI,SAAAA,GAAA;AATG,IAAMC,MAAA,GAASC,IAAA,IAKH;EAAA,IALI;IACrBC,YAAA;IACAC,oBAAA,GAAuB;IACvBC,UAAA;IACAC;EACF,IAAAJ,IAAA;EACE,IAAIG,UAAA,EAAY,OAAOC,QAAA;EAEvB,OAAOH,YAAA,GACL,eAAAH,GAAA,CAACO,eAAA;IACCJ,YAAA;IACC,GAAG;MAAEC,oBAAA;MAAsBE;IAAS;EAAA,CACvC,IAEA,eAAAN,GAAA,CAACQ,aAAA;IAAe,GAAG;MAAEJ,oBAAA;MAAsBE;IAAS;EAAA,CAAG;AAE3D;AAEAL,MAAA,CAAOQ,SAAA,GAAY;AACnBR,MAAA,CAAOS,QAAA,GAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
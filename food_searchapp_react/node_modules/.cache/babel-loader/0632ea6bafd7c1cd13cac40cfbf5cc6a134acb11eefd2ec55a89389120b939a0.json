{"ast":null,"code":"\"use client\";\n\n// src/menu-item.tsx\nimport { ui, forwardRef } from \"@yamada-ui/core\";\nimport { useClickable } from \"@yamada-ui/use-clickable\";\nimport { ariaAttr, createContext as createContext2, cx, funcAll as funcAll2, handlerAll, isActiveElement, isHTMLElement, mergeRefs, useUpdateEffect as useUpdateEffect2 } from \"@yamada-ui/utils\";\nimport { useCallback as useCallback2, useRef as useRef2, useState as useState2 } from \"react\";\n\n// src/menu.tsx\nimport { useMultiComponentStyle, omitThemeProps } from \"@yamada-ui/core\";\nimport { Popover } from \"@yamada-ui/popover\";\nimport { createDescendant } from \"@yamada-ui/use-descendant\";\nimport { useDisclosure } from \"@yamada-ui/use-disclosure\";\nimport { createContext, funcAll, useUnmountEffect, useUpdateEffect } from \"@yamada-ui/utils\";\nimport { useCallback, useEffect, useId, useRef, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar {\n  DescendantsContextProvider,\n  useDescendantsContext: useMenuDescendantsContext,\n  useDescendants,\n  useDescendant: useMenuDescendant\n} = createDescendant();\nvar [MenuProvider, useMenu] = createContext({\n  name: \"MenuContext\",\n  errorMessage: `useMenu returned is 'undefined'. Seems you forgot to wrap the components in \"<Menu />\"`\n});\nvar [UpstreamMenuProvider, useUpstreamMenu] = createContext({\n  strict: false,\n  name: \"UpstreamMenuContext\"\n});\nvar Menu = props => {\n  var _a, _b;\n  const [styles, mergedProps] = useMultiComponentStyle(\"Menu\", props);\n  let {\n    initialFocusRef,\n    closeOnSelect = true,\n    closeOnBlur,\n    placement,\n    duration = 0.2,\n    offset,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    ...rest\n  } = omitThemeProps(mergedProps);\n  const {\n    relatedRef,\n    onUpstreamClose,\n    onDownstreamCloseMapRef\n  } = (_a = useUpstreamMenu()) != null ? _a : {};\n  const {\n    setDownstreamOpen,\n    hasDownstreamRef\n  } = (_b = useUpstreamMenuItem()) != null ? _b : {};\n  const isNested = !!relatedRef;\n  if (isNested) {\n    placement != null ? placement : placement = \"right-start\";\n    offset != null ? offset : offset = [-8, 8];\n    closeOnBlur != null ? closeOnBlur : closeOnBlur = false;\n  } else {\n    placement != null ? placement : placement = \"bottom-start\";\n  }\n  const descendants = useDescendants();\n  const [focusedIndex, setFocusedIndex] = useState(-1);\n  const menuRef = useRef(null);\n  const timeoutIds = useRef( /* @__PURE__ */new Set([]));\n  const requestAnimationFrameId = useRef(null);\n  const onCloseMapRef = useRef( /* @__PURE__ */new Map());\n  const onFocusMenu = useCallback(() => {\n    requestAnimationFrame(() => {\n      var _a2;\n      return (_a2 = menuRef.current) == null ? void 0 : _a2.focus({\n        preventScroll: false\n      });\n    });\n  }, []);\n  const onFocusFirstItem = useCallback(() => {\n    const id2 = setTimeout(() => {\n      if (initialFocusRef) return;\n      const first = descendants.enabledFirstValue();\n      if (first) setFocusedIndex(first.index);\n    });\n    timeoutIds.current.add(id2);\n  }, [descendants, initialFocusRef]);\n  const onFocusLastItem = useCallback(() => {\n    const id2 = setTimeout(() => {\n      if (initialFocusRef) return;\n      const last = descendants.enabledLastValue();\n      if (last) setFocusedIndex(last.index);\n    });\n    timeoutIds.current.add(id2);\n  }, [descendants, initialFocusRef]);\n  const onOpenInternal = useCallback(() => {\n    onOpenProp == null ? void 0 : onOpenProp();\n    if (!isNested) onFocusMenu();\n  }, [onOpenProp, isNested, onFocusMenu]);\n  const onCloseInternal = useCallback(() => {\n    onCloseProp == null ? void 0 : onCloseProp();\n    for (const onClose2 of onCloseMapRef.current.values()) {\n      onClose2();\n    }\n  }, [onCloseProp]);\n  const id = useId();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure({\n    ...props,\n    onOpen: onOpenInternal,\n    onClose: onCloseInternal\n  });\n  useEffect(() => {\n    const onCloseMap = onDownstreamCloseMapRef == null ? void 0 : onDownstreamCloseMapRef.current;\n    onCloseMap == null ? void 0 : onCloseMap.set(id, onClose);\n    return () => {\n      onCloseMap == null ? void 0 : onCloseMap.delete(id);\n    };\n  }, [id, onClose, onDownstreamCloseMapRef]);\n  useEffect(() => {\n    if (setDownstreamOpen) setDownstreamOpen(isOpen);\n  }, [setDownstreamOpen, isOpen]);\n  useEffect(() => {\n    if (hasDownstreamRef) hasDownstreamRef.current = true;\n    return () => {\n      if (hasDownstreamRef) hasDownstreamRef.current = false;\n    };\n  });\n  useUpdateEffect(() => {\n    if (!isOpen) setFocusedIndex(-1);\n  }, [isOpen]);\n  useUnmountEffect(() => {\n    timeoutIds.current.forEach(id2 => clearTimeout(id2));\n    timeoutIds.current.clear();\n  });\n  return /* @__PURE__ */jsx(DescendantsContextProvider, {\n    value: descendants,\n    children: /* @__PURE__ */jsx(UpstreamMenuProvider, {\n      value: {\n        relatedRef: menuRef,\n        onDownstreamCloseMapRef: onCloseMapRef,\n        onUpstreamClose: funcAll(onUpstreamClose, onClose)\n      },\n      children: /* @__PURE__ */jsx(MenuProvider, {\n        value: {\n          isOpen,\n          onOpen,\n          onClose,\n          onUpstreamClose,\n          onFocusFirstItem,\n          onFocusLastItem,\n          closeOnSelect,\n          focusedIndex,\n          setFocusedIndex,\n          menuRef,\n          requestAnimationFrameId,\n          isNested,\n          styles\n        },\n        children: /* @__PURE__ */jsx(Popover, {\n          ...{\n            trigger: isNested ? \"hover\" : \"click\",\n            ...rest,\n            isOpen,\n            onOpen,\n            onClose,\n            placement,\n            offset,\n            duration,\n            initialFocusRef,\n            relatedRef,\n            closeOnButton: false,\n            closeOnBlur\n          }\n        })\n      })\n    })\n  });\n};\n\n// src/menu-item.tsx\nimport { jsx as jsx2, jsxs } from \"react/jsx-runtime\";\nvar [UpstreamMenuItemProvider, useUpstreamMenuItem] = createContext2({\n  strict: false,\n  name: \"UpstreamMenuItemContext\"\n});\nvar isTargetMenuItem = target => {\n  var _a;\n  return isHTMLElement(target) && !!((_a = target == null ? void 0 : target.getAttribute(\"role\")) == null ? void 0 : _a.startsWith(\"menu-item\"));\n};\nvar MenuItem = forwardRef(({\n  as,\n  className,\n  type,\n  isDisabled,\n  isFocusable,\n  closeOnSelect: customCloseOnSelect,\n  icon,\n  command,\n  children,\n  onClick: onClickProp,\n  onFocus: onFocusProp,\n  onMouseEnter: onMouseEnterProp,\n  onMouseMove: onMouseMoveProp,\n  onMouseLeave: onMouseLeaveProp,\n  onKeyDown: onKeyDownProp,\n  ...props\n}, ref) => {\n  var _a;\n  const {\n    focusedIndex,\n    setFocusedIndex,\n    isOpen,\n    onClose,\n    onUpstreamClose,\n    closeOnSelect: generalCloseOnSelect,\n    menuRef,\n    requestAnimationFrameId,\n    isNested,\n    styles\n  } = useMenu();\n  const {\n    onUpstreamRestoreFocus\n  } = (_a = useUpstreamMenuItem()) != null ? _a : {};\n  const trulyDisabled = isDisabled && !isFocusable;\n  const buttonRef = useRef2(null);\n  const hasDownstreamRef = useRef2(false);\n  const onKeyDownRef = useRef2(() => void 0);\n  const {\n    index,\n    register\n  } = useMenuDescendant({\n    disabled: trulyDisabled\n  });\n  const [isDownstreamOpen, setDownstreamOpen] = useState2(false);\n  const isFocused = index === focusedIndex;\n  const onMouseEnter = useCallback2(event => {\n    onMouseEnterProp == null ? void 0 : onMouseEnterProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(index);\n  }, [setFocusedIndex, index, isDisabled, onMouseEnterProp]);\n  const onMouseMove = useCallback2(event => {\n    onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);\n    if (buttonRef.current && !isActiveElement(buttonRef.current)) onMouseEnter(event);\n  }, [onMouseEnter, onMouseMoveProp]);\n  const onMouseLeave = useCallback2(event => {\n    onMouseLeaveProp == null ? void 0 : onMouseLeaveProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(-1);\n  }, [setFocusedIndex, isDisabled, onMouseLeaveProp]);\n  const onClick = useCallback2(ev => {\n    onClickProp == null ? void 0 : onClickProp(ev);\n    if (!isTargetMenuItem(ev.currentTarget)) return;\n    const hasDownstream = hasDownstreamRef.current;\n    if (customCloseOnSelect != null ? customCloseOnSelect : !hasDownstream && generalCloseOnSelect) {\n      onClose();\n      onUpstreamClose == null ? void 0 : onUpstreamClose();\n    }\n  }, [onClickProp, customCloseOnSelect, generalCloseOnSelect, onClose, onUpstreamClose]);\n  const onFocus = useCallback2(ev => {\n    onFocusProp == null ? void 0 : onFocusProp(ev);\n    setFocusedIndex(index);\n  }, [onFocusProp, setFocusedIndex, index]);\n  const onRestoreFocus = useCallback2(() => {\n    var _a2;\n    (_a2 = buttonRef.current) == null ? void 0 : _a2.focus();\n    setFocusedIndex(index);\n  }, [setFocusedIndex, index]);\n  const onKeyDown = useCallback2(ev => {\n    onKeyDownProp == null ? void 0 : onKeyDownProp(ev);\n    const actions = {\n      ArrowLeft: isNested ? funcAll2(onUpstreamRestoreFocus, onClose) : void 0\n    };\n    const action = actions[ev.key];\n    if (!action) return;\n    ev.preventDefault();\n    ev.stopPropagation();\n    action();\n  }, [onKeyDownProp, onUpstreamRestoreFocus, onClose, isNested]);\n  const rest = useClickable({\n    focusOnClick: false,\n    ...props,\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onKeyDown: handlerAll(onKeyDown, onKeyDownRef.current),\n    ref: mergeRefs(register, buttonRef, ref),\n    isDisabled,\n    isFocusable\n  });\n  useUpdateEffect2(() => {\n    if (!isOpen) return;\n    const id = requestAnimationFrameId.current;\n    if (isFocused && !trulyDisabled && buttonRef.current) {\n      if (id) cancelAnimationFrame(id);\n      requestAnimationFrameId.current = requestAnimationFrame(() => {\n        var _a2;\n        (_a2 = buttonRef.current) == null ? void 0 : _a2.focus({\n          preventScroll: true\n        });\n        requestAnimationFrameId.current = null;\n      });\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      menuRef.current.focus({\n        preventScroll: true\n      });\n    }\n    return () => {\n      if (id) cancelAnimationFrame(id);\n    };\n  }, [isFocused, trulyDisabled, menuRef, isOpen]);\n  type = as || type ? type != null ? type : void 0 : \"button\";\n  children = icon || command ? /* @__PURE__ */jsx2(ui.span, {\n    style: {\n      flex: 1\n    },\n    children\n  }) : children;\n  const css = {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    userSelect: \"none\",\n    display: \"flex\",\n    width: \"100%\",\n    alignItems: \"center\",\n    textAlign: \"start\",\n    flex: \"0 0 auto\",\n    outline: 0,\n    gap: \"0.75rem\",\n    ...styles.item\n  };\n  return /* @__PURE__ */jsx2(UpstreamMenuItemProvider, {\n    value: {\n      onKeyDownRef,\n      onUpstreamRestoreFocus: onRestoreFocus,\n      setDownstreamOpen,\n      hasDownstreamRef\n    },\n    children: /* @__PURE__ */jsxs(ui.li, {\n      ...rest,\n      ...(isDownstreamOpen ? {\n        \"data-active\": \"\"\n      } : {}),\n      as,\n      type,\n      role: \"menu-item\",\n      tabIndex: isFocused ? 0 : -1,\n      className: cx(\"ui-menu__item\", className),\n      __css: css,\n      children: [icon ? /* @__PURE__ */jsx2(MenuIcon, {\n        children: icon\n      }) : null, children, command ? /* @__PURE__ */jsx2(MenuCommand, {\n        children: command\n      }) : null]\n    })\n  });\n});\nvar MenuOptionItem = forwardRef(({\n  className,\n  icon,\n  isChecked,\n  closeOnSelect = false,\n  children,\n  ...rest\n}, ref) => {\n  return /* @__PURE__ */jsxs(MenuItem, {\n    ref,\n    className: cx(\"ui-menu__item--option\", className),\n    \"aria-checked\": ariaAttr(isChecked),\n    closeOnSelect,\n    ...rest,\n    children: [icon !== null ? /* @__PURE__ */jsx2(MenuIcon, {\n      opacity: isChecked ? 1 : 0,\n      children: icon || /* @__PURE__ */jsx2(CheckIcon, {})\n    }) : null, children]\n  });\n});\nvar MenuIcon = forwardRef(({\n  className,\n  ...rest\n}, ref) => {\n  const {\n    styles\n  } = useMenu();\n  const css = {\n    flexShrink: 0,\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: \"0.85em\",\n    ...styles.icon\n  };\n  return /* @__PURE__ */jsx2(ui.span, {\n    ref,\n    className: cx(\"ui-menu__item__icon\", className),\n    __css: css,\n    ...rest\n  });\n});\nvar MenuCommand = forwardRef(({\n  className,\n  ...rest\n}, ref) => {\n  const {\n    styles\n  } = useMenu();\n  const css = {\n    ...styles.command\n  };\n  return /* @__PURE__ */jsx2(ui.span, {\n    ref,\n    className: cx(\"ui-menu__item__command\", className),\n    __css: css,\n    ...rest\n  });\n});\nvar CheckIcon = () => /* @__PURE__ */jsx2(\"svg\", {\n  viewBox: \"0 0 14 14\",\n  width: \"1em\",\n  height: \"1em\",\n  children: /* @__PURE__ */jsx2(\"polygon\", {\n    fill: \"currentColor\",\n    points: \"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n  })\n});\nexport { UpstreamMenuItemProvider, useUpstreamMenuItem, MenuItem, MenuOptionItem, MenuIcon, MenuCommand, useMenuDescendantsContext, useMenuDescendant, useMenu, UpstreamMenuProvider, useUpstreamMenu, Menu };","map":{"version":3,"names":["ui","forwardRef","useClickable","ariaAttr","createContext","createContext2","cx","funcAll","funcAll2","handlerAll","isActiveElement","isHTMLElement","mergeRefs","useUpdateEffect","useUpdateEffect2","useCallback","useCallback2","useRef","useRef2","useState","useState2","useMultiComponentStyle","omitThemeProps","Popover","createDescendant","useDisclosure","useUnmountEffect","useEffect","useId","jsx","DescendantsContextProvider","useDescendantsContext","useMenuDescendantsContext","useDescendants","useDescendant","useMenuDescendant","MenuProvider","useMenu","name","errorMessage","UpstreamMenuProvider","useUpstreamMenu","strict","Menu","props","_a","_b","styles","mergedProps","initialFocusRef","closeOnSelect","closeOnBlur","placement","duration","offset","onOpen","onOpenProp","onClose","onCloseProp","rest","relatedRef","onUpstreamClose","onDownstreamCloseMapRef","setDownstreamOpen","hasDownstreamRef","useUpstreamMenuItem","isNested","descendants","focusedIndex","setFocusedIndex","menuRef","timeoutIds","Set","requestAnimationFrameId","onCloseMapRef","Map","onFocusMenu","requestAnimationFrame","_a2","current","focus","preventScroll","onFocusFirstItem","id2","setTimeout","first","enabledFirstValue","index","add","onFocusLastItem","last","enabledLastValue","onOpenInternal","onCloseInternal","onClose2","values","id","isOpen","onCloseMap","set","delete","forEach","clearTimeout","clear","value","children","trigger","closeOnButton","jsx2","jsxs","UpstreamMenuItemProvider","isTargetMenuItem","target","getAttribute","startsWith","MenuItem","as","className","type","isDisabled","isFocusable","customCloseOnSelect","icon","command","onClick","onClickProp","onFocus","onFocusProp","onMouseEnter","onMouseEnterProp","onMouseMove","onMouseMoveProp","onMouseLeave","onMouseLeaveProp","onKeyDown","onKeyDownProp","ref","generalCloseOnSelect","onUpstreamRestoreFocus","trulyDisabled","buttonRef","onKeyDownRef","register","disabled","isDownstreamOpen","isFocused","event","ev","currentTarget","hasDownstream","onRestoreFocus","actions","ArrowLeft","action","key","preventDefault","stopPropagation","focusOnClick","cancelAnimationFrame","span","style","flex","css","textDecoration","color","userSelect","display","width","alignItems","textAlign","outline","gap","item","li","role","tabIndex","__css","MenuIcon","MenuCommand","MenuOptionItem","isChecked","opacity","CheckIcon","flexShrink","justifyContent","fontSize","viewBox","height","fill","points"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\menu\\src\\menu-item.tsx","C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\menu\\src\\menu.tsx"],"sourcesContent":["import type { HTMLUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { useClickable } from \"@yamada-ui/use-clickable\"\nimport {\n  ariaAttr,\n  createContext,\n  cx,\n  funcAll,\n  handlerAll,\n  isActiveElement,\n  isHTMLElement,\n  mergeRefs,\n  useUpdateEffect,\n} from \"@yamada-ui/utils\"\nimport type {\n  Dispatch,\n  FC,\n  FocusEvent,\n  KeyboardEvent,\n  KeyboardEventHandler,\n  MouseEvent,\n  MutableRefObject,\n  ReactElement,\n  RefObject,\n  SetStateAction,\n} from \"react\"\nimport { useCallback, useRef, useState } from \"react\"\nimport { useMenu, useMenuDescendant } from \"./menu\"\n\ntype UpstreamMenuItemContext = {\n  onUpstreamRestoreFocus: () => void\n  onKeyDownRef: RefObject<KeyboardEventHandler<HTMLButtonElement>>\n  setDownstreamOpen: Dispatch<SetStateAction<boolean>>\n  hasDownstreamRef: MutableRefObject<boolean>\n}\n\nexport const [UpstreamMenuItemProvider, useUpstreamMenuItem] =\n  createContext<UpstreamMenuItemContext>({\n    strict: false,\n    name: \"UpstreamMenuItemContext\",\n  })\n\nconst isTargetMenuItem = (target: EventTarget | null) => {\n  return (\n    isHTMLElement(target) &&\n    !!target?.getAttribute(\"role\")?.startsWith(\"menu-item\")\n  )\n}\n\ntype MenuItemOptions = {\n  /**\n   * If `true`, the menu item will be disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the menu item will be focusable.\n   *\n   * @default false\n   */\n  isFocusable?: boolean\n  /**\n   * If `true`, the list element will be closed when selected.\n   *\n   * @default false\n   */\n  closeOnSelect?: boolean\n  /**\n   * The menu item icon to use.\n   */\n  icon?: ReactElement\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n}\n\nexport type MenuItemProps = HTMLUIProps<\"button\"> & MenuItemOptions\n\nexport const MenuItem = forwardRef<MenuItemProps, \"button\">(\n  (\n    {\n      as,\n      className,\n      type,\n      isDisabled,\n      isFocusable,\n      closeOnSelect: customCloseOnSelect,\n      icon,\n      command,\n      children,\n      onClick: onClickProp,\n      onFocus: onFocusProp,\n      onMouseEnter: onMouseEnterProp,\n      onMouseMove: onMouseMoveProp,\n      onMouseLeave: onMouseLeaveProp,\n      onKeyDown: onKeyDownProp,\n      ...props\n    },\n    ref,\n  ) => {\n    const {\n      focusedIndex,\n      setFocusedIndex,\n      isOpen,\n      onClose,\n      onUpstreamClose,\n      closeOnSelect: generalCloseOnSelect,\n      menuRef,\n      requestAnimationFrameId,\n      isNested,\n      styles,\n    } = useMenu()\n    const { onUpstreamRestoreFocus } = useUpstreamMenuItem() ?? {}\n\n    const trulyDisabled = isDisabled && !isFocusable\n\n    const buttonRef = useRef<HTMLButtonElement>(null)\n    const hasDownstreamRef = useRef<boolean>(false)\n    const onKeyDownRef = useRef<KeyboardEventHandler<HTMLButtonElement>>(\n      () => void 0,\n    )\n    const { index, register } = useMenuDescendant({ disabled: trulyDisabled })\n    const [isDownstreamOpen, setDownstreamOpen] = useState<boolean>(false)\n\n    const isFocused = index === focusedIndex\n\n    const onMouseEnter = useCallback(\n      (event: any) => {\n        onMouseEnterProp?.(event)\n\n        if (isDisabled) return\n\n        setFocusedIndex(index)\n      },\n      [setFocusedIndex, index, isDisabled, onMouseEnterProp],\n    )\n\n    const onMouseMove = useCallback(\n      (event: any) => {\n        onMouseMoveProp?.(event)\n\n        if (buttonRef.current && !isActiveElement(buttonRef.current))\n          onMouseEnter(event)\n      },\n      [onMouseEnter, onMouseMoveProp],\n    )\n\n    const onMouseLeave = useCallback(\n      (event: any) => {\n        onMouseLeaveProp?.(event)\n\n        if (isDisabled) return\n\n        setFocusedIndex(-1)\n      },\n      [setFocusedIndex, isDisabled, onMouseLeaveProp],\n    )\n\n    const onClick = useCallback(\n      (ev: MouseEvent<HTMLButtonElement>) => {\n        onClickProp?.(ev)\n\n        if (!isTargetMenuItem(ev.currentTarget)) return\n\n        const hasDownstream = hasDownstreamRef.current\n\n        if (customCloseOnSelect ?? (!hasDownstream && generalCloseOnSelect)) {\n          onClose()\n          onUpstreamClose?.()\n        }\n      },\n      [\n        onClickProp,\n        customCloseOnSelect,\n        generalCloseOnSelect,\n        onClose,\n        onUpstreamClose,\n      ],\n    )\n\n    const onFocus = useCallback(\n      (ev: FocusEvent<HTMLButtonElement>) => {\n        onFocusProp?.(ev)\n\n        setFocusedIndex(index)\n      },\n      [onFocusProp, setFocusedIndex, index],\n    )\n\n    const onRestoreFocus = useCallback(() => {\n      buttonRef.current?.focus()\n\n      setFocusedIndex(index)\n    }, [setFocusedIndex, index])\n\n    const onKeyDown = useCallback(\n      (ev: KeyboardEvent<HTMLButtonElement>) => {\n        onKeyDownProp?.(ev)\n\n        const actions: Record<string, Function | undefined> = {\n          ArrowLeft: isNested\n            ? funcAll(onUpstreamRestoreFocus, onClose)\n            : undefined,\n        }\n\n        const action = actions[ev.key]\n\n        if (!action) return\n\n        ev.preventDefault()\n        ev.stopPropagation()\n\n        action()\n      },\n      [onKeyDownProp, onUpstreamRestoreFocus, onClose, isNested],\n    )\n\n    const rest = useClickable<HTMLButtonElement>({\n      focusOnClick: false,\n      ...props,\n      onClick,\n      onFocus,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      onKeyDown: handlerAll(onKeyDown, onKeyDownRef.current),\n      ref: mergeRefs(register, buttonRef, ref),\n      isDisabled,\n      isFocusable,\n    })\n\n    useUpdateEffect(() => {\n      if (!isOpen) return\n\n      const id = requestAnimationFrameId.current\n\n      if (isFocused && !trulyDisabled && buttonRef.current) {\n        if (id) cancelAnimationFrame(id)\n\n        requestAnimationFrameId.current = requestAnimationFrame(() => {\n          buttonRef.current?.focus({ preventScroll: true })\n\n          requestAnimationFrameId.current = null\n        })\n      } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n        menuRef.current.focus({ preventScroll: true })\n      }\n\n      return () => {\n        if (id) cancelAnimationFrame(id)\n      }\n    }, [isFocused, trulyDisabled, menuRef, isOpen])\n\n    type = as || type ? type ?? undefined : \"button\"\n\n    children =\n      icon || command ? (\n        <ui.span style={{ flex: 1 }}>{children}</ui.span>\n      ) : (\n        children\n      )\n\n    const css: CSSUIObject = {\n      textDecoration: \"none\",\n      color: \"inherit\",\n      userSelect: \"none\",\n      display: \"flex\",\n      width: \"100%\",\n      alignItems: \"center\",\n      textAlign: \"start\",\n      flex: \"0 0 auto\",\n      outline: 0,\n      gap: \"0.75rem\",\n      ...styles.item,\n    }\n\n    return (\n      <UpstreamMenuItemProvider\n        value={{\n          onKeyDownRef,\n          onUpstreamRestoreFocus: onRestoreFocus,\n          setDownstreamOpen,\n          hasDownstreamRef,\n        }}\n      >\n        <ui.li\n          {...rest}\n          {...(isDownstreamOpen ? { \"data-active\": \"\" } : {})}\n          as={as}\n          type={type}\n          role=\"menu-item\"\n          tabIndex={isFocused ? 0 : -1}\n          className={cx(\"ui-menu__item\", className)}\n          __css={css}\n        >\n          {icon ? <MenuIcon>{icon}</MenuIcon> : null}\n          {children}\n          {command ? <MenuCommand>{command}</MenuCommand> : null}\n        </ui.li>\n      </UpstreamMenuItemProvider>\n    )\n  },\n)\n\ntype MenuOptionItemOptions = {\n  /**\n   * The menu option item icon to use.\n   */\n  icon?: ReactElement | null\n  /**\n   * The value of the menu option item.\n   */\n  value?: string\n  /**\n   * If `true`, the checkbox or radio will be checked.\n   *\n   * @default false\n   */\n  isChecked?: boolean\n  /**\n   * The type of the menu option item.\n   */\n  type?: \"radio\" | \"checkbox\"\n}\n\nexport type MenuOptionItemProps = Omit<MenuItemProps, \"icon\" | \"command\"> &\n  MenuOptionItemOptions\n\nexport const MenuOptionItem = forwardRef<MenuOptionItemProps, \"button\">(\n  (\n    { className, icon, isChecked, closeOnSelect = false, children, ...rest },\n    ref,\n  ) => {\n    return (\n      <MenuItem\n        ref={ref}\n        className={cx(\"ui-menu__item--option\", className)}\n        aria-checked={ariaAttr(isChecked)}\n        closeOnSelect={closeOnSelect}\n        {...rest}\n      >\n        {icon !== null ? (\n          <MenuIcon opacity={isChecked ? 1 : 0}>\n            {icon || <CheckIcon />}\n          </MenuIcon>\n        ) : null}\n        {children}\n      </MenuItem>\n    )\n  },\n)\n\nexport type MenuIconProps = HTMLUIProps<\"span\">\n\nexport const MenuIcon = forwardRef<MenuIconProps, \"span\">(\n  ({ className, ...rest }, ref) => {\n    const { styles } = useMenu()\n\n    const css: CSSUIObject = {\n      flexShrink: 0,\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontSize: \"0.85em\",\n      ...styles.icon,\n    }\n\n    return (\n      <ui.span\n        ref={ref}\n        className={cx(\"ui-menu__item__icon\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n\nexport type MenuCommandProps = HTMLUIProps<\"span\">\n\nexport const MenuCommand = forwardRef<MenuCommandProps, \"span\">(\n  ({ className, ...rest }, ref) => {\n    const { styles } = useMenu()\n\n    const css: CSSUIObject = { ...styles.command }\n\n    return (\n      <ui.span\n        ref={ref}\n        className={cx(\"ui-menu__item__command\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n\nconst CheckIcon: FC = () => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\">\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n","import type { CSSUIObject, ThemeProps } from \"@yamada-ui/core\"\nimport { useMultiComponentStyle, omitThemeProps } from \"@yamada-ui/core\"\nimport type { PopoverProps } from \"@yamada-ui/popover\"\nimport { Popover } from \"@yamada-ui/popover\"\nimport { createDescendant } from \"@yamada-ui/use-descendant\"\nimport { useDisclosure } from \"@yamada-ui/use-disclosure\"\nimport {\n  createContext,\n  funcAll,\n  useUnmountEffect,\n  useUpdateEffect,\n} from \"@yamada-ui/utils\"\nimport type {\n  Dispatch,\n  FC,\n  MutableRefObject,\n  RefObject,\n  SetStateAction,\n} from \"react\"\nimport { useCallback, useEffect, useId, useRef, useState } from \"react\"\nimport { useUpstreamMenuItem } from \"./menu-item\"\n\nconst {\n  DescendantsContextProvider,\n  useDescendantsContext: useMenuDescendantsContext,\n  useDescendants,\n  useDescendant: useMenuDescendant,\n} = createDescendant<HTMLElement>()\n\nexport { useMenuDescendantsContext, useMenuDescendant }\n\ntype MenuContext = MenuOptions & {\n  isOpen: boolean\n  onOpen: () => void\n  onClose: () => void\n  onUpstreamClose?: () => void\n  onFocusFirstItem: () => void\n  onFocusLastItem: () => void\n  focusedIndex: number\n  setFocusedIndex: Dispatch<SetStateAction<number>>\n  menuRef: RefObject<HTMLDivElement>\n  requestAnimationFrameId: MutableRefObject<number | null>\n  isNested: boolean\n  styles: Record<string, CSSUIObject>\n}\n\nconst [MenuProvider, useMenu] = createContext<MenuContext>({\n  name: \"MenuContext\",\n  errorMessage: `useMenu returned is 'undefined'. Seems you forgot to wrap the components in \"<Menu />\"`,\n})\n\ntype UpstreamMenuContext = {\n  relatedRef: RefObject<HTMLElement>\n  onDownstreamCloseMapRef: MutableRefObject<Map<string, () => void>>\n  onUpstreamClose: () => void\n}\n\nexport const [UpstreamMenuProvider, useUpstreamMenu] =\n  createContext<UpstreamMenuContext>({\n    strict: false,\n    name: \"UpstreamMenuContext\",\n  })\n\nexport { useMenu }\n\ntype MenuOptions = {\n  /**\n   * If `true`, the list element will be closed when value is selected.\n   *\n   * @default true\n   */\n  closeOnSelect?: boolean\n}\n\nexport type MenuProps = ThemeProps<\"Menu\"> &\n  Omit<PopoverProps, \"closeOnButton\" | \"relatedRef\"> &\n  MenuOptions\n\n/**\n * `Menu` is a component that displays a common dropdown menu.\n *\n * @see Docs https://yamada-ui.com/components/overlay/menu\n */\nexport const Menu: FC<MenuProps> = (props) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"Menu\", props)\n  let {\n    initialFocusRef,\n    closeOnSelect = true,\n    closeOnBlur,\n    placement,\n    duration = 0.2,\n    offset,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    ...rest\n  } = omitThemeProps(mergedProps)\n  const { relatedRef, onUpstreamClose, onDownstreamCloseMapRef } =\n    useUpstreamMenu() ?? {}\n  const { setDownstreamOpen, hasDownstreamRef } = useUpstreamMenuItem() ?? {}\n  const isNested = !!relatedRef\n\n  if (isNested) {\n    placement ??= \"right-start\"\n    offset ??= [-8, 8]\n    closeOnBlur ??= false\n  } else {\n    placement ??= \"bottom-start\"\n  }\n\n  const descendants = useDescendants()\n\n  const [focusedIndex, setFocusedIndex] = useState<number>(-1)\n\n  const menuRef = useRef<HTMLDivElement>(null)\n  const timeoutIds = useRef<Set<any>>(new Set([]))\n  const requestAnimationFrameId = useRef<number | null>(null)\n  const onCloseMapRef = useRef<Map<string, () => void>>(new Map())\n\n  const onFocusMenu = useCallback(() => {\n    requestAnimationFrame(() =>\n      menuRef.current?.focus({ preventScroll: false }),\n    )\n  }, [])\n\n  const onFocusFirstItem = useCallback(() => {\n    const id = setTimeout(() => {\n      if (initialFocusRef) return\n\n      const first = descendants.enabledFirstValue()\n\n      if (first) setFocusedIndex(first.index)\n    })\n\n    timeoutIds.current.add(id)\n  }, [descendants, initialFocusRef])\n\n  const onFocusLastItem = useCallback(() => {\n    const id = setTimeout(() => {\n      if (initialFocusRef) return\n\n      const last = descendants.enabledLastValue()\n\n      if (last) setFocusedIndex(last.index)\n    })\n\n    timeoutIds.current.add(id)\n  }, [descendants, initialFocusRef])\n\n  const onOpenInternal = useCallback(() => {\n    onOpenProp?.()\n\n    if (!isNested) onFocusMenu()\n  }, [onOpenProp, isNested, onFocusMenu])\n\n  const onCloseInternal = useCallback(() => {\n    onCloseProp?.()\n\n    for (const onClose of onCloseMapRef.current.values()) {\n      onClose()\n    }\n  }, [onCloseProp])\n\n  const id = useId()\n  const { isOpen, onOpen, onClose } = useDisclosure({\n    ...props,\n    onOpen: onOpenInternal,\n    onClose: onCloseInternal,\n  })\n\n  useEffect(() => {\n    const onCloseMap = onDownstreamCloseMapRef?.current\n\n    onCloseMap?.set(id, onClose)\n\n    return () => {\n      onCloseMap?.delete(id)\n    }\n  }, [id, onClose, onDownstreamCloseMapRef])\n\n  useEffect(() => {\n    if (setDownstreamOpen) setDownstreamOpen(isOpen)\n  }, [setDownstreamOpen, isOpen])\n\n  useEffect(() => {\n    if (hasDownstreamRef) hasDownstreamRef.current = true\n\n    return () => {\n      if (hasDownstreamRef) hasDownstreamRef.current = false\n    }\n  })\n\n  useUpdateEffect(() => {\n    if (!isOpen) setFocusedIndex(-1)\n  }, [isOpen])\n\n  useUnmountEffect(() => {\n    timeoutIds.current.forEach((id) => clearTimeout(id))\n    timeoutIds.current.clear()\n  })\n\n  return (\n    <DescendantsContextProvider value={descendants}>\n      <UpstreamMenuProvider\n        value={{\n          relatedRef: menuRef,\n          onDownstreamCloseMapRef: onCloseMapRef,\n          onUpstreamClose: funcAll(onUpstreamClose, onClose),\n        }}\n      >\n        <MenuProvider\n          value={{\n            isOpen,\n            onOpen,\n            onClose,\n            onUpstreamClose,\n            onFocusFirstItem,\n            onFocusLastItem,\n            closeOnSelect,\n            focusedIndex,\n            setFocusedIndex,\n            menuRef,\n            requestAnimationFrameId,\n            isNested,\n            styles,\n          }}\n        >\n          <Popover\n            {...{\n              trigger: isNested ? \"hover\" : \"click\",\n              ...rest,\n              isOpen,\n              onOpen,\n              onClose,\n              placement,\n              offset,\n              duration,\n              initialFocusRef,\n              relatedRef,\n              closeOnButton: false,\n              closeOnBlur,\n            }}\n          />\n        </MenuProvider>\n      </UpstreamMenuProvider>\n    </DescendantsContextProvider>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
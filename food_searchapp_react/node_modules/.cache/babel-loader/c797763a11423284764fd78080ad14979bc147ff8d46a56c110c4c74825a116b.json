{"ast":null,"code":"\"use client\";\n\n// src/index.ts\nimport { useEnvironment } from \"@yamada-ui/providers\";\nimport { isArray, isFunction } from \"@yamada-ui/utils\";\nimport { useEffect, useState } from \"react\";\nvar useMediaQuery = function (query) {\n  let {\n    ssr = true,\n    fallback\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    getWindow\n  } = useEnvironment();\n  const queries = isArray(query) ? query : [query];\n  let fallbackValues = isArray(fallback) ? fallback : [fallback];\n  fallbackValues = fallbackValues.filter(value2 => value2 != null);\n  const [value, setValue] = useState(() => {\n    return queries.map((media, index) => {\n      var _a;\n      return {\n        media,\n        matches: ssr ? !!fallbackValues[index] : !!((_a = getWindow()) == null ? void 0 : _a.matchMedia(media).matches)\n      };\n    });\n  });\n  useEffect(() => {\n    const win = getWindow();\n    if (!win) return;\n    setValue(queries.map(media => ({\n      media,\n      matches: win.matchMedia(media).matches\n    })));\n    const mql = queries.map(query2 => win.matchMedia(query2));\n    const handler = ev => {\n      setValue(prev => prev.slice().map(item => {\n        if (item.media === ev.media) return {\n          ...item,\n          matches: ev.matches\n        };\n        return item;\n      }));\n    };\n    mql.forEach(mq => {\n      if (isFunction(mq.addListener)) {\n        mq.addListener(handler);\n      } else {\n        mq.addEventListener(\"change\", handler);\n      }\n    });\n    return () => {\n      mql.forEach(mq => {\n        if (isFunction(mq.removeListener)) {\n          mq.removeListener(handler);\n        } else {\n          mq.removeEventListener(\"change\", handler);\n        }\n      });\n    };\n  }, [getWindow]);\n  return value.map(item => item.matches);\n};\nexport { useMediaQuery };","map":{"version":3,"names":["useEnvironment","isArray","isFunction","useEffect","useState","useMediaQuery","query","ssr","fallback","arguments","length","undefined","getWindow","queries","fallbackValues","filter","value2","value","setValue","map","media","index","_a","matches","matchMedia","win","mql","query2","handler","ev","prev","slice","item","forEach","mq","addListener","addEventListener","removeListener","removeEventListener"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\use-media-query\\src\\index.ts"],"sourcesContent":["import { useEnvironment } from \"@yamada-ui/providers\"\nimport { isArray, isFunction } from \"@yamada-ui/utils\"\nimport { useEffect, useState } from \"react\"\n\nexport type UseMediaQueryOptions = {\n  fallback?: boolean | boolean[]\n  ssr?: boolean\n}\n\n/**\n * `useMediaQuery` is a custom hook that detects whether it matches a single or multiple media queries.\n *\n * @see Docs https://yamada-ui.com/hooks/use-media-query\n */\nexport const useMediaQuery = (\n  query: string | string[],\n  { ssr = true, fallback }: UseMediaQueryOptions = {},\n): boolean[] => {\n  const { getWindow } = useEnvironment()\n\n  const queries = isArray(query) ? query : [query]\n\n  let fallbackValues = isArray(fallback) ? fallback : [fallback]\n\n  fallbackValues = fallbackValues.filter((value) => value != null) as boolean[]\n\n  const [value, setValue] = useState(() => {\n    return queries.map((media, index) => ({\n      media,\n      matches: ssr\n        ? !!fallbackValues[index]\n        : !!getWindow()?.matchMedia(media).matches,\n    }))\n  })\n\n  useEffect(() => {\n    const win = getWindow()\n\n    if (!win) return\n\n    setValue(\n      queries.map((media) => ({\n        media,\n        matches: win.matchMedia(media).matches,\n      })),\n    )\n\n    const mql = queries.map((query) => win.matchMedia(query))\n\n    const handler = (ev: MediaQueryListEvent) => {\n      setValue((prev) =>\n        prev.slice().map((item) => {\n          if (item.media === ev.media) return { ...item, matches: ev.matches }\n\n          return item\n        }),\n      )\n    }\n\n    mql.forEach((mq) => {\n      if (isFunction(mq.addListener)) {\n        mq.addListener(handler)\n      } else {\n        mq.addEventListener(\"change\", handler)\n      }\n    })\n\n    return () => {\n      mql.forEach((mq) => {\n        if (isFunction(mq.removeListener)) {\n          mq.removeListener(handler)\n        } else {\n          mq.removeEventListener(\"change\", handler)\n        }\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getWindow])\n\n  return value.map((item) => item.matches)\n}\n"],"mappings":";;;AAAA,SAASA,cAAA,QAAsB;AAC/B,SAASC,OAAA,EAASC,UAAA,QAAkB;AACpC,SAASC,SAAA,EAAWC,QAAA,QAAgB;AAY7B,IAAMC,aAAA,GAAgB,SAAAA,CAC3BC,KAAA,EAEc;EAAA,IADd;IAAEC,GAAA,GAAM;IAAMC;EAAS,IAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA0B,CAAC;EAElD,MAAM;IAAEG;EAAU,IAAIZ,cAAA,CAAe;EAErC,MAAMa,OAAA,GAAUZ,OAAA,CAAQK,KAAK,IAAIA,KAAA,GAAQ,CAACA,KAAK;EAE/C,IAAIQ,cAAA,GAAiBb,OAAA,CAAQO,QAAQ,IAAIA,QAAA,GAAW,CAACA,QAAQ;EAE7DM,cAAA,GAAiBA,cAAA,CAAeC,MAAA,CAAQC,MAAA,IAAUA,MAAA,IAAS,IAAI;EAE/D,MAAM,CAACC,KAAA,EAAOC,QAAQ,IAAId,QAAA,CAAS,MAAM;IACvC,OAAOS,OAAA,CAAQM,GAAA,CAAI,CAACC,KAAA,EAAOC,KAAA,KAAO;MA3BtC,IAAAC,EAAA;MA2B0C;QACpCF,KAAA;QACAG,OAAA,EAAShB,GAAA,GACL,CAAC,CAACO,cAAA,CAAeO,KAAK,IACtB,CAAC,GAACC,EAAA,GAAAV,SAAA,CAAU,MAAV,gBAAAU,EAAA,CAAaE,UAAA,CAAWJ,KAAA,EAAOG,OAAA;MACvC;IAAA,CAAE;EACJ,CAAC;EAEDpB,SAAA,CAAU,MAAM;IACd,MAAMsB,GAAA,GAAMb,SAAA,CAAU;IAEtB,IAAI,CAACa,GAAA,EAAK;IAEVP,QAAA,CACEL,OAAA,CAAQM,GAAA,CAAKC,KAAA,KAAW;MACtBA,KAAA;MACAG,OAAA,EAASE,GAAA,CAAID,UAAA,CAAWJ,KAAK,EAAEG;IACjC,EAAE,CACJ;IAEA,MAAMG,GAAA,GAAMb,OAAA,CAAQM,GAAA,CAAKQ,MAAA,IAAUF,GAAA,CAAID,UAAA,CAAWG,MAAK,CAAC;IAExD,MAAMC,OAAA,GAAWC,EAAA,IAA4B;MAC3CX,QAAA,CAAUY,IAAA,IACRA,IAAA,CAAKC,KAAA,CAAM,EAAEZ,GAAA,CAAKa,IAAA,IAAS;QACzB,IAAIA,IAAA,CAAKZ,KAAA,KAAUS,EAAA,CAAGT,KAAA,EAAO,OAAO;UAAE,GAAGY,IAAA;UAAMT,OAAA,EAASM,EAAA,CAAGN;QAAQ;QAEnE,OAAOS,IAAA;MACT,CAAC,CACH;IACF;IAEAN,GAAA,CAAIO,OAAA,CAASC,EAAA,IAAO;MAClB,IAAIhC,UAAA,CAAWgC,EAAA,CAAGC,WAAW,GAAG;QAC9BD,EAAA,CAAGC,WAAA,CAAYP,OAAO;MACxB,OAAO;QACLM,EAAA,CAAGE,gBAAA,CAAiB,UAAUR,OAAO;MACvC;IACF,CAAC;IAED,OAAO,MAAM;MACXF,GAAA,CAAIO,OAAA,CAASC,EAAA,IAAO;QAClB,IAAIhC,UAAA,CAAWgC,EAAA,CAAGG,cAAc,GAAG;UACjCH,EAAA,CAAGG,cAAA,CAAeT,OAAO;QAC3B,OAAO;UACLM,EAAA,CAAGI,mBAAA,CAAoB,UAAUV,OAAO;QAC1C;MACF,CAAC;IACH;EAEF,GAAG,CAAChB,SAAS,CAAC;EAEd,OAAOK,KAAA,CAAME,GAAA,CAAKa,IAAA,IAASA,IAAA,CAAKT,OAAO;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
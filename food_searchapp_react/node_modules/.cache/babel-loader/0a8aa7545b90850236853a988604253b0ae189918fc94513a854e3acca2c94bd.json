{"ast":null,"code":"\"use client\";\n\n// src/index.ts\nimport { useEventListener } from \"@yamada-ui/use-event-listener\";\nimport { getActiveElement, getAllFocusable, isRefObject, isTabbable, useSafeLayoutEffect, useUpdateEffect, isSafari } from \"@yamada-ui/utils\";\nimport { useCallback, useRef } from \"react\";\nvar preventReturnFocus = containerRef => {\n  const el = containerRef.current;\n  if (!el) return false;\n  const activeElement = getActiveElement(el);\n  if (!activeElement) return false;\n  if (el.contains(activeElement)) return false;\n  if (isTabbable(activeElement)) return true;\n  return false;\n};\nvar useFocusOnHide = (containerRef, _ref) => {\n  let {\n    shouldFocus: shouldFocusProp,\n    visible,\n    focusRef\n  } = _ref;\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus) return;\n    if (preventReturnFocus(containerRef)) return;\n    const el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n    if (el) {\n      requestAnimationFrame(() => {\n        el.focus();\n      });\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n};\nvar useFocusOnShow = function (target) {\n  let {\n    focusRef,\n    preventScroll,\n    shouldFocus,\n    visible\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    preventScroll: true,\n    shouldFocus: false\n  };\n  const element = isRefObject(target) ? target.current : target;\n  const autoFocusValue = shouldFocus && visible;\n  const autoFocusRef = useRef(autoFocusValue);\n  const lastVisibleRef = useRef(visible);\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) autoFocusRef.current = autoFocusValue;\n    lastVisibleRef.current = visible;\n  }, [visible, autoFocusValue]);\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current) return;\n    autoFocusRef.current = false;\n    if (element.contains(document.activeElement)) return;\n    if (focusRef == null ? void 0 : focusRef.current) {\n      requestAnimationFrame(() => {\n        var _a;\n        (_a = focusRef.current) == null ? void 0 : _a.focus({\n          preventScroll\n        });\n      });\n    } else {\n      const tabbableEls = getAllFocusable(element);\n      if (tabbableEls.length > 0) requestAnimationFrame(() => {\n        tabbableEls[0].focus({\n          preventScroll\n        });\n      });\n    }\n  }, [visible, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(element, \"transitionend\", onFocus);\n};\nvar useFocusOnPointerDown = _ref2 => {\n  let {\n    ref,\n    elements,\n    enabled\n  } = _ref2;\n  const doc = () => {\n    var _a, _b;\n    return (_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument) != null ? _b : document;\n  };\n  useEventListener(doc, \"pointerdown\", ev => {\n    if (!isSafari() || !enabled) return;\n    const target = ev.target;\n    const els = elements != null ? elements : [ref];\n    const isValidTarget = els.some(elementOrRef => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef;\n      return (el == null ? void 0 : el.contains(target)) || el === target;\n    });\n    if (doc().activeElement !== target && isValidTarget) {\n      ev.preventDefault();\n      target.focus();\n    }\n  });\n};\nexport { useFocusOnHide, useFocusOnPointerDown, useFocusOnShow };","map":{"version":3,"names":["useEventListener","getActiveElement","getAllFocusable","isRefObject","isTabbable","useSafeLayoutEffect","useUpdateEffect","isSafari","useCallback","useRef","preventReturnFocus","containerRef","el","current","activeElement","contains","useFocusOnHide","_ref","shouldFocus","shouldFocusProp","visible","focusRef","requestAnimationFrame","focus","useFocusOnShow","target","preventScroll","arguments","length","undefined","element","autoFocusValue","autoFocusRef","lastVisibleRef","onFocus","document","_a","tabbableEls","useFocusOnPointerDown","_ref2","ref","elements","enabled","doc","_b","ownerDocument","ev","els","isValidTarget","some","elementOrRef","preventDefault"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\use-focus\\src\\index.ts"],"sourcesContent":["import { useEventListener } from \"@yamada-ui/use-event-listener\"\nimport type { FocusableElement } from \"@yamada-ui/utils\"\nimport {\n  getActiveElement,\n  getAllFocusable,\n  isRefObject,\n  isTabbable,\n  useSafeLayoutEffect,\n  useUpdateEffect,\n  isSafari,\n} from \"@yamada-ui/utils\"\nimport type { RefObject } from \"react\"\nimport { useCallback, useRef } from \"react\"\n\nexport type UseFocusOnHideProps = {\n  focusRef: RefObject<FocusableElement>\n  shouldFocus?: boolean\n  visible?: boolean\n}\n\nconst preventReturnFocus = (containerRef: React.RefObject<HTMLElement>) => {\n  const el = containerRef.current\n\n  if (!el) return false\n\n  const activeElement = getActiveElement(el)\n\n  if (!activeElement) return false\n  if (el.contains(activeElement)) return false\n  if (isTabbable(activeElement)) return true\n\n  return false\n}\n\nexport const useFocusOnHide = (\n  containerRef: RefObject<HTMLElement>,\n  { shouldFocus: shouldFocusProp, visible, focusRef }: UseFocusOnHideProps,\n) => {\n  const shouldFocus = shouldFocusProp && !visible\n\n  useUpdateEffect(() => {\n    if (!shouldFocus) return\n\n    if (preventReturnFocus(containerRef)) return\n\n    const el = focusRef?.current || containerRef.current\n\n    if (el) {\n      requestAnimationFrame(() => {\n        el.focus()\n      })\n    }\n  }, [shouldFocus, containerRef, focusRef])\n}\n\nexport type UseFocusOnShowProps = {\n  visible?: boolean\n  shouldFocus?: boolean\n  preventScroll?: boolean\n  focusRef?: React.RefObject<FocusableElement>\n}\n\nexport const useFocusOnShow = <T extends HTMLElement>(\n  target: React.RefObject<T> | T,\n  { focusRef, preventScroll, shouldFocus, visible }: UseFocusOnShowProps = {\n    preventScroll: true,\n    shouldFocus: false,\n  },\n) => {\n  const element = isRefObject(target) ? target.current : target\n\n  const autoFocusValue = shouldFocus && visible\n  const autoFocusRef = useRef(autoFocusValue)\n  const lastVisibleRef = useRef(visible)\n\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible)\n      autoFocusRef.current = autoFocusValue\n\n    lastVisibleRef.current = visible\n  }, [visible, autoFocusValue])\n\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current) return\n\n    autoFocusRef.current = false\n\n    if (element.contains(document.activeElement as HTMLElement)) return\n\n    if (focusRef?.current) {\n      requestAnimationFrame(() => {\n        focusRef.current?.focus({ preventScroll })\n      })\n    } else {\n      const tabbableEls = getAllFocusable(element)\n\n      if (tabbableEls.length > 0)\n        requestAnimationFrame(() => {\n          tabbableEls[0].focus({ preventScroll })\n        })\n    }\n  }, [visible, preventScroll, element, focusRef])\n\n  useUpdateEffect(() => {\n    onFocus()\n  }, [onFocus])\n\n  useEventListener(element, \"transitionend\", onFocus)\n}\n\nexport type UseFocusOnMouseDownProps = {\n  ref: React.RefObject<HTMLElement>\n  enabled?: boolean\n  elements?: Array<React.RefObject<HTMLElement> | HTMLElement | null>\n}\n\nexport const useFocusOnPointerDown = ({\n  ref,\n  elements,\n  enabled,\n}: UseFocusOnMouseDownProps) => {\n  const doc = () => ref.current?.ownerDocument ?? document\n\n  useEventListener(doc, \"pointerdown\", (ev) => {\n    if (!isSafari() || !enabled) return\n    const target = ev.target as HTMLElement\n\n    const els = elements ?? [ref]\n\n    const isValidTarget = els.some((elementOrRef) => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef\n      return el?.contains(target) || el === target\n    })\n\n    if (doc().activeElement !== target && isValidTarget) {\n      ev.preventDefault()\n\n      target.focus()\n    }\n  })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
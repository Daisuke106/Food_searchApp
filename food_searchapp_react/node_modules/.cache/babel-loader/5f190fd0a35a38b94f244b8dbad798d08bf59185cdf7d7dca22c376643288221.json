{"ast":null,"code":"\"use client\";\n\n// src/tooltip.tsx\nimport { ui, forwardRef, omitThemeProps, useComponentStyle } from \"@yamada-ui/core\";\nimport { motion, AnimatePresence } from \"@yamada-ui/motion\";\nimport { Portal } from \"@yamada-ui/portal\";\nimport { scaleFadeProps, slideFadeProps } from \"@yamada-ui/transitions\";\nimport { useDisclosure } from \"@yamada-ui/use-disclosure\";\nimport { useEventListener } from \"@yamada-ui/use-event-listener\";\nimport { useOutsideClick } from \"@yamada-ui/use-outside-click\";\nimport { usePopper } from \"@yamada-ui/use-popper\";\nimport { cx, handlerAll, mergeRefs, getOwnerWindow, getOwnerDocument } from \"@yamada-ui/utils\";\nimport { Children, cloneElement, useCallback, useEffect, useRef } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar getTooltipProps = (animation = \"scale\", duration) => {\n  const custom = {\n    reverse: true,\n    duration,\n    enter: {\n      visibility: \"visible\"\n    },\n    transitionEnd: {\n      exit: {\n        visibility: \"hidden\"\n      }\n    }\n  };\n  switch (animation) {\n    case \"scale\":\n      return {\n        ...scaleFadeProps,\n        custom: {\n          ...custom,\n          scale: 0.95\n        }\n      };\n    case \"top\":\n      return {\n        ...slideFadeProps,\n        custom: {\n          ...custom,\n          offsetY: -16\n        }\n      };\n    case \"right\":\n      return {\n        ...slideFadeProps,\n        custom: {\n          ...custom,\n          offsetX: 16\n        }\n      };\n    case \"left\":\n      return {\n        ...slideFadeProps,\n        custom: {\n          ...custom,\n          offsetX: -16\n        }\n      };\n    case \"bottom\":\n      return {\n        ...slideFadeProps,\n        custom: {\n          ...custom,\n          offsetY: 16\n        }\n      };\n  }\n};\nvar Tooltip = forwardRef(({\n  closeOnPointerDown,\n  z: zProp,\n  zIndex: zIndexProp,\n  portalProps,\n  withPortal = true,\n  ...props\n}, ref) => {\n  var _a, _b;\n  let [{\n    z,\n    zIndex,\n    ...styles\n  }, mergedProps] = useComponentStyle(\"Tooltip\", props);\n  const {\n    className,\n    children,\n    label,\n    placement,\n    modifiers,\n    gutter,\n    offset,\n    openDelay = 0,\n    closeDelay = 0,\n    isDisabled,\n    closeOnClick,\n    closeOnScroll,\n    closeOnMouseDown,\n    closeOnEsc = true,\n    animation,\n    duration,\n    isOpen: isOpenProp,\n    defaultIsOpen: defaultIsOpenProp,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    ...rest\n  } = omitThemeProps(mergedProps);\n  closeOnPointerDown = closeOnMouseDown;\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen: defaultIsOpenProp,\n    onOpen: onOpenProp,\n    onClose: onCloseProp\n  });\n  const triggerRef = useRef(null);\n  const openTimeout = useRef();\n  const closeTimeout = useRef();\n  const {\n    referenceRef,\n    getPopperProps,\n    transformOrigin\n  } = usePopper({\n    enabled: isOpen,\n    placement,\n    modifiers,\n    gutter,\n    offset\n  });\n  const closeNow = useCallback(() => {\n    if (closeTimeout.current) {\n      clearTimeout(closeTimeout.current);\n      closeTimeout.current = void 0;\n    }\n    onClose();\n  }, [onClose]);\n  const openWithDelay = useCallback(() => {\n    if (!isDisabled && !openTimeout.current) {\n      if (isOpen) closeNow();\n      const win = getOwnerWindow(triggerRef.current);\n      openTimeout.current = win.setTimeout(onOpen, openDelay);\n    }\n  }, [isDisabled, isOpen, openDelay, closeNow, onOpen]);\n  const closeWithDelay = useCallback(() => {\n    if (openTimeout.current) {\n      clearTimeout(openTimeout.current);\n      openTimeout.current = void 0;\n    }\n    const win = getOwnerWindow(triggerRef.current);\n    closeTimeout.current = win.setTimeout(closeNow, closeDelay);\n  }, [closeDelay, closeNow]);\n  const onClick = useCallback(() => isOpen && closeOnClick ? closeWithDelay() : void 0, [isOpen, closeOnClick, closeWithDelay]);\n  const onPointerDown = useCallback(() => isOpen && closeOnPointerDown ? closeWithDelay() : void 0, [isOpen, closeOnPointerDown, closeWithDelay]);\n  const onKeyDown = useCallback(ev => isOpen && ev.key === \"Escape\" ? closeWithDelay() : void 0, [isOpen, closeWithDelay]);\n  useEventListener(() => getOwnerDocument(triggerRef.current), \"keydown\", ev => closeOnEsc ? onKeyDown(ev) : void 0);\n  useEventListener(() => getOwnerDocument(triggerRef.current), \"scroll\", () => isOpen && closeOnScroll ? closeNow() : void 0);\n  useEventListener(() => triggerRef.current, \"pointerleave\", e => {\n    if (e.pointerType !== \"touch\") closeWithDelay();\n  });\n  useEventListener(() => triggerRef.current, \"touchstart\", () => {\n    if (isOpen) closeWithDelay();else openWithDelay();\n  }, {\n    passive: true\n  });\n  useOutsideClick({\n    ref: triggerRef,\n    handler: () => {\n      closeWithDelay();\n    }\n  });\n  useEffect(() => () => {\n    clearTimeout(openTimeout.current);\n    clearTimeout(closeTimeout.current);\n  }, []);\n  const getTriggerProps = useCallback((props2 = {}, ref2 = null) => ({\n    ...props2,\n    ref: mergeRefs(triggerRef, ref2, referenceRef),\n    onPointerEnter: handlerAll(props2.onPointerEnter, openWithDelay),\n    onClick: handlerAll(props2.onClick, onClick),\n    onPointerDown: handlerAll(props2.onPointerDown, onPointerDown),\n    onFocus: handlerAll(props2.onFocus, openWithDelay),\n    onBlur: handlerAll(props2.onBlur, closeWithDelay)\n  }), [referenceRef, onClick, onPointerDown, openWithDelay, closeWithDelay]);\n  const child = Children.only(children);\n  const trigger = cloneElement(child, getTriggerProps(child.props, child.ref));\n  const css = {\n    position: \"relative\",\n    ...styles\n  };\n  if (!label) return /* @__PURE__ */jsx(Fragment, {\n    children\n  });\n  const resolvedZIndex = (_b = (_a = zIndexProp != null ? zIndexProp : zProp) != null ? _a : zIndex) != null ? _b : z;\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [trigger, /* @__PURE__ */jsx(AnimatePresence, {\n      children: isOpen ? /* @__PURE__ */jsx(Portal, {\n        isDisabled: !withPortal,\n        ...portalProps,\n        children: /* @__PURE__ */jsx(ui.div, {\n          ...getPopperProps(),\n          zIndex: resolvedZIndex,\n          pointerEvents: \"none\",\n          children: /* @__PURE__ */jsx(ui.div, {\n            as: motion.div,\n            ref,\n            className: cx(\"ui-tooltip\", className),\n            style: {\n              transformOrigin\n            },\n            ...(animation !== \"none\" ? getTooltipProps(animation, duration) : {}),\n            initial: \"exit\",\n            animate: isOpen ? \"enter\" : \"exit\",\n            exit: \"exit\",\n            __css: css,\n            ...rest,\n            children: label\n          })\n        })\n      }) : null\n    })]\n  });\n});\nexport { Tooltip };","map":{"version":3,"names":["ui","forwardRef","omitThemeProps","useComponentStyle","motion","AnimatePresence","Portal","scaleFadeProps","slideFadeProps","useDisclosure","useEventListener","useOutsideClick","usePopper","cx","handlerAll","mergeRefs","getOwnerWindow","getOwnerDocument","Children","cloneElement","useCallback","useEffect","useRef","Fragment","jsx","jsxs","getTooltipProps","animation","duration","custom","reverse","enter","visibility","transitionEnd","exit","scale","offsetY","offsetX","Tooltip","closeOnPointerDown","z","zProp","zIndex","zIndexProp","portalProps","withPortal","props","ref","_a","_b","styles","mergedProps","className","children","label","placement","modifiers","gutter","offset","openDelay","closeDelay","isDisabled","closeOnClick","closeOnScroll","closeOnMouseDown","closeOnEsc","isOpen","isOpenProp","defaultIsOpen","defaultIsOpenProp","onOpen","onOpenProp","onClose","onCloseProp","rest","triggerRef","openTimeout","closeTimeout","referenceRef","getPopperProps","transformOrigin","enabled","closeNow","current","clearTimeout","openWithDelay","win","setTimeout","closeWithDelay","onClick","onPointerDown","onKeyDown","ev","key","e","pointerType","passive","handler","getTriggerProps","props2","ref2","onPointerEnter","onFocus","onBlur","child","only","trigger","css","position","resolvedZIndex","div","pointerEvents","as","style","initial","animate","__css"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\tooltip\\src\\tooltip.tsx"],"sourcesContent":["import type {\n  CSSUIObject,\n  CSSUIProps,\n  HTMLUIProps,\n  ThemeProps,\n} from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  omitThemeProps,\n  useComponentStyle,\n} from \"@yamada-ui/core\"\nimport type {\n  HTMLMotionProps,\n  MotionTransitionProperties,\n} from \"@yamada-ui/motion\"\nimport { motion, AnimatePresence } from \"@yamada-ui/motion\"\nimport type { PortalProps } from \"@yamada-ui/portal\"\nimport { Portal } from \"@yamada-ui/portal\"\nimport { scaleFadeProps, slideFadeProps } from \"@yamada-ui/transitions\"\nimport { useDisclosure } from \"@yamada-ui/use-disclosure\"\nimport { useEventListener } from \"@yamada-ui/use-event-listener\"\nimport { useOutsideClick } from \"@yamada-ui/use-outside-click\"\nimport type { UsePopperProps } from \"@yamada-ui/use-popper\"\nimport { usePopper } from \"@yamada-ui/use-popper\"\nimport type { PropGetter } from \"@yamada-ui/utils\"\nimport {\n  cx,\n  handlerAll,\n  mergeRefs,\n  getOwnerWindow,\n  getOwnerDocument,\n} from \"@yamada-ui/utils\"\nimport type { ReactNode } from \"react\"\nimport { Children, cloneElement, useCallback, useEffect, useRef } from \"react\"\n\ntype TooltipOptions = {\n  /**\n   * The label of the tooltip.\n   */\n  label?: ReactNode\n  /**\n   * If `true`, the tooltip will be shown.\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the tooltip will be initially shown.\n   */\n  defaultIsOpen?: boolean\n  /**\n   * Callback to run when the tooltip shows.\n   */\n  onOpen?: () => void\n  /**\n   * Callback to run when the tooltip hides.\n   */\n  onClose?: () => void\n  /**\n   * If `true`, the tooltip will be disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * The delay before showing the tooltip.\n   *\n   * @default 0\n   */\n  openDelay?: number\n  /**\n   * The delay before hiding the tooltip.\n   *\n   * @default 0\n   */\n  closeDelay?: number\n  /**\n   * If `true`, the tooltip will hide on click.\n   *\n   * @default false\n   */\n  closeOnClick?: boolean\n  /**\n   * If `true`, the tooltip will hide on scroll.\n   *\n   * @default false\n   */\n  closeOnScroll?: boolean\n  /**\n   * If `true`, the tooltip will hide while the mouse is down.\n   *\n   * @default false\n   */\n  closeOnMouseDown?: boolean\n  /**\n   * If `true`, the tooltip will hide while the pointer is down.\n   *\n   * @default false\n   */\n  closeOnPointerDown?: boolean\n  /**\n   * If `true`, the tooltip will hide on pressing Esc key.\n   *\n   * @default true\n   */\n  closeOnEsc?: boolean\n  /**\n   * The animation of the tooltip.\n   *\n   * @default 'scale'\n   */\n  animation?: \"scale\" | \"top\" | \"right\" | \"left\" | \"bottom\" | \"none\"\n  /**\n   * The animation duration.\n   */\n  duration?: MotionTransitionProperties[\"duration\"]\n  /**\n   * Props for portal component.\n   */\n  portalProps?: Pick<PortalProps, \"appendToParentPortal\" | \"containerRef\">\n  /**\n   * If `true`, the element will be transported to the end of document.body.\n   */\n  withPortal?: boolean\n}\n\nexport type TooltipProps = Omit<HTMLUIProps<\"div\">, \"offset\"> &\n  ThemeProps<\"Tooltip\"> &\n  Omit<HTMLMotionProps<\"div\">, \"color\" | \"style\" | \"variants\" | \"transition\"> &\n  Pick<UsePopperProps, \"modifiers\" | \"gutter\" | \"offset\" | \"placement\"> &\n  TooltipOptions\n\nconst getTooltipProps = (\n  animation: TooltipProps[\"animation\"] = \"scale\",\n  duration?: TooltipProps[\"duration\"],\n) => {\n  const custom = {\n    reverse: true,\n    duration,\n    enter: { visibility: \"visible\" },\n    transitionEnd: { exit: { visibility: \"hidden\" } },\n  }\n\n  switch (animation) {\n    case \"scale\":\n      return {\n        ...scaleFadeProps,\n        custom: { ...custom, scale: 0.95 },\n      }\n    case \"top\":\n      return {\n        ...slideFadeProps,\n        custom: { ...custom, offsetY: -16 },\n      }\n    case \"right\":\n      return {\n        ...slideFadeProps,\n        custom: { ...custom, offsetX: 16 },\n      }\n    case \"left\":\n      return {\n        ...slideFadeProps,\n        custom: { ...custom, offsetX: -16 },\n      }\n    case \"bottom\":\n      return {\n        ...slideFadeProps,\n        custom: { ...custom, offsetY: 16 },\n      }\n  }\n}\n\n/**\n * `Tooltip` is a component that displays short information, such as supplementary details for an element.\n *\n * @see Docs https://yamada-ui.com/components/overlay/tooltip\n */\nexport const Tooltip = forwardRef<TooltipProps, \"div\">(\n  (\n    {\n      closeOnPointerDown,\n      z: zProp,\n      zIndex: zIndexProp,\n      portalProps,\n      withPortal = true,\n      ...props\n    },\n    ref,\n  ) => {\n    let [{ z, zIndex, ...styles }, mergedProps] = useComponentStyle(\n      \"Tooltip\",\n      props,\n    )\n    const {\n      className,\n      children,\n      label,\n      placement,\n      modifiers,\n      gutter,\n      offset,\n      openDelay = 0,\n      closeDelay = 0,\n      isDisabled,\n      closeOnClick,\n      closeOnScroll,\n      closeOnMouseDown,\n      closeOnEsc = true,\n      animation,\n      duration,\n      isOpen: isOpenProp,\n      defaultIsOpen: defaultIsOpenProp,\n      onOpen: onOpenProp,\n      onClose: onCloseProp,\n      ...rest\n    } = omitThemeProps(mergedProps)\n\n    closeOnPointerDown = closeOnMouseDown\n\n    const { isOpen, onOpen, onClose } = useDisclosure({\n      isOpen: isOpenProp,\n      defaultIsOpen: defaultIsOpenProp,\n      onOpen: onOpenProp,\n      onClose: onCloseProp,\n    })\n\n    const triggerRef = useRef<HTMLElement>(null)\n\n    const openTimeout = useRef<number>()\n    const closeTimeout = useRef<number>()\n\n    const { referenceRef, getPopperProps, transformOrigin } = usePopper({\n      enabled: isOpen,\n      placement,\n      modifiers,\n      gutter,\n      offset,\n    })\n\n    const closeNow = useCallback(() => {\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current)\n\n        closeTimeout.current = undefined\n      }\n\n      onClose()\n    }, [onClose])\n\n    const openWithDelay = useCallback(() => {\n      if (!isDisabled && !openTimeout.current) {\n        if (isOpen) closeNow()\n\n        const win = getOwnerWindow(triggerRef.current)\n\n        openTimeout.current = win.setTimeout(onOpen, openDelay)\n      }\n    }, [isDisabled, isOpen, openDelay, closeNow, onOpen])\n\n    const closeWithDelay = useCallback(() => {\n      if (openTimeout.current) {\n        clearTimeout(openTimeout.current)\n\n        openTimeout.current = undefined\n      }\n\n      const win = getOwnerWindow(triggerRef.current)\n\n      closeTimeout.current = win.setTimeout(closeNow, closeDelay)\n    }, [closeDelay, closeNow])\n\n    const onClick = useCallback(\n      () => (isOpen && closeOnClick ? closeWithDelay() : undefined),\n      [isOpen, closeOnClick, closeWithDelay],\n    )\n\n    const onPointerDown = useCallback(\n      () => (isOpen && closeOnPointerDown ? closeWithDelay() : undefined),\n      [isOpen, closeOnPointerDown, closeWithDelay],\n    )\n\n    const onKeyDown = useCallback(\n      (ev: KeyboardEvent) =>\n        isOpen && ev.key === \"Escape\" ? closeWithDelay() : undefined,\n      [isOpen, closeWithDelay],\n    )\n\n    useEventListener(\n      () => getOwnerDocument(triggerRef.current),\n      \"keydown\",\n      (ev) => (closeOnEsc ? onKeyDown(ev) : undefined),\n    )\n\n    useEventListener(\n      () => getOwnerDocument(triggerRef.current),\n      \"scroll\",\n      () => (isOpen && closeOnScroll ? closeNow() : undefined),\n    )\n\n    useEventListener(\n      () => triggerRef.current,\n      \"pointerleave\",\n      (e) => {\n        if (e.pointerType !== \"touch\") closeWithDelay()\n      },\n    )\n\n    useEventListener(\n      () => triggerRef.current,\n      \"touchstart\",\n      () => {\n        if (isOpen) closeWithDelay()\n        else openWithDelay()\n      },\n      { passive: true },\n    )\n\n    useOutsideClick({\n      ref: triggerRef,\n      handler: () => {\n        closeWithDelay()\n      },\n    })\n\n    useEffect(\n      () => () => {\n        clearTimeout(openTimeout.current)\n        clearTimeout(closeTimeout.current)\n      },\n      [],\n    )\n\n    const getTriggerProps: PropGetter = useCallback(\n      (props = {}, ref = null) => ({\n        ...props,\n        ref: mergeRefs(triggerRef, ref, referenceRef),\n        onPointerEnter: handlerAll(props.onPointerEnter, openWithDelay),\n        onClick: handlerAll(props.onClick, onClick),\n        onPointerDown: handlerAll(props.onPointerDown, onPointerDown),\n        onFocus: handlerAll(props.onFocus, openWithDelay),\n        onBlur: handlerAll(props.onBlur, closeWithDelay),\n      }),\n\n      [referenceRef, onClick, onPointerDown, openWithDelay, closeWithDelay],\n    )\n\n    const child = Children.only(children) as React.ReactElement & {\n      ref?: React.Ref<any>\n    }\n    const trigger = cloneElement(child, getTriggerProps(child.props, child.ref))\n\n    const css: CSSUIObject = {\n      position: \"relative\",\n      ...styles,\n    }\n\n    if (!label) return <>{children}</>\n\n    const resolvedZIndex = (zIndexProp ??\n      zProp ??\n      zIndex ??\n      z) as CSSUIProps[\"zIndex\"]\n\n    return (\n      <>\n        {trigger}\n\n        <AnimatePresence>\n          {isOpen ? (\n            <Portal isDisabled={!withPortal} {...portalProps}>\n              <ui.div\n                {...getPopperProps()}\n                zIndex={resolvedZIndex}\n                pointerEvents=\"none\"\n              >\n                <ui.div\n                  as={motion.div}\n                  ref={ref}\n                  className={cx(\"ui-tooltip\", className)}\n                  style={{ transformOrigin }}\n                  {...(animation !== \"none\"\n                    ? getTooltipProps(animation, duration)\n                    : {})}\n                  initial=\"exit\"\n                  animate={isOpen ? \"enter\" : \"exit\"}\n                  exit=\"exit\"\n                  __css={css}\n                  {...rest}\n                >\n                  {label}\n                </ui.div>\n              </ui.div>\n            </Portal>\n          ) : null}\n        </AnimatePresence>\n      </>\n    )\n  },\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
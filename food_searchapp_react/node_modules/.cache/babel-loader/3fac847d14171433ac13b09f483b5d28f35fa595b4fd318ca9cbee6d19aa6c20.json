{"ast":null,"code":"// src/components/progress.ts\nimport { mode } from \"@yamada-ui/core\";\nimport { getColor, isArray } from \"@yamada-ui/utils\";\nvar Progress = {\n  baseStyle: {\n    track: {\n      bg: \"border\"\n    },\n    filledTrack: ({\n      theme: t,\n      colorMode: m,\n      colorScheme: c = \"primary\",\n      hasStripe,\n      isAnimation,\n      filledTrackColor: f\n    }) => {\n      hasStripe = !isAnimation && hasStripe;\n      const color = mode(\"rgba(255, 255, 255, 0.15)\", \"rgba(0,0,0,0.1)\")(m);\n      const bgColor = f ? isArray(f) ? mode(getColor(f[0], f[0])(t, m), getColor(f[1], f[1])(t, m))(m) : getColor(f, f)(t, m) : getColor(`${c}.500`)(t, m);\n      const bgImage = hasStripe ? `linear-gradient(\n            45deg,\n            ${color} 25%,\n            transparent 25%,\n            transparent 50%,\n            ${color} 50%,\n            ${color} 75%,\n            transparent 75%,\n            transparent\n          )` : isAnimation ? `linear-gradient(\n            to right,\n            transparent 0%,\n            ${bgColor} 50%,\n            transparent 100%\n          )` : void 0;\n      return {\n        transitionProperty: \"common\",\n        transitionDuration: \"slow\",\n        bgImage,\n        ...(hasStripe ? {\n          bgSize: \"1rem 1rem\"\n        } : {}),\n        ...(!isAnimation ? {\n          bgColor\n        } : {})\n      };\n    }\n  },\n  sizes: {\n    xs: {\n      track: {\n        h: \"1\"\n      }\n    },\n    sm: {\n      track: {\n        h: \"2\"\n      }\n    },\n    md: {\n      track: {\n        h: \"3\"\n      }\n    },\n    lg: {\n      track: {\n        h: \"4\"\n      }\n    }\n  },\n  defaultProps: {\n    size: \"md\",\n    colorScheme: \"primary\"\n  }\n};\nexport { Progress };","map":{"version":3,"names":["mode","getColor","isArray","Progress","baseStyle","track","bg","filledTrack","theme","t","colorMode","m","colorScheme","c","hasStripe","isAnimation","filledTrackColor","f","color","bgColor","bgImage","transitionProperty","transitionDuration","bgSize","sizes","xs","h","sm","md","lg","defaultProps","size"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\theme\\src\\components\\progress.ts"],"sourcesContent":["import type { ComponentMultiStyle } from \"@yamada-ui/core\"\nimport { mode } from \"@yamada-ui/core\"\nimport { getColor, isArray } from \"@yamada-ui/utils\"\n\nexport const Progress: ComponentMultiStyle = {\n  baseStyle: {\n    track: {\n      bg: \"border\",\n    },\n    filledTrack: ({\n      theme: t,\n      colorMode: m,\n      colorScheme: c = \"primary\",\n      hasStripe,\n      isAnimation,\n      filledTrackColor: f,\n    }) => {\n      hasStripe = !isAnimation && hasStripe\n\n      const color = mode(\"rgba(255, 255, 255, 0.15)\", \"rgba(0,0,0,0.1)\")(m)\n\n      const bgColor = f\n        ? isArray(f)\n          ? mode(getColor(f[0], f[0])(t, m), getColor(f[1], f[1])(t, m))(m)\n          : getColor(f, f)(t, m)\n        : getColor(`${c}.500`)(t, m)\n\n      const bgImage = hasStripe\n        ? `linear-gradient(\n            45deg,\n            ${color} 25%,\n            transparent 25%,\n            transparent 50%,\n            ${color} 50%,\n            ${color} 75%,\n            transparent 75%,\n            transparent\n          )`\n        : isAnimation\n          ? `linear-gradient(\n            to right,\n            transparent 0%,\n            ${bgColor} 50%,\n            transparent 100%\n          )`\n          : undefined\n\n      return {\n        transitionProperty: \"common\",\n        transitionDuration: \"slow\",\n        bgImage,\n        ...(hasStripe ? { bgSize: \"1rem 1rem\" } : {}),\n        ...(!isAnimation ? { bgColor } : {}),\n      }\n    },\n  },\n\n  sizes: {\n    xs: {\n      track: {\n        h: \"1\",\n      },\n    },\n    sm: {\n      track: {\n        h: \"2\",\n      },\n    },\n    md: {\n      track: {\n        h: \"3\",\n      },\n    },\n    lg: {\n      track: {\n        h: \"4\",\n      },\n    },\n  },\n\n  defaultProps: {\n    size: \"md\",\n    colorScheme: \"primary\",\n  },\n}\n"],"mappings":";AACA,SAASA,IAAA,QAAY;AACrB,SAASC,QAAA,EAAUC,OAAA,QAAe;AAE3B,IAAMC,QAAA,GAAgC;EAC3CC,SAAA,EAAW;IACTC,KAAA,EAAO;MACLC,EAAA,EAAI;IACN;IACAC,WAAA,EAAaA,CAAC;MACZC,KAAA,EAAOC,CAAA;MACPC,SAAA,EAAWC,CAAA;MACXC,WAAA,EAAaC,CAAA,GAAI;MACjBC,SAAA;MACAC,WAAA;MACAC,gBAAA,EAAkBC;IACpB,MAAM;MACJH,SAAA,GAAY,CAACC,WAAA,IAAeD,SAAA;MAE5B,MAAMI,KAAA,GAAQlB,IAAA,CAAK,6BAA6B,iBAAiB,EAAEW,CAAC;MAEpE,MAAMQ,OAAA,GAAUF,CAAA,GACZf,OAAA,CAAQe,CAAC,IACPjB,IAAA,CAAKC,QAAA,CAASgB,CAAA,CAAE,CAAC,GAAGA,CAAA,CAAE,CAAC,CAAC,EAAER,CAAA,EAAGE,CAAC,GAAGV,QAAA,CAASgB,CAAA,CAAE,CAAC,GAAGA,CAAA,CAAE,CAAC,CAAC,EAAER,CAAA,EAAGE,CAAC,CAAC,EAAEA,CAAC,IAC9DV,QAAA,CAASgB,CAAA,EAAGA,CAAC,EAAER,CAAA,EAAGE,CAAC,IACrBV,QAAA,CAAS,GAAGY,CAAC,MAAM,EAAEJ,CAAA,EAAGE,CAAC;MAE7B,MAAMS,OAAA,GAAUN,SAAA,GACZ;AAAA;AAAA,cAEII,KAAK;AAAA;AAAA;AAAA,cAGLA,KAAK;AAAA,cACLA,KAAK;AAAA;AAAA;AAAA,eAITH,WAAA,GACE;AAAA;AAAA;AAAA,cAGEI,OAAO;AAAA;AAAA,eAGT;MAEN,OAAO;QACLE,kBAAA,EAAoB;QACpBC,kBAAA,EAAoB;QACpBF,OAAA;QACA,IAAIN,SAAA,GAAY;UAAES,MAAA,EAAQ;QAAY,IAAI,CAAC;QAC3C,IAAI,CAACR,WAAA,GAAc;UAAEI;QAAQ,IAAI,CAAC;MACpC;IACF;EACF;EAEAK,KAAA,EAAO;IACLC,EAAA,EAAI;MACFpB,KAAA,EAAO;QACLqB,CAAA,EAAG;MACL;IACF;IACAC,EAAA,EAAI;MACFtB,KAAA,EAAO;QACLqB,CAAA,EAAG;MACL;IACF;IACAE,EAAA,EAAI;MACFvB,KAAA,EAAO;QACLqB,CAAA,EAAG;MACL;IACF;IACAG,EAAA,EAAI;MACFxB,KAAA,EAAO;QACLqB,CAAA,EAAG;MACL;IACF;EACF;EAEAI,YAAA,EAAc;IACZC,IAAA,EAAM;IACNnB,WAAA,EAAa;EACf;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
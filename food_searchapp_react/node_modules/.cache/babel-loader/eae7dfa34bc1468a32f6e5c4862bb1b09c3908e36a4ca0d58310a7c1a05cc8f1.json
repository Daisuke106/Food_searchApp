{"ast":null,"code":"\"use client\";\n\n// src/alert.tsx\nimport { ui, forwardRef, useMultiComponentStyle, omitThemeProps, useTheme } from \"@yamada-ui/core\";\nimport { InfoIcon, WarningIcon, CheckIcon } from \"@yamada-ui/icon\";\nimport { Loading } from \"@yamada-ui/loading\";\nimport { createContext, cx } from \"@yamada-ui/utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar defaultStatuses = {\n  info: {\n    icon: InfoIcon,\n    colorScheme: \"info\"\n  },\n  success: {\n    icon: CheckIcon,\n    colorScheme: \"success\"\n  },\n  warning: {\n    icon: WarningIcon,\n    colorScheme: \"warning\"\n  },\n  error: {\n    icon: WarningIcon,\n    colorScheme: \"danger\"\n  },\n  loading: {\n    icon: Loading,\n    colorScheme: \"primary\"\n  }\n};\nvar [AlertProvider, useAlert] = createContext({\n  name: \"AlertStylesContext\",\n  errorMessage: \"useAlert returned is 'undefined'. Seems you forgot to wrap the components in \\\"<Alert />\\\" \"\n});\nvar getStatusColorScheme = (status, statuses) => {\n  var _a, _b;\n  return (_b = (_a = statuses == null ? void 0 : statuses[status]) == null ? void 0 : _a.colorScheme) != null ? _b : defaultStatuses[status].colorScheme;\n};\nvar getStatusIcon = (status, statuses) => {\n  var _a, _b;\n  return (_b = (_a = statuses == null ? void 0 : statuses[status]) == null ? void 0 : _a.icon) != null ? _b : defaultStatuses[status].icon;\n};\nvar Alert = forwardRef((_ref, ref) => {\n  let {\n    status = \"info\",\n    colorScheme,\n    ...props\n  } = _ref;\n  var _a, _b, _c;\n  const {\n    theme\n  } = useTheme();\n  const statuses = (_c = (_b = (_a = theme.__config) == null ? void 0 : _a.alert) == null ? void 0 : _b.statuses) != null ? _c : {};\n  colorScheme != null ? colorScheme : colorScheme = getStatusColorScheme(status, statuses);\n  const [styles, mergedProps] = useMultiComponentStyle(\"Alert\", {\n    ...props,\n    colorScheme\n  });\n  const {\n    className,\n    children,\n    ...rest\n  } = omitThemeProps(mergedProps);\n  const css = {\n    w: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    ...styles.container\n  };\n  return /* @__PURE__ */jsx(AlertProvider, {\n    value: {\n      status,\n      styles\n    },\n    children: /* @__PURE__ */jsx(ui.div, {\n      ref,\n      className: cx(\"ui-alert\", className),\n      role: \"alert\",\n      __css: css,\n      ...rest,\n      children\n    })\n  });\n});\nvar AlertIcon = _ref2 => {\n  let {\n    className,\n    children,\n    variant = \"oval\",\n    ...rest\n  } = _ref2;\n  var _a, _b, _c;\n  const {\n    status,\n    styles\n  } = useAlert();\n  const {\n    theme\n  } = useTheme();\n  const statuses = (_c = (_b = (_a = theme.__config) == null ? void 0 : _a.alert) == null ? void 0 : _b.statuses) != null ? _c : {};\n  const Icon = getStatusIcon(status, statuses);\n  const css = {\n    ...styles.icon,\n    ...(status === \"loading\" ? styles.loading : {})\n  };\n  return /* @__PURE__ */jsx(ui.span, {\n    display: \"inherit\",\n    className: cx(\"ui-alert__icon\", className),\n    __css: css,\n    ...rest,\n    children: children || /* @__PURE__ */jsx(Icon, {\n      ...(status === \"loading\" ? {\n        variant,\n        color: \"currentcolor\"\n      } : {\n        boxSize: \"100%\"\n      })\n    })\n  });\n};\nvar AlertTitle = forwardRef((_ref3, ref) => {\n  let {\n    className,\n    ...rest\n  } = _ref3;\n  const {\n    styles\n  } = useAlert();\n  const css = {\n    display: \"block\",\n    ...styles.title\n  };\n  return /* @__PURE__ */jsx(ui.p, {\n    ref,\n    className: cx(\"ui-alert__title\", className),\n    __css: css,\n    ...rest\n  });\n});\nvar AlertDescription = forwardRef((_ref4, ref) => {\n  let {\n    className,\n    ...rest\n  } = _ref4;\n  const {\n    styles\n  } = useAlert();\n  const css = {\n    ...styles.description\n  };\n  return /* @__PURE__ */jsx(ui.span, {\n    ref,\n    className: cx(\"ui-alert__desc\", className),\n    __css: css,\n    ...rest\n  });\n});\nexport { getStatusColorScheme, getStatusIcon, Alert, AlertIcon, AlertTitle, AlertDescription };","map":{"version":3,"names":["ui","forwardRef","useMultiComponentStyle","omitThemeProps","useTheme","InfoIcon","WarningIcon","CheckIcon","Loading","createContext","cx","jsx","defaultStatuses","info","icon","colorScheme","success","warning","error","loading","AlertProvider","useAlert","name","errorMessage","getStatusColorScheme","status","statuses","_a","_b","getStatusIcon","Alert","_ref","ref","props","_c","theme","__config","alert","styles","mergedProps","className","children","rest","css","w","display","alignItems","position","overflow","container","value","div","role","__css","AlertIcon","_ref2","variant","Icon","span","color","boxSize","AlertTitle","_ref3","title","p","AlertDescription","_ref4","description"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\alert\\src\\alert.tsx"],"sourcesContent":["import type {\n  HTMLUIProps,\n  ThemeProps,\n  CSSUIObject,\n  AlertStatuses,\n} from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n  useTheme,\n} from \"@yamada-ui/core\"\nimport { InfoIcon, WarningIcon, CheckIcon } from \"@yamada-ui/icon\"\nimport type { LoadingProps } from \"@yamada-ui/loading\"\nimport { Loading } from \"@yamada-ui/loading\"\nimport { createContext, cx } from \"@yamada-ui/utils\"\nimport type { FC } from \"react\"\n\nconst defaultStatuses = {\n  info: { icon: InfoIcon, colorScheme: \"info\" },\n  success: { icon: CheckIcon, colorScheme: \"success\" },\n  warning: { icon: WarningIcon, colorScheme: \"warning\" },\n  error: { icon: WarningIcon, colorScheme: \"danger\" },\n  loading: { icon: Loading, colorScheme: \"primary\" },\n} as const\n\nexport type Status = keyof typeof defaultStatuses\n\ntype AlertContext = {\n  status: Status\n  styles: Record<string, CSSUIObject>\n}\n\nconst [AlertProvider, useAlert] = createContext<AlertContext>({\n  name: `AlertStylesContext`,\n  errorMessage: `useAlert returned is 'undefined'. Seems you forgot to wrap the components in \"<Alert />\" `,\n})\n\nexport const getStatusColorScheme = (\n  status: Status,\n  statuses?: AlertStatuses,\n) => statuses?.[status]?.colorScheme ?? defaultStatuses[status].colorScheme\n\nexport const getStatusIcon = (status: Status, statuses?: AlertStatuses) =>\n  statuses?.[status]?.icon ?? defaultStatuses[status].icon\n\ntype AlertOptions = {\n  /**\n   * The status of the alert.\n   *\n   * @default 'info'\n   */\n  status?: Status\n}\n\nexport type AlertProps = HTMLUIProps<\"div\"> & ThemeProps<\"Alert\"> & AlertOptions\n\n/**\n * `Alert` is a component that conveys information to the user.\n *\n * @see Docs https://yamada-ui.com/components/feedback/alert\n */\nexport const Alert = forwardRef<AlertProps, \"div\">(\n  ({ status = \"info\", colorScheme, ...props }, ref) => {\n    const { theme } = useTheme()\n    const statuses = theme.__config?.alert?.statuses ?? {}\n\n    colorScheme ??= getStatusColorScheme(status, statuses)\n\n    const [styles, mergedProps] = useMultiComponentStyle(\"Alert\", {\n      ...props,\n      colorScheme,\n    })\n    const { className, children, ...rest } = omitThemeProps(mergedProps)\n\n    const css: CSSUIObject = {\n      w: \"100%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      position: \"relative\",\n      overflow: \"hidden\",\n      ...styles.container,\n    }\n\n    return (\n      <AlertProvider value={{ status, styles }}>\n        <ui.div\n          ref={ref}\n          className={cx(\"ui-alert\", className)}\n          role=\"alert\"\n          __css={css}\n          {...rest}\n        >\n          {children}\n        </ui.div>\n      </AlertProvider>\n    )\n  },\n)\n\nexport type AlertIconProps = HTMLUIProps<\"span\"> & {\n  variant?: LoadingProps[\"variant\"]\n}\n\nexport const AlertIcon: FC<AlertIconProps> = ({\n  className,\n  children,\n  variant = \"oval\",\n  ...rest\n}) => {\n  const { status, styles } = useAlert()\n  const { theme } = useTheme()\n  const statuses = theme.__config?.alert?.statuses ?? {}\n\n  const Icon = getStatusIcon(status, statuses)\n  const css: CSSUIObject = {\n    ...styles.icon,\n    ...(status === \"loading\" ? styles.loading : {}),\n  }\n\n  return (\n    <ui.span\n      display=\"inherit\"\n      className={cx(\"ui-alert__icon\", className)}\n      __css={css}\n      {...rest}\n    >\n      {children || (\n        <Icon\n          {...(status === \"loading\"\n            ? { variant, color: \"currentcolor\" }\n            : { boxSize: \"100%\" })}\n        />\n      )}\n    </ui.span>\n  )\n}\n\nexport type AlertTitleProps = HTMLUIProps<\"p\">\n\nexport const AlertTitle = forwardRef<AlertTitleProps, \"p\">(\n  ({ className, ...rest }, ref) => {\n    const { styles } = useAlert()\n\n    const css: CSSUIObject = {\n      display: \"block\",\n      ...styles.title,\n    }\n\n    return (\n      <ui.p\n        ref={ref}\n        className={cx(\"ui-alert__title\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n\nexport type AlertDescriptionProps = HTMLUIProps<\"span\">\n\nexport const AlertDescription = forwardRef<AlertDescriptionProps, \"span\">(\n  ({ className, ...rest }, ref) => {\n    const { styles } = useAlert()\n\n    const css: CSSUIObject = {\n      ...styles.description,\n    }\n\n    return (\n      <ui.span\n        ref={ref}\n        className={cx(\"ui-alert__desc\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
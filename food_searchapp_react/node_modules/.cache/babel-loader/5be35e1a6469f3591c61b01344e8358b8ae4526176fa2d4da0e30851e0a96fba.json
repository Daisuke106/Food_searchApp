{"ast":null,"code":"\"use client\";\n\nimport { SaturationSlider } from \"./chunk-RR6V37S5.mjs\";\nimport { ColorSelectorBody } from \"./chunk-7BDU5DSE.mjs\";\nimport { ColorSelectorChannels } from \"./chunk-YXQQHV2S.mjs\";\nimport { ColorSelectorSwatches } from \"./chunk-WJEDVOZ4.mjs\";\nimport { ColorSelectorProvider, useColorSelector } from \"./chunk-5QT7SRA4.mjs\";\n\n// src/color-selector.tsx\nimport { ui, forwardRef, useMultiComponentStyle, omitThemeProps } from \"@yamada-ui/core\";\nimport { cx, runIfFunc } from \"@yamada-ui/utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ColorSelector = forwardRef(({\n  size,\n  ...props\n}, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"ColorSelector\", {\n    size,\n    ...props\n  });\n  const {\n    className,\n    children,\n    withResult = true,\n    withPicker = true,\n    withChannel = true,\n    swatches,\n    swatchesColumns = 7,\n    inputProps,\n    withEyeDropper,\n    eyeDropperRef,\n    eyeDropperProps,\n    saturationSliderRef,\n    saturationSliderProps,\n    hueSliderRef,\n    hueSliderProps,\n    alphaSliderRef,\n    alphaSliderProps,\n    swatchesLabel,\n    swatchProps,\n    swatchesProps,\n    channelsProps,\n    channelProps,\n    ...computedProps\n  } = omitThemeProps(mergedProps);\n  const {\n    value,\n    getContainerProps,\n    getInputProps,\n    getSaturationSliderProps,\n    ...rest\n  } = useColorSelector(computedProps);\n  const css = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    ...styles.container\n  };\n  return /* @__PURE__ */jsx(ColorSelectorProvider, {\n    value: {\n      styles,\n      size,\n      value,\n      ...rest\n    },\n    children: /* @__PURE__ */jsxs(ui.div, {\n      ref,\n      className: cx(\"ui-color-selector\", className),\n      __css: css,\n      ...getContainerProps(),\n      children: [/* @__PURE__ */jsx(ui.input, {\n        ...getInputProps(inputProps, ref)\n      }), withPicker ? /* @__PURE__ */jsx(SaturationSlider, {\n        size,\n        className: \"ui-color-selector__saturation-slider\",\n        __css: {\n          ...styles.saturationSlider\n        },\n        ...getSaturationSliderProps(saturationSliderProps, saturationSliderRef)\n      }) : null, withPicker ? /* @__PURE__ */jsx(ColorSelectorBody, {\n        ...{\n          withResult,\n          withEyeDropper,\n          eyeDropperRef,\n          eyeDropperProps,\n          hueSliderRef,\n          hueSliderProps,\n          alphaSliderRef,\n          alphaSliderProps\n        }\n      }) : null, withPicker && withChannel ? /* @__PURE__ */jsx(ColorSelectorChannels, {\n        ...{\n          channelProps,\n          ...channelsProps\n        }\n      }) : null, /* @__PURE__ */jsx(ColorSelectorSwatches, {\n        ...{\n          swatchesLabel,\n          swatches,\n          swatchesColumns,\n          swatchProps,\n          ...swatchesProps\n        }\n      }), runIfFunc(children, {\n        value\n      })]\n    })\n  });\n});\nexport { ColorSelector };","map":{"version":3,"names":["ui","forwardRef","useMultiComponentStyle","omitThemeProps","cx","runIfFunc","jsx","jsxs","ColorSelector","size","props","ref","styles","mergedProps","className","children","withResult","withPicker","withChannel","swatches","swatchesColumns","inputProps","withEyeDropper","eyeDropperRef","eyeDropperProps","saturationSliderRef","saturationSliderProps","hueSliderRef","hueSliderProps","alphaSliderRef","alphaSliderProps","swatchesLabel","swatchProps","swatchesProps","channelsProps","channelProps","computedProps","value","getContainerProps","getInputProps","getSaturationSliderProps","rest","useColorSelector","css","display","flexDirection","container","ColorSelectorProvider","div","__css","input","SaturationSlider","saturationSlider","ColorSelectorBody","ColorSelectorChannels","ColorSelectorSwatches"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\color-picker\\src\\color-selector.tsx"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps, ThemeProps } from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport { cx, runIfFunc } from \"@yamada-ui/utils\"\nimport type { ForwardedRef, ReactNode } from \"react\"\nimport type { ColorSelectorBodyProps } from \"./color-selector-body\"\nimport { ColorSelectorBody } from \"./color-selector-body\"\nimport type { ColorSelectorChannelsProps } from \"./color-selector-channels\"\nimport { ColorSelectorChannels } from \"./color-selector-channels\"\nimport type { ColorSelectorSwatchesProps } from \"./color-selector-swatches\"\nimport { ColorSelectorSwatches } from \"./color-selector-swatches\"\nimport type { SaturationSliderProps } from \"./saturation-slider\"\nimport { SaturationSlider } from \"./saturation-slider\"\nimport type { UseColorSelectorProps } from \"./use-color-selector\"\nimport { ColorSelectorProvider, useColorSelector } from \"./use-color-selector\"\n\ntype ColorSelectorOptions = {\n  /**\n   * If `true`, display the saturation, hue, alpha, channels and eye dropper component.\n   *\n   * @default true\n   */\n  withPicker?: boolean\n  /**\n   * If `true`, display the channels component.\n   *\n   * @default true\n   */\n  withChannel?: boolean\n  /**\n   * Props for the color selector input element.\n   */\n  inputProps?: HTMLUIProps<\"input\">\n  /**\n   * Ref for the saturation slider component.\n   */\n  saturationSliderRef?: ForwardedRef<HTMLInputElement>\n  /**\n   * Props for the saturation slider component.\n   */\n  saturationSliderProps?: Omit<SaturationSliderProps, \"value\" | \"defaultValue\">\n  /**\n   * Props for the swatches component.\n   */\n  swatchesProps?: ColorSelectorSwatchesProps\n  /**\n   * Props for the channels component.\n   */\n  channelsProps?: ColorSelectorChannelsProps\n  children?: ReactNode | ((props: { value: string }) => ReactNode)\n}\n\nexport type ColorSelectorProps = ThemeProps<\"ColorSelector\"> &\n  UseColorSelectorProps &\n  ColorSelectorOptions &\n  Pick<\n    ColorSelectorBodyProps,\n    | \"withResult\"\n    | \"withEyeDropper\"\n    | \"eyeDropperRef\"\n    | \"eyeDropperProps\"\n    | \"hueSliderRef\"\n    | \"hueSliderProps\"\n    | \"alphaSliderRef\"\n    | \"alphaSliderProps\"\n  > &\n  Pick<\n    ColorSelectorSwatchesProps,\n    \"swatchesLabel\" | \"swatches\" | \"swatchesColumns\" | \"swatchProps\"\n  > &\n  Pick<ColorSelectorChannelsProps, \"channelProps\">\n\n/**\n * `ColorSelector` is a component used by the user to select a color.\n *\n * @see Docs https://yamada-ui.com/components/forms/color-selector\n */\nexport const ColorSelector = forwardRef<ColorSelectorProps, \"input\">(\n  ({ size, ...props }, ref) => {\n    const [styles, mergedProps] = useMultiComponentStyle(\"ColorSelector\", {\n      size,\n      ...props,\n    })\n    const {\n      className,\n      children,\n      withResult = true,\n      withPicker = true,\n      withChannel = true,\n      swatches,\n      swatchesColumns = 7,\n      inputProps,\n      withEyeDropper,\n      eyeDropperRef,\n      eyeDropperProps,\n      saturationSliderRef,\n      saturationSliderProps,\n      hueSliderRef,\n      hueSliderProps,\n      alphaSliderRef,\n      alphaSliderProps,\n      swatchesLabel,\n      swatchProps,\n      swatchesProps,\n      channelsProps,\n      channelProps,\n      ...computedProps\n    } = omitThemeProps(mergedProps)\n    const {\n      value,\n      getContainerProps,\n      getInputProps,\n      getSaturationSliderProps,\n      ...rest\n    } = useColorSelector(computedProps)\n\n    const css: CSSUIObject = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      ...styles.container,\n    }\n\n    return (\n      <ColorSelectorProvider value={{ styles, size, value, ...rest }}>\n        <ui.div\n          ref={ref}\n          className={cx(\"ui-color-selector\", className)}\n          __css={css}\n          {...getContainerProps()}\n        >\n          <ui.input {...getInputProps(inputProps, ref)} />\n\n          {withPicker ? (\n            <SaturationSlider\n              size={size}\n              className=\"ui-color-selector__saturation-slider\"\n              __css={{ ...styles.saturationSlider }}\n              {...getSaturationSliderProps(\n                saturationSliderProps,\n                saturationSliderRef,\n              )}\n            />\n          ) : null}\n\n          {withPicker ? (\n            <ColorSelectorBody\n              {...{\n                withResult,\n                withEyeDropper,\n                eyeDropperRef,\n                eyeDropperProps,\n                hueSliderRef,\n                hueSliderProps,\n                alphaSliderRef,\n                alphaSliderProps,\n              }}\n            />\n          ) : null}\n\n          {withPicker && withChannel ? (\n            <ColorSelectorChannels {...{ channelProps, ...channelsProps }} />\n          ) : null}\n\n          <ColorSelectorSwatches\n            {...{\n              swatchesLabel,\n              swatches,\n              swatchesColumns,\n              swatchProps,\n              ...swatchesProps,\n            }}\n          />\n\n          {runIfFunc(children, { value })}\n        </ui.div>\n      </ColorSelectorProvider>\n    )\n  },\n)\n"],"mappings":";;;;;;;;;AACA,SACEA,EAAA,EACAC,UAAA,EACAC,sBAAA,EACAC,cAAA,QACK;AACP,SAASC,EAAA,EAAIC,SAAA,QAAiB;AAyHtB,SAMEC,GAAA,EANFC,IAAA;AA/CD,IAAMC,aAAA,GAAgBP,UAAA,CAC3B,CAAC;EAAEQ,IAAA;EAAM,GAAGC;AAAM,GAAGC,GAAA,KAAQ;EAC3B,MAAM,CAACC,MAAA,EAAQC,WAAW,IAAIX,sBAAA,CAAuB,iBAAiB;IACpEO,IAAA;IACA,GAAGC;EACL,CAAC;EACD,MAAM;IACJI,SAAA;IACAC,QAAA;IACAC,UAAA,GAAa;IACbC,UAAA,GAAa;IACbC,WAAA,GAAc;IACdC,QAAA;IACAC,eAAA,GAAkB;IAClBC,UAAA;IACAC,cAAA;IACAC,aAAA;IACAC,eAAA;IACAC,mBAAA;IACAC,qBAAA;IACAC,YAAA;IACAC,cAAA;IACAC,cAAA;IACAC,gBAAA;IACAC,aAAA;IACAC,WAAA;IACAC,aAAA;IACAC,aAAA;IACAC,YAAA;IACA,GAAGC;EACL,IAAIjC,cAAA,CAAeU,WAAW;EAC9B,MAAM;IACJwB,KAAA;IACAC,iBAAA;IACAC,aAAA;IACAC,wBAAA;IACA,GAAGC;EACL,IAAIC,gBAAA,CAAiBN,aAAa;EAElC,MAAMO,GAAA,GAAmB;IACvBC,OAAA,EAAS;IACTC,aAAA,EAAe;IACf,GAAGjC,MAAA,CAAOkC;EACZ;EAEA,OACE,eAAAxC,GAAA,CAACyC,qBAAA;IAAsBV,KAAA,EAAO;MAAEzB,MAAA;MAAQH,IAAA;MAAM4B,KAAA;MAAO,GAAGI;IAAK;IAC3D1B,QAAA,iBAAAR,IAAA,CAACP,EAAA,CAAGgD,GAAA,EAAH;MACCrC,GAAA;MACAG,SAAA,EAAWV,EAAA,CAAG,qBAAqBU,SAAS;MAC5CmC,KAAA,EAAON,GAAA;MACN,GAAGL,iBAAA,CAAkB;MAEtBvB,QAAA,kBAAAT,GAAA,CAACN,EAAA,CAAGkD,KAAA,EAAH;QAAU,GAAGX,aAAA,CAAclB,UAAA,EAAYV,GAAG;MAAA,CAAG,GAE7CM,UAAA,GACC,eAAAX,GAAA,CAAC6C,gBAAA;QACC1C,IAAA;QACAK,SAAA,EAAU;QACVmC,KAAA,EAAO;UAAE,GAAGrC,MAAA,CAAOwC;QAAiB;QACnC,GAAGZ,wBAAA,CACFd,qBAAA,EACAD,mBACF;MAAA,CACF,IACE,MAEHR,UAAA,GACC,eAAAX,GAAA,CAAC+C,iBAAA;QACE,GAAG;UACFrC,UAAA;UACAM,cAAA;UACAC,aAAA;UACAC,eAAA;UACAG,YAAA;UACAC,cAAA;UACAC,cAAA;UACAC;QACF;MAAA,CACF,IACE,MAEHb,UAAA,IAAcC,WAAA,GACb,eAAAZ,GAAA,CAACgD,qBAAA;QAAuB,GAAG;UAAEnB,YAAA;UAAc,GAAGD;QAAc;MAAA,CAAG,IAC7D,MAEJ,eAAA5B,GAAA,CAACiD,qBAAA;QACE,GAAG;UACFxB,aAAA;UACAZ,QAAA;UACAC,eAAA;UACAY,WAAA;UACA,GAAGC;QACL;MAAA,CACF,GAEC5B,SAAA,CAAUU,QAAA,EAAU;QAAEsB;MAAM,CAAC;IAAA,CAChC;EAAA,CACF;AAEJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\n// src/index.ts\nimport { useCallbackRef } from \"@yamada-ui/utils\";\nimport { useEffect } from \"react\";\nvar useWindowEvent = (event, handler, options) => {\n  const listener = useCallbackRef(handler);\n  useEffect(() => {\n    window.addEventListener(event, listener, options);\n    return () => {\n      window.removeEventListener(event, listener, options);\n    };\n  }, [event, listener, options]);\n};\nexport { useWindowEvent };","map":{"version":3,"names":["useCallbackRef","useEffect","useWindowEvent","event","handler","options","listener","window","addEventListener","removeEventListener"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\use-window-event\\src\\index.ts"],"sourcesContent":["import { useCallbackRef } from \"@yamada-ui/utils\"\nimport { useEffect } from \"react\"\n\ntype Handler<E extends string> = E extends keyof WindowEventMap\n  ? (ev: WindowEventMap[E]) => void\n  : (ev: CustomEvent) => void\ntype Options = boolean | AddEventListenerOptions\n\n/**\n * `useWindowEvent` is a custom hook that assigns an event listener to `window`.\n *\n * @see Docs https://yamada-ui.com/hooks/use-window-event\n */\nexport const useWindowEvent = <E extends string>(\n  event: E,\n  handler: Handler<E>,\n  options?: Options,\n) => {\n  const listener = useCallbackRef(\n    handler,\n  ) as unknown as EventListenerOrEventListenerObject\n\n  useEffect(() => {\n    window.addEventListener(event, listener, options)\n\n    return () => {\n      window.removeEventListener(event, listener, options)\n    }\n  }, [event, listener, options])\n}\n"],"mappings":";;;AAAA,SAASA,cAAA,QAAsB;AAC/B,SAASC,SAAA,QAAiB;AAYnB,IAAMC,cAAA,GAAiBA,CAC5BC,KAAA,EACAC,OAAA,EACAC,OAAA,KACG;EACH,MAAMC,QAAA,GAAWN,cAAA,CACfI,OACF;EAEAH,SAAA,CAAU,MAAM;IACdM,MAAA,CAAOC,gBAAA,CAAiBL,KAAA,EAAOG,QAAA,EAAUD,OAAO;IAEhD,OAAO,MAAM;MACXE,MAAA,CAAOE,mBAAA,CAAoBN,KAAA,EAAOG,QAAA,EAAUD,OAAO;IACrD;EACF,GAAG,CAACF,KAAA,EAAOG,QAAA,EAAUD,OAAO,CAAC;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// src/with-default.ts\nimport { isArray, merge } from \"@yamada-ui/utils\";\nvar withDefaultSize = _ref => {\n  let {\n    size,\n    components\n  } = _ref;\n  return theme => {\n    var _a;\n    let keys = Object.keys((_a = theme.components) != null ? _a : {});\n    if (isArray(components)) keys = components;\n    return merge(theme, {\n      components: Object.fromEntries(keys.map(key => [key, {\n        defaultProps: {\n          size\n        }\n      }]))\n    });\n  };\n};\nvar withDefaultVariant = _ref2 => {\n  let {\n    variant,\n    components\n  } = _ref2;\n  return theme => {\n    var _a;\n    let keys = Object.keys((_a = theme.components) != null ? _a : {});\n    if (isArray(components)) keys = components;\n    return merge(theme, {\n      components: Object.fromEntries(keys.map(key => [key, {\n        defaultProps: {\n          variant\n        }\n      }]))\n    });\n  };\n};\nvar withDefaultColorScheme = _ref3 => {\n  let {\n    colorScheme,\n    components\n  } = _ref3;\n  return theme => {\n    var _a;\n    let keys = Object.keys((_a = theme.components) != null ? _a : {});\n    if (isArray(components)) keys = components;\n    return merge(theme, {\n      components: Object.fromEntries(keys.map(key => [key, {\n        defaultProps: {\n          colorScheme\n        }\n      }]))\n    });\n  };\n};\nvar withDefaultProps = _ref4 => {\n  let {\n    defaultProps,\n    components\n  } = _ref4;\n  return theme => {\n    var _a;\n    let keys = Object.keys((_a = theme.components) != null ? _a : {});\n    if (isArray(components)) keys = components;\n    return merge(theme, {\n      components: Object.fromEntries(keys.map(key => [key, {\n        defaultProps\n      }]))\n    });\n  };\n};\nexport { withDefaultSize, withDefaultVariant, withDefaultColorScheme, withDefaultProps };","map":{"version":3,"names":["isArray","merge","withDefaultSize","_ref","size","components","theme","_a","keys","Object","fromEntries","map","key","defaultProps","withDefaultVariant","_ref2","variant","withDefaultColorScheme","_ref3","colorScheme","withDefaultProps","_ref4"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\theme-tools\\src\\with-default.ts"],"sourcesContent":["import type { Theme, ComponentDefaultProps, UsageTheme } from \"@yamada-ui/core\"\nimport type { Union } from \"@yamada-ui/utils\"\nimport { isArray, merge } from \"@yamada-ui/utils\"\n\nexport const withDefaultSize =\n  ({\n    size,\n    components,\n  }: {\n    size: ComponentDefaultProps[\"size\"]\n    components?: Union<keyof Theme[\"components\"]>[]\n  }) =>\n  (theme: UsageTheme): UsageTheme => {\n    let keys: string[] = Object.keys(theme.components ?? {})\n\n    if (isArray(components)) keys = components\n\n    return merge(theme, {\n      components: Object.fromEntries(\n        keys.map((key) => [key, { defaultProps: { size } }]),\n      ),\n    })\n  }\n\nexport const withDefaultVariant =\n  ({\n    variant,\n    components,\n  }: {\n    variant: ComponentDefaultProps[\"variant\"]\n    components?: Union<keyof Theme[\"components\"]>[]\n  }) =>\n  (theme: UsageTheme): UsageTheme => {\n    let keys: string[] = Object.keys(theme.components ?? {})\n\n    if (isArray(components)) keys = components\n\n    return merge(theme, {\n      components: Object.fromEntries(\n        keys.map((key) => [key, { defaultProps: { variant } }]),\n      ),\n    })\n  }\n\nexport const withDefaultColorScheme =\n  ({\n    colorScheme,\n    components,\n  }: {\n    colorScheme: ComponentDefaultProps[\"colorScheme\"]\n    components?: Union<keyof Theme[\"components\"]>[]\n  }) =>\n  (theme: UsageTheme): UsageTheme => {\n    let keys: string[] = Object.keys(theme.components ?? {})\n\n    if (isArray(components)) keys = components\n\n    return merge(theme, {\n      components: Object.fromEntries(\n        keys.map((key) => [key, { defaultProps: { colorScheme } }]),\n      ),\n    })\n  }\n\nexport const withDefaultProps =\n  ({\n    defaultProps,\n    components,\n  }: {\n    defaultProps: ComponentDefaultProps\n    components?: Union<keyof Theme[\"components\"]>[]\n  }): UsageTheme =>\n  (theme: UsageTheme) => {\n    let keys: string[] = Object.keys(theme.components ?? {})\n\n    if (isArray(components)) keys = components\n\n    return merge(theme, {\n      components: Object.fromEntries(\n        keys.map((key) => [key, { defaultProps }]),\n      ),\n    })\n  }\n"],"mappings":";AAEA,SAASA,OAAA,EAASC,KAAA,QAAa;AAExB,IAAMC,eAAA,GACXC,IAAA;EAAA,IAAC;IACCC,IAAA;IACAC;EACF,IAAAF,IAAA;EAAA,OAICG,KAAA,IAAkC;IAZrC,IAAAC,EAAA;IAaI,IAAIC,IAAA,GAAiBC,MAAA,CAAOD,IAAA,EAAKD,EAAA,GAAAD,KAAA,CAAMD,UAAA,KAAN,OAAAE,EAAA,GAAoB,CAAC,CAAC;IAEvD,IAAIP,OAAA,CAAQK,UAAU,GAAGG,IAAA,GAAOH,UAAA;IAEhC,OAAOJ,KAAA,CAAMK,KAAA,EAAO;MAClBD,UAAA,EAAYI,MAAA,CAAOC,WAAA,CACjBF,IAAA,CAAKG,GAAA,CAAKC,GAAA,IAAQ,CAACA,GAAA,EAAK;QAAEC,YAAA,EAAc;UAAET;QAAK;MAAE,CAAC,CAAC,CACrD;IACF,CAAC;EACH;AAAA;AAEK,IAAMU,kBAAA,GACXC,KAAA;EAAA,IAAC;IACCC,OAAA;IACAX;EACF,IAAAU,KAAA;EAAA,OAICT,KAAA,IAAkC;IAhCrC,IAAAC,EAAA;IAiCI,IAAIC,IAAA,GAAiBC,MAAA,CAAOD,IAAA,EAAKD,EAAA,GAAAD,KAAA,CAAMD,UAAA,KAAN,OAAAE,EAAA,GAAoB,CAAC,CAAC;IAEvD,IAAIP,OAAA,CAAQK,UAAU,GAAGG,IAAA,GAAOH,UAAA;IAEhC,OAAOJ,KAAA,CAAMK,KAAA,EAAO;MAClBD,UAAA,EAAYI,MAAA,CAAOC,WAAA,CACjBF,IAAA,CAAKG,GAAA,CAAKC,GAAA,IAAQ,CAACA,GAAA,EAAK;QAAEC,YAAA,EAAc;UAAEG;QAAQ;MAAE,CAAC,CAAC,CACxD;IACF,CAAC;EACH;AAAA;AAEK,IAAMC,sBAAA,GACXC,KAAA;EAAA,IAAC;IACCC,WAAA;IACAd;EACF,IAAAa,KAAA;EAAA,OAICZ,KAAA,IAAkC;IApDrC,IAAAC,EAAA;IAqDI,IAAIC,IAAA,GAAiBC,MAAA,CAAOD,IAAA,EAAKD,EAAA,GAAAD,KAAA,CAAMD,UAAA,KAAN,OAAAE,EAAA,GAAoB,CAAC,CAAC;IAEvD,IAAIP,OAAA,CAAQK,UAAU,GAAGG,IAAA,GAAOH,UAAA;IAEhC,OAAOJ,KAAA,CAAMK,KAAA,EAAO;MAClBD,UAAA,EAAYI,MAAA,CAAOC,WAAA,CACjBF,IAAA,CAAKG,GAAA,CAAKC,GAAA,IAAQ,CAACA,GAAA,EAAK;QAAEC,YAAA,EAAc;UAAEM;QAAY;MAAE,CAAC,CAAC,CAC5D;IACF,CAAC;EACH;AAAA;AAEK,IAAMC,gBAAA,GACXC,KAAA;EAAA,IAAC;IACCR,YAAA;IACAR;EACF,IAAAgB,KAAA;EAAA,OAICf,KAAA,IAAsB;IAxEzB,IAAAC,EAAA;IAyEI,IAAIC,IAAA,GAAiBC,MAAA,CAAOD,IAAA,EAAKD,EAAA,GAAAD,KAAA,CAAMD,UAAA,KAAN,OAAAE,EAAA,GAAoB,CAAC,CAAC;IAEvD,IAAIP,OAAA,CAAQK,UAAU,GAAGG,IAAA,GAAOH,UAAA;IAEhC,OAAOJ,KAAA,CAAMK,KAAA,EAAO;MAClBD,UAAA,EAAYI,MAAA,CAAOC,WAAA,CACjBF,IAAA,CAAKG,GAAA,CAAKC,GAAA,IAAQ,CAACA,GAAA,EAAK;QAAEC;MAAa,CAAC,CAAC,CAC3C;IACF,CAAC;EACH;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
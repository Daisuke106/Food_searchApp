{"ast":null,"code":"// src/extend-theme.ts\nimport { baseTheme, defaultTheme } from \"@yamada-ui/theme\";\nimport { merge as mergeObject, getMemoizedObject as get, runIfFunc, omitObject, pickObject, isFunction } from \"@yamada-ui/utils\";\nvar createExtendTheme = (initialTheme = defaultTheme) => (...extensions) => ({\n  merge = true,\n  pick = [],\n  omit = []\n} = {}) => {\n  let overrides = [...extensions];\n  let theme = extensions[extensions.length - 1];\n  if (omit.length) initialTheme = omitObject(initialTheme, omit);\n  if (pick.length) initialTheme = pickObject(initialTheme, pick);\n  if (!isFunction(theme) && overrides.length > 1) {\n    overrides = overrides.slice(0, overrides.length - 1);\n    if (merge) theme = mergeObject(initialTheme, theme);\n  } else {\n    theme = merge ? initialTheme : {};\n  }\n  return overrides.reduce((prev, extension) => mergeObject(prev, runIfFunc(extension, prev)), theme);\n};\nvar extendTheme = createExtendTheme(defaultTheme);\nvar extendBaseTheme = createExtendTheme(baseTheme);\nvar extendToken = (token, tokens) => mergeObject(get(defaultTheme, token, {}), tokens != null ? tokens : {});\nvar extendStyle = (name, style) => {\n  var _a;\n  const props = {\n    theme: {\n      __config: {},\n      __cssMap: {},\n      __cssVars: {},\n      __breakpoints: void 0\n    }\n  };\n  return mergeObject(runIfFunc(get(defaultTheme, `styles.${name}`, {}), props), (_a = runIfFunc(style, props)) != null ? _a : {});\n};\nvar extendComponent = (name, componentStyle) => mergeObject(get(defaultTheme, `components.${name}`, {}), componentStyle != null ? componentStyle : {});\nvar extendComponentSize = (name, componentSizes) => mergeObject(get(defaultTheme, `components.${name}.sizes`, {}), componentSizes != null ? componentSizes : {});\nvar extendComponentVariant = (name, componentVariants) => mergeObject(get(defaultTheme, `components.${name}.variants`, {}), componentVariants != null ? componentVariants : {});\nvar extendComponentDefaultProps = (name, componentDefaultProps) => mergeObject(get(defaultTheme, `components.${name}.defaultProps`, {}), componentDefaultProps != null ? componentDefaultProps : {});\nexport { extendTheme, extendBaseTheme, extendToken, extendStyle, extendComponent, extendComponentSize, extendComponentVariant, extendComponentDefaultProps };","map":{"version":3,"names":["baseTheme","defaultTheme","merge","mergeObject","getMemoizedObject","get","runIfFunc","omitObject","pickObject","isFunction","createExtendTheme","initialTheme","extensions","pick","omit","overrides","theme","length","slice","reduce","prev","extension","extendTheme","extendBaseTheme","extendToken","token","tokens","extendStyle","name","style","_a","props","__config","__cssMap","__cssVars","__breakpoints","extendComponent","componentStyle","extendComponentSize","componentSizes","extendComponentVariant","componentVariants","extendComponentDefaultProps","componentDefaultProps"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\theme-tools\\src\\extend-theme.ts"],"sourcesContent":["import type {\n  UsageTheme,\n  ThemeToken,\n  ThemeTokens,\n  ComponentStyle,\n  ComponentSizes,\n  ComponentVariants,\n  ComponentDefaultProps,\n  UIStyle,\n  UIStyleProps,\n  ComponentMultiSizes,\n  ComponentMultiVariants,\n  ComponentMultiStyle,\n} from \"@yamada-ui/core\"\nimport { baseTheme, defaultTheme } from \"@yamada-ui/theme\"\nimport type { Dict } from \"@yamada-ui/utils\"\nimport {\n  merge as mergeObject,\n  getMemoizedObject as get,\n  runIfFunc,\n  omitObject,\n  pickObject,\n  isFunction,\n} from \"@yamada-ui/utils\"\n\ntype Options = {\n  merge?: boolean\n  omit?: (keyof typeof defaultTheme)[]\n  pick?: (keyof typeof defaultTheme)[]\n}\n\nconst createExtendTheme =\n  (initialTheme: Dict = defaultTheme) =>\n  (...extensions: (UsageTheme | ((theme: UsageTheme) => UsageTheme))[]) =>\n  ({ merge = true, pick = [], omit = [] }: Options = {}): Dict => {\n    let overrides = [...extensions]\n    let theme = extensions[extensions.length - 1]\n\n    if (omit.length) initialTheme = omitObject(initialTheme, omit)\n    if (pick.length) initialTheme = pickObject(initialTheme, pick)\n\n    if (!isFunction(theme) && overrides.length > 1) {\n      overrides = overrides.slice(0, overrides.length - 1)\n\n      if (merge) theme = mergeObject(initialTheme, theme)\n    } else {\n      theme = merge ? initialTheme : {}\n    }\n\n    return overrides.reduce(\n      (prev, extension) => mergeObject(prev, runIfFunc(extension, prev)),\n      theme as Dict,\n    )\n  }\n\n/**\n * Create a new theme by inheriting the default theme.\n * It is also possible to pass multiple objects and specify options.\n *\n * @see Docs https://yamada-ui.com/styled-system/theming/customize-theme#using-extendtheme\n */\nexport const extendTheme = createExtendTheme(defaultTheme)\n\n/**\n * This creates a new theme that inherits only the tokens such as global styles and colors of the default theme.\n * It is also possible to pass multiple objects and specify options.\n *\n * @see Docs https://yamada-ui.com/styled-system/theming/customize-theme#using-extendbasetheme\n */\nexport const extendBaseTheme = createExtendTheme(baseTheme)\n\nexport const extendToken = (\n  token: ThemeToken,\n  tokens?: ThemeTokens,\n): ThemeTokens =>\n  mergeObject(get<ThemeTokens>(defaultTheme, token, {}), tokens ?? {})\n\nexport const extendStyle = (\n  name: \"globalStyle\" | \"resetStyle\",\n  style: UIStyle,\n): UIStyle => {\n  const props: UIStyleProps = {\n    theme: {\n      __config: {},\n      __cssMap: {},\n      __cssVars: {},\n      __breakpoints: undefined,\n    },\n  }\n\n  return mergeObject(\n    runIfFunc(get<UIStyle>(defaultTheme, `styles.${name}`, {}), props),\n    runIfFunc(style, props) ?? {},\n  )\n}\n\nexport const extendComponent = (\n  name: keyof (typeof defaultTheme)[\"components\"],\n  componentStyle?: ComponentStyle | ComponentMultiStyle,\n): ComponentStyle | ComponentMultiStyle =>\n  mergeObject(\n    get<ComponentStyle | ComponentMultiStyle>(\n      defaultTheme,\n      `components.${name}`,\n      {},\n    ),\n    componentStyle ?? {},\n  )\n\nexport const extendComponentSize = (\n  name: keyof (typeof defaultTheme)[\"components\"],\n  componentSizes?: ComponentSizes | ComponentMultiSizes,\n): ComponentSizes | ComponentMultiSizes =>\n  mergeObject(\n    get<ComponentSizes>(defaultTheme, `components.${name}.sizes`, {}),\n    componentSizes ?? {},\n  )\n\nexport const extendComponentVariant = (\n  name: keyof (typeof defaultTheme)[\"components\"],\n  componentVariants?: ComponentVariants | ComponentMultiVariants,\n): ComponentVariants | ComponentMultiVariants =>\n  mergeObject(\n    get<ComponentVariants | ComponentMultiVariants>(\n      defaultTheme,\n      `components.${name}.variants`,\n      {},\n    ),\n    componentVariants ?? {},\n  )\n\nexport const extendComponentDefaultProps = (\n  name: keyof (typeof defaultTheme)[\"components\"],\n  componentDefaultProps?: ComponentDefaultProps,\n): ComponentDefaultProps =>\n  mergeObject(\n    get<ComponentDefaultProps>(\n      defaultTheme,\n      `components.${name}.defaultProps`,\n      {},\n    ),\n    componentDefaultProps ?? {},\n  )\n"],"mappings":";AAcA,SAASA,SAAA,EAAWC,YAAA,QAAoB;AAExC,SACEC,KAAA,IAASC,WAAA,EACTC,iBAAA,IAAqBC,GAAA,EACrBC,SAAA,EACAC,UAAA,EACAC,UAAA,EACAC,UAAA,QACK;AAQP,IAAMC,iBAAA,GACJA,CAACC,YAAA,GAAqBV,YAAA,KACtB,IAAIW,UAAA,KACJ,CAAC;EAAEV,KAAA,GAAQ;EAAMW,IAAA,GAAO,EAAC;EAAGC,IAAA,GAAO;AAAG,IAAa,CAAC,MAAY;EAC9D,IAAIC,SAAA,GAAY,CAAC,GAAGH,UAAU;EAC9B,IAAII,KAAA,GAAQJ,UAAA,CAAWA,UAAA,CAAWK,MAAA,GAAS,CAAC;EAE5C,IAAIH,IAAA,CAAKG,MAAA,EAAQN,YAAA,GAAeJ,UAAA,CAAWI,YAAA,EAAcG,IAAI;EAC7D,IAAID,IAAA,CAAKI,MAAA,EAAQN,YAAA,GAAeH,UAAA,CAAWG,YAAA,EAAcE,IAAI;EAE7D,IAAI,CAACJ,UAAA,CAAWO,KAAK,KAAKD,SAAA,CAAUE,MAAA,GAAS,GAAG;IAC9CF,SAAA,GAAYA,SAAA,CAAUG,KAAA,CAAM,GAAGH,SAAA,CAAUE,MAAA,GAAS,CAAC;IAEnD,IAAIf,KAAA,EAAOc,KAAA,GAAQb,WAAA,CAAYQ,YAAA,EAAcK,KAAK;EACpD,OAAO;IACLA,KAAA,GAAQd,KAAA,GAAQS,YAAA,GAAe,CAAC;EAClC;EAEA,OAAOI,SAAA,CAAUI,MAAA,CACf,CAACC,IAAA,EAAMC,SAAA,KAAclB,WAAA,CAAYiB,IAAA,EAAMd,SAAA,CAAUe,SAAA,EAAWD,IAAI,CAAC,GACjEJ,KACF;AACF;AAQK,IAAMM,WAAA,GAAcZ,iBAAA,CAAkBT,YAAY;AAQlD,IAAMsB,eAAA,GAAkBb,iBAAA,CAAkBV,SAAS;AAEnD,IAAMwB,WAAA,GAAcA,CACzBC,KAAA,EACAC,MAAA,KAEAvB,WAAA,CAAYE,GAAA,CAAiBJ,YAAA,EAAcwB,KAAA,EAAO,CAAC,CAAC,GAAGC,MAAA,WAAAA,MAAA,GAAU,CAAC,CAAC;AAE9D,IAAMC,WAAA,GAAcA,CACzBC,IAAA,EACAC,KAAA,KACY;EAhFd,IAAAC,EAAA;EAiFE,MAAMC,KAAA,GAAsB;IAC1Bf,KAAA,EAAO;MACLgB,QAAA,EAAU,CAAC;MACXC,QAAA,EAAU,CAAC;MACXC,SAAA,EAAW,CAAC;MACZC,aAAA,EAAe;IACjB;EACF;EAEA,OAAOhC,WAAA,CACLG,SAAA,CAAUD,GAAA,CAAaJ,YAAA,EAAc,UAAU2B,IAAI,IAAI,CAAC,CAAC,GAAGG,KAAK,IACjED,EAAA,GAAAxB,SAAA,CAAUuB,KAAA,EAAOE,KAAK,MAAtB,OAAAD,EAAA,GAA2B,CAAC,CAC9B;AACF;AAEO,IAAMM,eAAA,GAAkBA,CAC7BR,IAAA,EACAS,cAAA,KAEAlC,WAAA,CACEE,GAAA,CACEJ,YAAA,EACA,cAAc2B,IAAI,IAClB,CAAC,CACH,GACAS,cAAA,WAAAA,cAAA,GAAkB,CAAC,CACrB;AAEK,IAAMC,mBAAA,GAAsBA,CACjCV,IAAA,EACAW,cAAA,KAEApC,WAAA,CACEE,GAAA,CAAoBJ,YAAA,EAAc,cAAc2B,IAAI,UAAU,CAAC,CAAC,GAChEW,cAAA,WAAAA,cAAA,GAAkB,CAAC,CACrB;AAEK,IAAMC,sBAAA,GAAyBA,CACpCZ,IAAA,EACAa,iBAAA,KAEAtC,WAAA,CACEE,GAAA,CACEJ,YAAA,EACA,cAAc2B,IAAI,aAClB,CAAC,CACH,GACAa,iBAAA,WAAAA,iBAAA,GAAqB,CAAC,CACxB;AAEK,IAAMC,2BAAA,GAA8BA,CACzCd,IAAA,EACAe,qBAAA,KAEAxC,WAAA,CACEE,GAAA,CACEJ,YAAA,EACA,cAAc2B,IAAI,iBAClB,CAAC,CACH,GACAe,qBAAA,WAAAA,qBAAA,GAAyB,CAAC,CAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
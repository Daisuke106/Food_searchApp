{"ast":null,"code":"\"use client\";\n\n// src/index.ts\nimport { isMac } from \"@yamada-ui/utils\";\nimport { useEffect, useState } from \"react\";\nvar hasSetup = false;\nvar modality = null;\nvar hasEventBeforeFocus = false;\nvar hasBlurredWindowRecently = false;\nvar handlers = /* @__PURE__ */new Set();\nvar trigger = (modality2, ev) => handlers.forEach(handler => handler(modality2, ev));\nvar onValid = e => {\n  return !(e.metaKey || !isMac && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n};\nvar onKeyboard = ev => {\n  hasEventBeforeFocus = true;\n  if (onValid(ev)) {\n    modality = \"keyboard\";\n    trigger(\"keyboard\", ev);\n  }\n};\nvar onPointer = ev => {\n  modality = \"pointer\";\n  if (ev.type === \"mousedown\" || ev.type === \"pointerdown\" || ev.type === \"pointerup\") {\n    hasEventBeforeFocus = true;\n    const target = ev.composedPath ? ev.composedPath()[0] : ev.target;\n    if (target.matches(\":focus-visible\")) return;\n    trigger(\"pointer\", ev);\n  }\n};\nvar isVirtualClick = ev => {\n  if (ev.mozInputSource === 0 && ev.isTrusted) return true;\n  return ev.detail === 0 && !ev.pointerType;\n};\nvar onClick = ev => {\n  if (!isVirtualClick(ev)) return;\n  hasEventBeforeFocus = true;\n  modality = \"virtual\";\n};\nvar onFocus = ev => {\n  if (ev.target === window || ev.target === document) return;\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    modality = \"virtual\";\n    trigger(\"virtual\", ev);\n  }\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n};\nvar onBlur = () => {\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n};\nvar isFocusVisible = () => modality !== \"pointer\";\nvar setGlobalFocusEvents = () => {\n  if (typeof window === \"undefined\" || hasSetup) return;\n  const {\n    focus\n  } = HTMLElement.prototype;\n  HTMLElement.prototype.focus = function customFocus() {\n    hasEventBeforeFocus = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (this) focus.apply(this, args);\n  };\n  document.addEventListener(\"keydown\", onKeyboard, true);\n  document.addEventListener(\"keyup\", onKeyboard, true);\n  document.addEventListener(\"click\", onClick, true);\n  window.addEventListener(\"focus\", onFocus, true);\n  window.addEventListener(\"blur\", onBlur, false);\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", onPointer, true);\n    document.addEventListener(\"pointermove\", onPointer, true);\n    document.addEventListener(\"pointerup\", onPointer, true);\n  } else {\n    document.addEventListener(\"mousedown\", onPointer, true);\n    document.addEventListener(\"mousemove\", onPointer, true);\n    document.addEventListener(\"mouseup\", onPointer, true);\n  }\n  hasSetup = true;\n};\nvar trackFocusVisible = function (func) {\n  let {\n    force\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (force) hasSetup = false;\n  setGlobalFocusEvents();\n  func(isFocusVisible());\n  const handler = () => func(isFocusVisible());\n  handlers.add(handler);\n  return () => {\n    handlers.delete(handler);\n  };\n};\nvar useFocusVisible = options => {\n  const [focusVisible, setFocusVisible] = useState(false);\n  const [focus, setFocus] = useState(false);\n  useEffect(() => {\n    return trackFocusVisible(setFocusVisible, options);\n  }, [options]);\n  return {\n    focusVisible: focusVisible && focus,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false)\n  };\n};\nexport { trackFocusVisible, useFocusVisible };","map":{"version":3,"names":["isMac","useEffect","useState","hasSetup","modality","hasEventBeforeFocus","hasBlurredWindowRecently","handlers","Set","trigger","modality2","ev","forEach","handler","onValid","e","metaKey","altKey","ctrlKey","key","onKeyboard","onPointer","type","target","composedPath","matches","isVirtualClick","mozInputSource","isTrusted","detail","pointerType","onClick","onFocus","window","document","onBlur","isFocusVisible","setGlobalFocusEvents","focus","HTMLElement","prototype","customFocus","_len","arguments","length","args","Array","_key","apply","addEventListener","PointerEvent","trackFocusVisible","func","force","undefined","add","delete","useFocusVisible","options","focusVisible","setFocusVisible","setFocus"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\use-focus-visible\\src\\index.ts"],"sourcesContent":["import { isMac } from \"@yamada-ui/utils\"\nimport { useEffect, useState } from \"react\"\n\ntype Modality = \"keyboard\" | \"pointer\" | \"virtual\"\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent\ntype Handler = (modality: Modality, e: HandlerEvent | null) => void\ntype FocusVisibleCallback = (isFocusVisible: boolean) => void\n\nlet hasSetup = false\nlet modality: Modality | null = null\nlet hasEventBeforeFocus = false\nlet hasBlurredWindowRecently = false\n\nconst handlers = new Set<Handler>()\n\nconst trigger = (modality: Modality, ev: HandlerEvent | null) =>\n  handlers.forEach((handler) => handler(modality, ev))\n\nconst onValid = (e: KeyboardEvent) => {\n  return !(\n    e.metaKey ||\n    (!isMac && e.altKey) ||\n    e.ctrlKey ||\n    e.key === \"Control\" ||\n    e.key === \"Shift\" ||\n    e.key === \"Meta\"\n  )\n}\n\nconst onKeyboard = (ev: KeyboardEvent) => {\n  hasEventBeforeFocus = true\n\n  if (onValid(ev)) {\n    modality = \"keyboard\"\n\n    trigger(\"keyboard\", ev)\n  }\n}\n\nconst onPointer = (ev: PointerEvent | MouseEvent) => {\n  modality = \"pointer\"\n\n  if (\n    ev.type === \"mousedown\" ||\n    ev.type === \"pointerdown\" ||\n    ev.type === \"pointerup\"\n  ) {\n    hasEventBeforeFocus = true\n\n    const target = ev.composedPath ? ev.composedPath()[0] : ev.target\n\n    if ((target as HTMLElement).matches(\":focus-visible\")) return\n\n    trigger(\"pointer\", ev)\n  }\n}\n\nconst isVirtualClick = (ev: MouseEvent | PointerEvent): boolean => {\n  if ((ev as any).mozInputSource === 0 && ev.isTrusted) return true\n\n  return ev.detail === 0 && !(ev as PointerEvent).pointerType\n}\n\nconst onClick = (ev: MouseEvent) => {\n  if (!isVirtualClick(ev)) return\n\n  hasEventBeforeFocus = true\n\n  modality = \"virtual\"\n}\n\nconst onFocus = (ev: FocusEvent) => {\n  if (ev.target === window || ev.target === document) return\n\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    modality = \"virtual\"\n\n    trigger(\"virtual\", ev)\n  }\n\n  hasEventBeforeFocus = false\n  hasBlurredWindowRecently = false\n}\n\nconst onBlur = () => {\n  hasEventBeforeFocus = false\n  hasBlurredWindowRecently = true\n}\n\nconst isFocusVisible = () => modality !== \"pointer\"\n\nconst setGlobalFocusEvents = () => {\n  if (typeof window === \"undefined\" || hasSetup) return\n\n  const { focus } = HTMLElement.prototype\n\n  HTMLElement.prototype.focus = function customFocus(...args) {\n    hasEventBeforeFocus = true\n\n    if (this) focus.apply(this, args)\n  }\n\n  document.addEventListener(\"keydown\", onKeyboard, true)\n  document.addEventListener(\"keyup\", onKeyboard, true)\n  document.addEventListener(\"click\", onClick, true)\n\n  window.addEventListener(\"focus\", onFocus, true)\n  window.addEventListener(\"blur\", onBlur, false)\n\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", onPointer, true)\n    document.addEventListener(\"pointermove\", onPointer, true)\n    document.addEventListener(\"pointerup\", onPointer, true)\n  } else {\n    document.addEventListener(\"mousedown\", onPointer, true)\n    document.addEventListener(\"mousemove\", onPointer, true)\n    document.addEventListener(\"mouseup\", onPointer, true)\n  }\n\n  hasSetup = true\n}\n\ntype TrackFocusVisibleOptions = {\n  force?: boolean\n}\n\nexport const trackFocusVisible = (\n  func: FocusVisibleCallback,\n  { force }: TrackFocusVisibleOptions = {},\n) => {\n  if (force) hasSetup = false\n\n  setGlobalFocusEvents()\n\n  func(isFocusVisible())\n\n  const handler = () => func(isFocusVisible())\n\n  handlers.add(handler)\n\n  return () => {\n    handlers.delete(handler)\n  }\n}\n\nexport const useFocusVisible = (options?: TrackFocusVisibleOptions) => {\n  const [focusVisible, setFocusVisible] = useState(false)\n  const [focus, setFocus] = useState(false)\n\n  useEffect(() => {\n    return trackFocusVisible(setFocusVisible, options)\n  }, [options])\n\n  return {\n    focusVisible: focusVisible && focus,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n  }\n}\n"],"mappings":";;;AAAA,SAASA,KAAA,QAAa;AACtB,SAASC,SAAA,EAAWC,QAAA,QAAgB;AAOpC,IAAIC,QAAA,GAAW;AACf,IAAIC,QAAA,GAA4B;AAChC,IAAIC,mBAAA,GAAsB;AAC1B,IAAIC,wBAAA,GAA2B;AAE/B,IAAMC,QAAA,GAAW,mBAAIC,GAAA,CAAa;AAElC,IAAMC,OAAA,GAAUA,CAACC,SAAA,EAAoBC,EAAA,KACnCJ,QAAA,CAASK,OAAA,CAASC,OAAA,IAAYA,OAAA,CAAQH,SAAA,EAAUC,EAAE,CAAC;AAErD,IAAMG,OAAA,GAAWC,CAAA,IAAqB;EACpC,OAAO,EACLA,CAAA,CAAEC,OAAA,IACD,CAAChB,KAAA,IAASe,CAAA,CAAEE,MAAA,IACbF,CAAA,CAAEG,OAAA,IACFH,CAAA,CAAEI,GAAA,KAAQ,aACVJ,CAAA,CAAEI,GAAA,KAAQ,WACVJ,CAAA,CAAEI,GAAA,KAAQ;AAEd;AAEA,IAAMC,UAAA,GAAcT,EAAA,IAAsB;EACxCN,mBAAA,GAAsB;EAEtB,IAAIS,OAAA,CAAQH,EAAE,GAAG;IACfP,QAAA,GAAW;IAEXK,OAAA,CAAQ,YAAYE,EAAE;EACxB;AACF;AAEA,IAAMU,SAAA,GAAaV,EAAA,IAAkC;EACnDP,QAAA,GAAW;EAEX,IACEO,EAAA,CAAGW,IAAA,KAAS,eACZX,EAAA,CAAGW,IAAA,KAAS,iBACZX,EAAA,CAAGW,IAAA,KAAS,aACZ;IACAjB,mBAAA,GAAsB;IAEtB,MAAMkB,MAAA,GAASZ,EAAA,CAAGa,YAAA,GAAeb,EAAA,CAAGa,YAAA,CAAa,EAAE,CAAC,IAAIb,EAAA,CAAGY,MAAA;IAE3D,IAAKA,MAAA,CAAuBE,OAAA,CAAQ,gBAAgB,GAAG;IAEvDhB,OAAA,CAAQ,WAAWE,EAAE;EACvB;AACF;AAEA,IAAMe,cAAA,GAAkBf,EAAA,IAA2C;EACjE,IAAKA,EAAA,CAAWgB,cAAA,KAAmB,KAAKhB,EAAA,CAAGiB,SAAA,EAAW,OAAO;EAE7D,OAAOjB,EAAA,CAAGkB,MAAA,KAAW,KAAK,CAAElB,EAAA,CAAoBmB,WAAA;AAClD;AAEA,IAAMC,OAAA,GAAWpB,EAAA,IAAmB;EAClC,IAAI,CAACe,cAAA,CAAef,EAAE,GAAG;EAEzBN,mBAAA,GAAsB;EAEtBD,QAAA,GAAW;AACb;AAEA,IAAM4B,OAAA,GAAWrB,EAAA,IAAmB;EAClC,IAAIA,EAAA,CAAGY,MAAA,KAAWU,MAAA,IAAUtB,EAAA,CAAGY,MAAA,KAAWW,QAAA,EAAU;EAEpD,IAAI,CAAC7B,mBAAA,IAAuB,CAACC,wBAAA,EAA0B;IACrDF,QAAA,GAAW;IAEXK,OAAA,CAAQ,WAAWE,EAAE;EACvB;EAEAN,mBAAA,GAAsB;EACtBC,wBAAA,GAA2B;AAC7B;AAEA,IAAM6B,MAAA,GAASA,CAAA,KAAM;EACnB9B,mBAAA,GAAsB;EACtBC,wBAAA,GAA2B;AAC7B;AAEA,IAAM8B,cAAA,GAAiBA,CAAA,KAAMhC,QAAA,KAAa;AAE1C,IAAMiC,oBAAA,GAAuBA,CAAA,KAAM;EACjC,IAAI,OAAOJ,MAAA,KAAW,eAAe9B,QAAA,EAAU;EAE/C,MAAM;IAAEmC;EAAM,IAAIC,WAAA,CAAYC,SAAA;EAE9BD,WAAA,CAAYC,SAAA,CAAUF,KAAA,GAAQ,SAASG,YAAA,EAAqB;IAC1DpC,mBAAA,GAAsB;IAAA,SAAAqC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAD8BC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAGpD,IAAI,MAAMT,KAAA,CAAMU,KAAA,CAAM,MAAMH,IAAI;EAClC;EAEAX,QAAA,CAASe,gBAAA,CAAiB,WAAW7B,UAAA,EAAY,IAAI;EACrDc,QAAA,CAASe,gBAAA,CAAiB,SAAS7B,UAAA,EAAY,IAAI;EACnDc,QAAA,CAASe,gBAAA,CAAiB,SAASlB,OAAA,EAAS,IAAI;EAEhDE,MAAA,CAAOgB,gBAAA,CAAiB,SAASjB,OAAA,EAAS,IAAI;EAC9CC,MAAA,CAAOgB,gBAAA,CAAiB,QAAQd,MAAA,EAAQ,KAAK;EAE7C,IAAI,OAAOe,YAAA,KAAiB,aAAa;IACvChB,QAAA,CAASe,gBAAA,CAAiB,eAAe5B,SAAA,EAAW,IAAI;IACxDa,QAAA,CAASe,gBAAA,CAAiB,eAAe5B,SAAA,EAAW,IAAI;IACxDa,QAAA,CAASe,gBAAA,CAAiB,aAAa5B,SAAA,EAAW,IAAI;EACxD,OAAO;IACLa,QAAA,CAASe,gBAAA,CAAiB,aAAa5B,SAAA,EAAW,IAAI;IACtDa,QAAA,CAASe,gBAAA,CAAiB,aAAa5B,SAAA,EAAW,IAAI;IACtDa,QAAA,CAASe,gBAAA,CAAiB,WAAW5B,SAAA,EAAW,IAAI;EACtD;EAEAlB,QAAA,GAAW;AACb;AAMO,IAAMgD,iBAAA,GAAoB,SAAAA,CAC/BC,IAAA,EAEG;EAAA,IADH;IAAEC;EAAM,IAAAV,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAW,SAAA,GAAAX,SAAA,MAA8B,CAAC;EAEvC,IAAIU,KAAA,EAAOlD,QAAA,GAAW;EAEtBkC,oBAAA,CAAqB;EAErBe,IAAA,CAAKhB,cAAA,CAAe,CAAC;EAErB,MAAMvB,OAAA,GAAUA,CAAA,KAAMuC,IAAA,CAAKhB,cAAA,CAAe,CAAC;EAE3C7B,QAAA,CAASgD,GAAA,CAAI1C,OAAO;EAEpB,OAAO,MAAM;IACXN,QAAA,CAASiD,MAAA,CAAO3C,OAAO;EACzB;AACF;AAEO,IAAM4C,eAAA,GAAmBC,OAAA,IAAuC;EACrE,MAAM,CAACC,YAAA,EAAcC,eAAe,IAAI1D,QAAA,CAAS,KAAK;EACtD,MAAM,CAACoC,KAAA,EAAOuB,QAAQ,IAAI3D,QAAA,CAAS,KAAK;EAExCD,SAAA,CAAU,MAAM;IACd,OAAOkD,iBAAA,CAAkBS,eAAA,EAAiBF,OAAO;EACnD,GAAG,CAACA,OAAO,CAAC;EAEZ,OAAO;IACLC,YAAA,EAAcA,YAAA,IAAgBrB,KAAA;IAC9BN,OAAA,EAASA,CAAA,KAAM6B,QAAA,CAAS,IAAI;IAC5B1B,MAAA,EAAQA,CAAA,KAAM0B,QAAA,CAAS,KAAK;EAC9B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
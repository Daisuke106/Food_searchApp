{"ast":null,"code":"\"use client\";\n\n// src/scale-fade.tsx\nimport { forwardRef } from \"@yamada-ui/core\";\nimport { AnimatePresence, transitionEnter, transitionExit, Motion } from \"@yamada-ui/motion\";\nimport { cx } from \"@yamada-ui/utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar variants = {\n  enter: function () {\n    let {\n      transition,\n      transitionEnd,\n      delay,\n      duration,\n      enter\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      opacity: 1,\n      scale: 1,\n      transition: transitionEnter(transition == null ? void 0 : transition.enter)(delay, duration),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter,\n      ...enter\n    };\n  },\n  exit: function () {\n    let {\n      scale,\n      reverse,\n      transition,\n      transitionEnd,\n      delay,\n      duration,\n      exit\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      opacity: 0,\n      transition: transitionExit(transition == null ? void 0 : transition.exit)(delay, duration),\n      ...(reverse ? {\n        scale,\n        transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n      } : {\n        transitionEnd: {\n          scale,\n          ...(transitionEnd == null ? void 0 : transitionEnd.exit)\n        }\n      }),\n      ...exit\n    };\n  }\n};\nvar scaleFadeProps = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants\n};\nvar ScaleFade = forwardRef((_ref, ref) => {\n  let {\n    unmountOnExit,\n    isOpen,\n    scale = 0.95,\n    reverse = true,\n    transition,\n    transitionEnd,\n    delay,\n    duration,\n    className,\n    ...rest\n  } = _ref;\n  const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  const custom = {\n    scale,\n    reverse,\n    transition,\n    transitionEnd,\n    delay,\n    duration\n  };\n  isOpen = unmountOnExit ? isOpen && unmountOnExit : true;\n  const css = {\n    w: \"100%\"\n  };\n  return /* @__PURE__ */jsx(AnimatePresence, {\n    custom,\n    children: isOpen ? /* @__PURE__ */jsx(Motion, {\n      ref,\n      className: cx(\"ui-scale-fade\", className),\n      custom,\n      ...scaleFadeProps,\n      animate,\n      __css: css,\n      ...rest\n    }) : null\n  });\n});\nexport { scaleFadeProps, ScaleFade };","map":{"version":3,"names":["forwardRef","AnimatePresence","transitionEnter","transitionExit","Motion","cx","jsx","variants","enter","transition","transitionEnd","delay","duration","arguments","length","undefined","opacity","scale","exit","reverse","scaleFadeProps","initial","animate","ScaleFade","_ref","ref","unmountOnExit","isOpen","className","rest","custom","css","w","children","__css"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\transitions\\src\\scale-fade.tsx"],"sourcesContent":["import type { CSSUIObject } from \"@yamada-ui/core\"\nimport { forwardRef } from \"@yamada-ui/core\"\nimport type {\n  WithTransitionProps,\n  MotionTransitionVariants,\n  MotionProps,\n} from \"@yamada-ui/motion\"\nimport {\n  AnimatePresence,\n  transitionEnter,\n  transitionExit,\n  Motion,\n} from \"@yamada-ui/motion\"\nimport { cx } from \"@yamada-ui/utils\"\n\ntype ScaleFadeOptions = {\n  /**\n   * The initial scale of the element.\n   *\n   * @default 0.95\n   */\n  scale?: number\n  /**\n   * If `true`, the element will transition back to exit state.\n   *\n   * @default true\n   */\n  reverse?: boolean\n}\n\nexport type ScaleFadeProps = WithTransitionProps<\n  Omit<MotionProps<\"div\">, \"scale\">\n> &\n  ScaleFadeOptions\n\nconst variants: MotionTransitionVariants = {\n  enter: ({ transition, transitionEnd, delay, duration, enter } = {}) => ({\n    opacity: 1,\n    scale: 1,\n    transition: transitionEnter(transition?.enter)(delay, duration),\n    transitionEnd: transitionEnd?.enter,\n    ...enter,\n  }),\n  exit: ({\n    scale,\n    reverse,\n    transition,\n    transitionEnd,\n    delay,\n    duration,\n    exit,\n  } = {}) => ({\n    opacity: 0,\n    transition: transitionExit(transition?.exit)(delay, duration),\n    ...(reverse\n      ? { scale, transitionEnd: transitionEnd?.exit }\n      : { transitionEnd: { scale, ...transitionEnd?.exit } }),\n    ...exit,\n  }),\n}\n\nexport const scaleFadeProps = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants,\n}\n\n/**\n * `ScaleFade` is a component that gradually scales up to reveal or scales down to hide an element.\n *\n * @see Docs https://yamada-ui.com/components/transitions/scale-fade\n */\nexport const ScaleFade = forwardRef<ScaleFadeProps, \"div\", false>(\n  (\n    {\n      unmountOnExit,\n      isOpen,\n      scale = 0.95,\n      reverse = true,\n      transition,\n      transitionEnd,\n      delay,\n      duration,\n      className,\n      ...rest\n    },\n    ref,\n  ) => {\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = {\n      scale,\n      reverse,\n      transition,\n      transitionEnd,\n      delay,\n      duration,\n    }\n\n    isOpen = unmountOnExit ? isOpen && unmountOnExit : true\n\n    const css: CSSUIObject = {\n      w: \"100%\",\n    }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {isOpen ? (\n          <Motion\n            ref={ref}\n            className={cx(\"ui-scale-fade\", className)}\n            custom={custom}\n            {...scaleFadeProps}\n            animate={animate}\n            __css={css}\n            {...rest}\n          />\n        ) : null}\n      </AnimatePresence>\n    )\n  },\n)\n"],"mappings":";;;AACA,SAASA,UAAA,QAAkB;AAM3B,SACEC,eAAA,EACAC,eAAA,EACAC,cAAA,EACAC,MAAA,QACK;AACP,SAASC,EAAA,QAAU;AAgGT,SAAAC,GAAA;AA1EV,IAAMC,QAAA,GAAqC;EACzCC,KAAA,EAAO,SAAAA,CAAA;IAAA,IAAC;MAAEC,UAAA;MAAYC,aAAA;MAAeC,KAAA;MAAOC,QAAA;MAAUJ;IAAM,IAAAK,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAI,CAAC;IAAA,OAAO;MACtEG,OAAA,EAAS;MACTC,KAAA,EAAO;MACPR,UAAA,EAAYP,eAAA,CAAgBO,UAAA,oBAAAA,UAAA,CAAYD,KAAK,EAAEG,KAAA,EAAOC,QAAQ;MAC9DF,aAAA,EAAeA,aAAA,oBAAAA,aAAA,CAAeF,KAAA;MAC9B,GAAGA;IACL;EAAA;EACAU,IAAA,EAAM,SAAAA,CAAA;IAAA,IAAC;MACLD,KAAA;MACAE,OAAA;MACAV,UAAA;MACAC,aAAA;MACAC,KAAA;MACAC,QAAA;MACAM;IACF,IAAAL,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAI,CAAC;IAAA,OAAO;MACVG,OAAA,EAAS;MACTP,UAAA,EAAYN,cAAA,CAAeM,UAAA,oBAAAA,UAAA,CAAYS,IAAI,EAAEP,KAAA,EAAOC,QAAQ;MAC5D,IAAIO,OAAA,GACA;QAAEF,KAAA;QAAOP,aAAA,EAAeA,aAAA,oBAAAA,aAAA,CAAeQ;MAAK,IAC5C;QAAER,aAAA,EAAe;UAAEO,KAAA;UAAO,IAAGP,aAAA,oBAAAA,aAAA,CAAeQ,IAAA;QAAK;MAAE;MACvD,GAAGA;IACL;EAAA;AACF;AAEO,IAAME,cAAA,GAAiB;EAC5BC,OAAA,EAAS;EACTC,OAAA,EAAS;EACTJ,IAAA,EAAM;EACNX;AACF;AAOO,IAAMgB,SAAA,GAAYvB,UAAA,CACvB,CAAAwB,IAAA,EAaEC,GAAA,KACG;EAAA,IAbH;IACEC,aAAA;IACAC,MAAA;IACAV,KAAA,GAAQ;IACRE,OAAA,GAAU;IACVV,UAAA;IACAC,aAAA;IACAC,KAAA;IACAC,QAAA;IACAgB,SAAA;IACA,GAAGC;EACL,IAAAL,IAAA;EAGA,MAAMF,OAAA,GAAUK,MAAA,IAAUD,aAAA,GAAgB,UAAU;EAEpD,MAAMI,MAAA,GAAS;IACbb,KAAA;IACAE,OAAA;IACAV,UAAA;IACAC,aAAA;IACAC,KAAA;IACAC;EACF;EAEAe,MAAA,GAASD,aAAA,GAAgBC,MAAA,IAAUD,aAAA,GAAgB;EAEnD,MAAMK,GAAA,GAAmB;IACvBC,CAAA,EAAG;EACL;EAEA,OACE,eAAA1B,GAAA,CAACL,eAAA;IAAgB6B,MAAA;IACdG,QAAA,EAAAN,MAAA,GACC,eAAArB,GAAA,CAACF,MAAA;MACCqB,GAAA;MACAG,SAAA,EAAWvB,EAAA,CAAG,iBAAiBuB,SAAS;MACxCE,MAAA;MACC,GAAGV,cAAA;MACJE,OAAA;MACAY,KAAA,EAAOH,GAAA;MACN,GAAGF;IAAA,CACN,IACE;EAAA,CACN;AAEJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
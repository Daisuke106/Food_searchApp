{"ast":null,"code":"\"use client\";\n\n// src/use-steps.ts\nimport { useCallback, useState } from \"react\";\nvar useSteps = _ref => {\n  let {\n    index = 0,\n    count\n  } = _ref;\n  const [activeStep, setActiveStep] = useState(index);\n  const maxStep = typeof count === \"number\" ? count - 1 : 0;\n  const activeStepPercent = activeStep / maxStep;\n  const isActiveStep = useCallback(step => step === activeStep, [activeStep]);\n  const isCompleteStep = useCallback(step => step < activeStep, [activeStep]);\n  const isIncompleteStep = useCallback(step => step > activeStep, [activeStep]);\n  const getStepStatus = useCallback(step => {\n    if (step < activeStep) return \"complete\";\n    if (step > activeStep) return \"incomplete\";\n    return \"active\";\n  }, [activeStep]);\n  const onStepNext = useCallback(() => setActiveStep(step => typeof count === \"number\" ? Math.min(count, step + 1) : step + 1), [count]);\n  const onStepPrev = useCallback(() => setActiveStep(step => Math.max(0, step - 1)), []);\n  return {\n    activeStep,\n    setActiveStep,\n    activeStepPercent,\n    isActiveStep,\n    isCompleteStep,\n    isIncompleteStep,\n    getStepStatus,\n    onStepNext,\n    onStepPrev\n  };\n};\nexport { useSteps };","map":{"version":3,"names":["useCallback","useState","useSteps","_ref","index","count","activeStep","setActiveStep","maxStep","activeStepPercent","isActiveStep","step","isCompleteStep","isIncompleteStep","getStepStatus","onStepNext","Math","min","onStepPrev","max"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\stepper\\src\\use-steps.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\n\nexport type UseStepsProps = {\n  index?: number\n  count?: number\n}\n\nexport const useSteps = ({ index = 0, count }: UseStepsProps) => {\n  const [activeStep, setActiveStep] = useState(index)\n\n  const maxStep = typeof count === \"number\" ? count - 1 : 0\n  const activeStepPercent = activeStep / maxStep\n\n  const isActiveStep = useCallback(\n    (step: number) => step === activeStep,\n    [activeStep],\n  )\n\n  const isCompleteStep = useCallback(\n    (step: number) => step < activeStep,\n    [activeStep],\n  )\n\n  const isIncompleteStep = useCallback(\n    (step: number) => step > activeStep,\n    [activeStep],\n  )\n\n  const getStepStatus = useCallback(\n    (step: number): \"complete\" | \"active\" | \"incomplete\" => {\n      if (step < activeStep) return \"complete\"\n      if (step > activeStep) return \"incomplete\"\n\n      return \"active\"\n    },\n    [activeStep],\n  )\n\n  const onStepNext = useCallback(\n    () =>\n      setActiveStep((step) =>\n        typeof count === \"number\" ? Math.min(count, step + 1) : step + 1,\n      ),\n    [count],\n  )\n\n  const onStepPrev = useCallback(\n    () => setActiveStep((step) => Math.max(0, step - 1)),\n    [],\n  )\n\n  return {\n    activeStep,\n    setActiveStep,\n    activeStepPercent,\n    isActiveStep,\n    isCompleteStep,\n    isIncompleteStep,\n    getStepStatus,\n    onStepNext,\n    onStepPrev,\n  }\n}\n\nexport type UseStepsReturn = ReturnType<typeof useSteps>\n"],"mappings":";;;AAAA,SAASA,WAAA,EAAaC,QAAA,QAAgB;AAO/B,IAAMC,QAAA,GAAWC,IAAA,IAAyC;EAAA,IAAxC;IAAEC,KAAA,GAAQ;IAAGC;EAAM,IAAAF,IAAA;EAC1C,MAAM,CAACG,UAAA,EAAYC,aAAa,IAAIN,QAAA,CAASG,KAAK;EAElD,MAAMI,OAAA,GAAU,OAAOH,KAAA,KAAU,WAAWA,KAAA,GAAQ,IAAI;EACxD,MAAMI,iBAAA,GAAoBH,UAAA,GAAaE,OAAA;EAEvC,MAAME,YAAA,GAAeV,WAAA,CAClBW,IAAA,IAAiBA,IAAA,KAASL,UAAA,EAC3B,CAACA,UAAU,CACb;EAEA,MAAMM,cAAA,GAAiBZ,WAAA,CACpBW,IAAA,IAAiBA,IAAA,GAAOL,UAAA,EACzB,CAACA,UAAU,CACb;EAEA,MAAMO,gBAAA,GAAmBb,WAAA,CACtBW,IAAA,IAAiBA,IAAA,GAAOL,UAAA,EACzB,CAACA,UAAU,CACb;EAEA,MAAMQ,aAAA,GAAgBd,WAAA,CACnBW,IAAA,IAAuD;IACtD,IAAIA,IAAA,GAAOL,UAAA,EAAY,OAAO;IAC9B,IAAIK,IAAA,GAAOL,UAAA,EAAY,OAAO;IAE9B,OAAO;EACT,GACA,CAACA,UAAU,CACb;EAEA,MAAMS,UAAA,GAAaf,WAAA,CACjB,MACEO,aAAA,CAAeI,IAAA,IACb,OAAON,KAAA,KAAU,WAAWW,IAAA,CAAKC,GAAA,CAAIZ,KAAA,EAAOM,IAAA,GAAO,CAAC,IAAIA,IAAA,GAAO,CACjE,GACF,CAACN,KAAK,CACR;EAEA,MAAMa,UAAA,GAAalB,WAAA,CACjB,MAAMO,aAAA,CAAeI,IAAA,IAASK,IAAA,CAAKG,GAAA,CAAI,GAAGR,IAAA,GAAO,CAAC,CAAC,GACnD,EACF;EAEA,OAAO;IACLL,UAAA;IACAC,aAAA;IACAE,iBAAA;IACAC,YAAA;IACAE,cAAA;IACAC,gBAAA;IACAC,aAAA;IACAC,UAAA;IACAG;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
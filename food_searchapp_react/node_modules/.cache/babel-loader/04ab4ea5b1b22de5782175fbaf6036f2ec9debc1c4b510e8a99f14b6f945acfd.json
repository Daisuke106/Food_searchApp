{"ast":null,"code":"\"use client\";\n\n// src/use-color-picker.ts\nimport { layoutStyleProperties } from \"@yamada-ui/core\";\nimport { formControlProperties, useFormControlProps } from \"@yamada-ui/form-control\";\nimport { popoverProperties } from \"@yamada-ui/popover\";\nimport { useControllableState } from \"@yamada-ui/use-controllable-state\";\nimport { useDisclosure } from \"@yamada-ui/use-disclosure\";\nimport { useEyeDropper } from \"@yamada-ui/use-eye-dropper\";\nimport { useOutsideClick } from \"@yamada-ui/use-outside-click\";\nimport { createContext, dataAttr, handlerAll, mergeRefs, pickObject, splitObject, omitObject, getEventRelatedTarget, isContains, convertColor, calcFormat, useUpdateEffect } from \"@yamada-ui/utils\";\nimport { useCallback, useRef, useState } from \"react\";\nvar [ColorPickerProvider, useColorPickerContext] = createContext({\n  name: \"ColorPickerContext\",\n  errorMessage: `useColorPickerContext returned is 'undefined'. Seems you forgot to wrap the components in \"<ColorPicker />\"`\n});\nvar useColorPicker = ({\n  value: valueProp,\n  defaultValue,\n  fallbackValue,\n  defaultColor,\n  onChange: onChangeProp,\n  onChangeStart,\n  onChangeEnd,\n  onSwatchClick,\n  formatInput = value => value,\n  closeOnBlur = true,\n  closeOnEsc = true,\n  placement = \"bottom-start\",\n  duration = 0.2,\n  isOpen: isOpenProp,\n  defaultIsOpen,\n  onOpen: onOpenProp,\n  onClose: onCloseProp,\n  allowInput = true,\n  closeOnSelectSwatch,\n  format,\n  swatchesLabel,\n  swatches,\n  swatchesColumns,\n  withPicker,\n  withChannel,\n  withResult = false,\n  withColorSelectorEyeDropper = false,\n  colorSelectorVariant,\n  colorSelectorSize,\n  colorSelectorColorScheme,\n  ...rest\n}) => {\n  var _a;\n  rest = useFormControlProps(rest);\n  const {\n    \"aria-readonly\": _ariaReadonly,\n    ...formControlProps\n  } = pickObject(rest, formControlProperties);\n  const {\n    disabled,\n    readOnly\n  } = formControlProps;\n  const [containerProps, inputProps] = splitObject(omitObject(rest, [...popoverProperties]), layoutStyleProperties);\n  const containerRef = useRef(null);\n  const fieldRef = useRef(null);\n  const {\n    supported: eyeDropperSupported,\n    onOpen: onEyeDropperOpen\n  } = useEyeDropper();\n  const [value, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp\n  });\n  const formatRef = useRef(format != null ? format : calcFormat((_a = value != null ? value : defaultColor) != null ? _a : \"\"));\n  const isInputFocused = useRef(false);\n  const [inputValue, setInputValue] = useState(value != null ? value : \"\");\n  const {\n    isOpen,\n    onOpen: onInternalOpen,\n    onClose: onInternalClose\n  } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp\n  });\n  const isColorSelectorFull = colorSelectorSize === \"full\";\n  const onOpen = useCallback(() => {\n    if (disabled || readOnly) return;\n    onInternalOpen();\n  }, [onInternalOpen, disabled, readOnly]);\n  const onClose = useCallback(() => {\n    if (!isOpen) return;\n    const next = convertColor(value, fallbackValue)(formatRef.current);\n    setValue(prev => !next || prev === next ? prev : next);\n    setInputValue(formatInput(next != null ? next : \"\"));\n    onInternalClose();\n  }, [formatRef, isOpen, setValue, onInternalClose, value, formatInput, setInputValue, fallbackValue]);\n  const onContainerClick = useCallback(() => {\n    if (isOpen) return;\n    onOpen();\n  }, [isOpen, onOpen]);\n  const onInputFocus = useCallback(() => {\n    isInputFocused.current = true;\n    if (isOpen) return;\n    onOpen();\n  }, [isOpen, onOpen]);\n  const onInputBlur = useCallback(() => {\n    isInputFocused.current = false;\n  }, []);\n  const onContainerBlur = useCallback(ev => {\n    const relatedTarget = getEventRelatedTarget(ev);\n    if (isContains(containerRef.current, relatedTarget)) return;\n    if (!closeOnBlur) return;\n    if (isOpen) onClose();\n  }, [closeOnBlur, isOpen, onClose]);\n  const onInputKeyDown = useCallback(ev => {\n    if (ev.key === \" \") ev.key = ev.code;\n    if (disabled || readOnly) return;\n    const actions = {\n      Space: !isOpen ? onOpen : void 0,\n      Enter: !isOpen ? onOpen : void 0,\n      Escape: closeOnEsc ? onClose : void 0\n    };\n    const action = actions[ev.key];\n    if (!action) return;\n    ev.preventDefault();\n    ev.stopPropagation();\n    action();\n  }, [disabled, readOnly, isOpen, onOpen, closeOnEsc, onClose]);\n  const onInputChange = useCallback(ev => {\n    const value2 = ev.target.value;\n    setInputValue(formatInput(value2));\n    setValue(value2);\n  }, [setInputValue, formatInput, setValue]);\n  const onColorSelectorChange = useCallback(value2 => {\n    setValue(value2);\n    setTimeout(() => {\n      if (!isInputFocused.current) setInputValue(formatInput(value2));\n    });\n  }, [setValue, formatInput]);\n  const onEyeDropperClick = useCallback(async ev => {\n    var _a2;\n    ev.preventDefault();\n    ev.stopPropagation();\n    try {\n      const {\n        sRGBHex\n      } = (_a2 = await onEyeDropperOpen()) != null ? _a2 : {};\n      if (!sRGBHex) return;\n      onColorSelectorChange(sRGBHex);\n      onChangeEnd == null ? void 0 : onChangeEnd(sRGBHex);\n    } catch {}\n  }, [onEyeDropperOpen, onColorSelectorChange, onChangeEnd]);\n  useOutsideClick({\n    ref: containerRef,\n    handler: onClose,\n    enabled: isOpen && closeOnBlur\n  });\n  useUpdateEffect(() => {\n    if (!format || !value) return;\n    formatRef.current = format;\n    const nextValue = convertColor(value, fallbackValue)(format);\n    if (!nextValue) return;\n    setInputValue(formatInput(nextValue));\n    setValue(nextValue);\n  }, [format]);\n  useUpdateEffect(() => {\n    if (isInputFocused.current || !valueProp) return;\n    setInputValue(formatInput(valueProp));\n  }, [valueProp]);\n  const getPopoverProps = useCallback(props => ({\n    matchWidth: isColorSelectorFull,\n    ...rest,\n    ...props,\n    isOpen,\n    onOpen,\n    onClose,\n    placement,\n    duration,\n    trigger: \"never\",\n    closeOnButton: false\n  }), [isColorSelectorFull, duration, onClose, onOpen, placement, rest, isOpen]);\n  const getContainerProps = useCallback((props = {}, ref = null) => ({\n    ref: mergeRefs(containerRef, ref),\n    ...containerProps,\n    ...props,\n    ...formControlProps,\n    onClick: handlerAll(props.onClick, rest.onClick, onContainerClick),\n    onBlur: handlerAll(props.onBlur, rest.onBlur, onContainerBlur)\n  }), [containerProps, formControlProps, onContainerBlur, onContainerClick, rest]);\n  const getFieldProps = useCallback((props = {}, ref = null) => ({\n    ref: mergeRefs(fieldRef, ref),\n    tabIndex: !allowInput ? -1 : 0,\n    ...inputProps,\n    ...props,\n    style: {\n      ...props.style,\n      ...(!allowInput ? {\n        pointerEvents: \"none\"\n      } : {})\n    },\n    value: inputValue,\n    \"data-active\": dataAttr(isOpen),\n    \"aria-expanded\": dataAttr(isOpen),\n    onFocus: handlerAll(props.onFocus, rest.onFocus, onInputFocus),\n    onKeyDown: handlerAll(props.onKeyDown, rest.onKeyDown, onInputKeyDown),\n    onChange: handlerAll(props.onChange, onInputChange),\n    onBlur: handlerAll(props.onFocus, onInputBlur)\n  }), [allowInput, inputProps, inputValue, isOpen, rest, onInputFocus, onInputKeyDown, onInputChange, onInputBlur]);\n  const getEyeDropperProps = useCallback((props = {}, ref = null) => ({\n    disabled,\n    \"aria-label\": \"Pick a color\",\n    ...props,\n    ref,\n    style: {\n      ...props.style,\n      pointerEvents: readOnly ? \"none\" : void 0\n    },\n    onClick: handlerAll(props.onClick, onEyeDropperClick)\n  }), [disabled, onEyeDropperClick, readOnly]);\n  const getSelectorProps = useCallback(props => ({\n    ...formControlProps,\n    ...props,\n    value,\n    defaultValue: defaultColor,\n    fallbackValue,\n    onChange: onColorSelectorChange,\n    onChangeStart,\n    onChangeEnd,\n    onSwatchClick: handlerAll(onSwatchClick, closeOnSelectSwatch ? onClose : void 0),\n    format: formatRef.current,\n    withPicker,\n    withChannel,\n    withResult,\n    withEyeDropper: withColorSelectorEyeDropper,\n    swatchesLabel,\n    swatches,\n    swatchesColumns,\n    variant: colorSelectorVariant,\n    size: colorSelectorSize,\n    colorScheme: colorSelectorColorScheme\n  }), [formControlProps, value, fallbackValue, defaultColor, onColorSelectorChange, onChangeStart, onChangeEnd, onSwatchClick, onClose, closeOnSelectSwatch, formatRef, withPicker, withChannel, withResult, withColorSelectorEyeDropper, swatchesLabel, swatches, swatchesColumns, colorSelectorColorScheme, colorSelectorSize, colorSelectorVariant]);\n  return {\n    value,\n    eyeDropperSupported,\n    allowInput,\n    getPopoverProps,\n    getContainerProps,\n    getFieldProps,\n    getSelectorProps,\n    getEyeDropperProps\n  };\n};\nexport { ColorPickerProvider, useColorPickerContext, useColorPicker };","map":{"version":3,"names":["layoutStyleProperties","formControlProperties","useFormControlProps","popoverProperties","useControllableState","useDisclosure","useEyeDropper","useOutsideClick","createContext","dataAttr","handlerAll","mergeRefs","pickObject","splitObject","omitObject","getEventRelatedTarget","isContains","convertColor","calcFormat","useUpdateEffect","useCallback","useRef","useState","ColorPickerProvider","useColorPickerContext","name","errorMessage","useColorPicker","value","valueProp","defaultValue","fallbackValue","defaultColor","onChange","onChangeProp","onChangeStart","onChangeEnd","onSwatchClick","formatInput","closeOnBlur","closeOnEsc","placement","duration","isOpen","isOpenProp","defaultIsOpen","onOpen","onOpenProp","onClose","onCloseProp","allowInput","closeOnSelectSwatch","format","swatchesLabel","swatches","swatchesColumns","withPicker","withChannel","withResult","withColorSelectorEyeDropper","colorSelectorVariant","colorSelectorSize","colorSelectorColorScheme","rest","_a","_ariaReadonly","formControlProps","disabled","readOnly","containerProps","inputProps","containerRef","fieldRef","supported","eyeDropperSupported","onEyeDropperOpen","setValue","formatRef","isInputFocused","inputValue","setInputValue","onInternalOpen","onInternalClose","isColorSelectorFull","next","current","prev","onContainerClick","onInputFocus","onInputBlur","onContainerBlur","ev","relatedTarget","onInputKeyDown","key","code","actions","Space","Enter","Escape","action","preventDefault","stopPropagation","onInputChange","value2","target","onColorSelectorChange","setTimeout","onEyeDropperClick","_a2","sRGBHex","ref","handler","enabled","nextValue","getPopoverProps","props","matchWidth","trigger","closeOnButton","getContainerProps","onClick","onBlur","getFieldProps","tabIndex","style","pointerEvents","onFocus","onKeyDown","getEyeDropperProps","getSelectorProps","withEyeDropper","variant","size","colorScheme"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\color-picker\\src\\use-color-picker.ts"],"sourcesContent":["import { layoutStyleProperties } from \"@yamada-ui/core\"\nimport type {\n  UIPropGetter,\n  CSSUIObject,\n  ThemeProps,\n  HTMLUIProps,\n} from \"@yamada-ui/core\"\nimport {\n  formControlProperties,\n  useFormControlProps,\n} from \"@yamada-ui/form-control\"\nimport { popoverProperties, type PopoverProps } from \"@yamada-ui/popover\"\nimport { useControllableState } from \"@yamada-ui/use-controllable-state\"\nimport { useDisclosure } from \"@yamada-ui/use-disclosure\"\nimport { useEyeDropper } from \"@yamada-ui/use-eye-dropper\"\nimport { useOutsideClick } from \"@yamada-ui/use-outside-click\"\nimport type { ColorFormat, Dict } from \"@yamada-ui/utils\"\nimport {\n  createContext,\n  dataAttr,\n  handlerAll,\n  mergeRefs,\n  pickObject,\n  splitObject,\n  omitObject,\n  getEventRelatedTarget,\n  isContains,\n  convertColor,\n  calcFormat,\n  useUpdateEffect,\n} from \"@yamada-ui/utils\"\nimport type { ChangeEvent, FocusEvent, KeyboardEvent, MouseEvent } from \"react\"\nimport { useCallback, useRef, useState } from \"react\"\nimport type { ColorSelectorProps } from \"./color-selector\"\nimport type { UseColorSelectorBaseProps } from \"./use-color-selector\"\n\ntype ColorSelectorThemeProps = ThemeProps<\"ColorSelector\">\n\ntype ColorPickerContext = { value: string; styles: Record<string, CSSUIObject> }\n\nexport const [ColorPickerProvider, useColorPickerContext] =\n  createContext<ColorPickerContext>({\n    name: \"ColorPickerContext\",\n    errorMessage: `useColorPickerContext returned is 'undefined'. Seems you forgot to wrap the components in \"<ColorPicker />\"`,\n  })\n\ntype UseColorPickerOptions = {\n  /**\n   * The initial value of the color selector.\n   */\n  defaultColor?: string\n  /**\n   * If `true`, allows input.\n   *\n   * @default true\n   */\n  allowInput?: boolean\n  /**\n   * A callback function to format the input entered.\n   */\n  formatInput?: (value: string) => string\n  /**\n   * If `true`, display the result component.\n   *\n   * @default false\n   */\n  withResult?: boolean\n  /**\n   * If `true` display the eye dropper component.\n   *\n   * @default false\n   */\n  withColorSelectorEyeDropper?: boolean\n  /**\n   * If `true`, the color swatch will be closed when value is selected.\n   */\n  closeOnSelectSwatch?: boolean\n  /**\n   * Variant for the color selector component.\n   */\n  colorSelectorVariant?: ColorSelectorThemeProps[\"variant\"]\n  /**\n   * Size for the color selector component.\n   */\n  colorSelectorSize?: ColorSelectorThemeProps[\"size\"]\n  /**\n   * ColorScheme for the color selector component.\n   */\n  colorSelectorColorScheme?: ColorSelectorThemeProps[\"colorScheme\"]\n  /**\n   * Props for color selector component.\n   */\n  colorSelectorProps?: ColorSelectorProps\n}\n\nexport type UseColorPickerProps = Omit<\n  HTMLUIProps<\"input\">,\n  \"size\" | \"offset\" | \"value\" | \"defaultValue\" | \"onChange\" | \"children\"\n> &\n  Omit<UseColorSelectorBaseProps, \"id\" | \"name\"> &\n  Omit<\n    PopoverProps,\n    | \"initialFocusRef\"\n    | \"closeOnButton\"\n    | \"trigger\"\n    | \"autoFocus\"\n    | \"restoreFocus\"\n    | \"openDelay\"\n    | \"closeDelay\"\n    | \"children\"\n  > &\n  Pick<\n    ColorSelectorProps,\n    | \"withPicker\"\n    | \"withChannel\"\n    | \"swatchesLabel\"\n    | \"swatches\"\n    | \"swatchesColumns\"\n  > &\n  UseColorPickerOptions\n\nexport const useColorPicker = ({\n  value: valueProp,\n  defaultValue,\n  fallbackValue,\n  defaultColor,\n  onChange: onChangeProp,\n  onChangeStart,\n  onChangeEnd,\n  onSwatchClick,\n  formatInput = (value) => value,\n  closeOnBlur = true,\n  closeOnEsc = true,\n  placement = \"bottom-start\",\n  duration = 0.2,\n  isOpen: isOpenProp,\n  defaultIsOpen,\n  onOpen: onOpenProp,\n  onClose: onCloseProp,\n  allowInput = true,\n  closeOnSelectSwatch,\n  format,\n  swatchesLabel,\n  swatches,\n  swatchesColumns,\n  withPicker,\n  withChannel,\n  withResult = false,\n  withColorSelectorEyeDropper = false,\n  colorSelectorVariant,\n  colorSelectorSize,\n  colorSelectorColorScheme,\n  ...rest\n}: UseColorPickerProps) => {\n  rest = useFormControlProps(rest)\n\n  const { \"aria-readonly\": _ariaReadonly, ...formControlProps } = pickObject(\n    rest,\n    formControlProperties,\n  )\n  const { disabled, readOnly } = formControlProps\n  const [containerProps, inputProps] = splitObject<Dict, string>(\n    omitObject(rest, [...popoverProperties]),\n    layoutStyleProperties,\n  )\n\n  const containerRef = useRef<HTMLDivElement>(null)\n  const fieldRef = useRef<HTMLInputElement>(null)\n\n  const { supported: eyeDropperSupported, onOpen: onEyeDropperOpen } =\n    useEyeDropper()\n  const [value, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp,\n  })\n  const formatRef = useRef<ColorFormat>(\n    format ?? calcFormat(value ?? defaultColor ?? \"\"),\n  )\n  const isInputFocused = useRef<boolean>(false)\n  const [inputValue, setInputValue] = useState<string>(value ?? \"\")\n  const {\n    isOpen,\n    onOpen: onInternalOpen,\n    onClose: onInternalClose,\n  } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n  })\n  const isColorSelectorFull = colorSelectorSize === \"full\"\n\n  const onOpen = useCallback(() => {\n    if (disabled || readOnly) return\n\n    onInternalOpen()\n  }, [onInternalOpen, disabled, readOnly])\n\n  const onClose = useCallback(() => {\n    if (!isOpen) return\n\n    const next = convertColor(value, fallbackValue)(formatRef.current)\n\n    setValue((prev) => (!next || prev === next ? prev : next))\n    setInputValue(formatInput(next ?? \"\"))\n\n    onInternalClose()\n  }, [\n    formatRef,\n    isOpen,\n    setValue,\n    onInternalClose,\n    value,\n    formatInput,\n    setInputValue,\n    fallbackValue,\n  ])\n\n  const onContainerClick = useCallback(() => {\n    if (isOpen) return\n\n    onOpen()\n  }, [isOpen, onOpen])\n\n  const onInputFocus = useCallback(() => {\n    isInputFocused.current = true\n\n    if (isOpen) return\n\n    onOpen()\n  }, [isOpen, onOpen])\n\n  const onInputBlur = useCallback(() => {\n    isInputFocused.current = false\n  }, [])\n\n  const onContainerBlur = useCallback(\n    (ev: FocusEvent<HTMLDivElement>) => {\n      const relatedTarget = getEventRelatedTarget(ev)\n\n      if (isContains(containerRef.current, relatedTarget)) return\n\n      if (!closeOnBlur) return\n\n      if (isOpen) onClose()\n    },\n    [closeOnBlur, isOpen, onClose],\n  )\n\n  const onInputKeyDown = useCallback(\n    (ev: KeyboardEvent<HTMLInputElement>) => {\n      if (ev.key === \" \") ev.key = ev.code\n\n      if (disabled || readOnly) return\n\n      const actions: Record<string, Function | undefined> = {\n        Space: !isOpen ? onOpen : undefined,\n        Enter: !isOpen ? onOpen : undefined,\n        Escape: closeOnEsc ? onClose : undefined,\n      }\n\n      const action = actions[ev.key]\n\n      if (!action) return\n\n      ev.preventDefault()\n      ev.stopPropagation()\n      action()\n    },\n    [disabled, readOnly, isOpen, onOpen, closeOnEsc, onClose],\n  )\n\n  const onInputChange = useCallback(\n    (ev: ChangeEvent<HTMLInputElement>) => {\n      const value = ev.target.value\n\n      setInputValue(formatInput(value))\n      setValue(value)\n    },\n    [setInputValue, formatInput, setValue],\n  )\n\n  const onColorSelectorChange = useCallback(\n    (value: string) => {\n      setValue(value)\n\n      setTimeout(() => {\n        if (!isInputFocused.current) setInputValue(formatInput(value))\n      })\n    },\n    [setValue, formatInput],\n  )\n\n  const onEyeDropperClick = useCallback(\n    async (ev: MouseEvent<HTMLButtonElement>) => {\n      ev.preventDefault()\n      ev.stopPropagation()\n\n      try {\n        const { sRGBHex } = (await onEyeDropperOpen()) ?? {}\n\n        if (!sRGBHex) return\n\n        onColorSelectorChange(sRGBHex)\n        onChangeEnd?.(sRGBHex)\n      } catch {}\n    },\n    [onEyeDropperOpen, onColorSelectorChange, onChangeEnd],\n  )\n\n  useOutsideClick({\n    ref: containerRef,\n    handler: onClose,\n    enabled: isOpen && closeOnBlur,\n  })\n\n  useUpdateEffect(() => {\n    if (!format || !value) return\n\n    formatRef.current = format\n\n    const nextValue = convertColor(value, fallbackValue)(format)\n\n    if (!nextValue) return\n\n    setInputValue(formatInput(nextValue))\n    setValue(nextValue)\n  }, [format])\n\n  useUpdateEffect(() => {\n    if (isInputFocused.current || !valueProp) return\n\n    setInputValue(formatInput(valueProp))\n  }, [valueProp])\n\n  const getPopoverProps = useCallback(\n    (props?: PopoverProps): PopoverProps => ({\n      matchWidth: isColorSelectorFull,\n      ...rest,\n      ...props,\n      isOpen,\n      onOpen,\n      onClose,\n      placement,\n      duration,\n      trigger: \"never\",\n      closeOnButton: false,\n    }),\n    [isColorSelectorFull, duration, onClose, onOpen, placement, rest, isOpen],\n  )\n\n  const getContainerProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ref: mergeRefs(containerRef, ref),\n      ...containerProps,\n      ...props,\n      ...formControlProps,\n      onClick: handlerAll(props.onClick, rest.onClick, onContainerClick),\n      onBlur: handlerAll(props.onBlur, rest.onBlur, onContainerBlur),\n    }),\n    [containerProps, formControlProps, onContainerBlur, onContainerClick, rest],\n  )\n\n  const getFieldProps: UIPropGetter<\"input\"> = useCallback(\n    (props = {}, ref = null) => ({\n      ref: mergeRefs(fieldRef, ref),\n      tabIndex: !allowInput ? -1 : 0,\n      ...inputProps,\n      ...props,\n      style: {\n        ...props.style,\n        ...(!allowInput ? { pointerEvents: \"none\" } : {}),\n      },\n      value: inputValue,\n      \"data-active\": dataAttr(isOpen),\n      \"aria-expanded\": dataAttr(isOpen),\n      onFocus: handlerAll(props.onFocus, rest.onFocus, onInputFocus),\n      onKeyDown: handlerAll(props.onKeyDown, rest.onKeyDown, onInputKeyDown),\n      onChange: handlerAll(props.onChange, onInputChange),\n      onBlur: handlerAll(props.onFocus, onInputBlur),\n    }),\n    [\n      allowInput,\n      inputProps,\n      inputValue,\n      isOpen,\n      rest,\n      onInputFocus,\n      onInputKeyDown,\n      onInputChange,\n      onInputBlur,\n    ],\n  )\n\n  const getEyeDropperProps: UIPropGetter<\"button\"> = useCallback(\n    (props = {}, ref = null) => ({\n      disabled,\n      \"aria-label\": \"Pick a color\",\n      ...props,\n      ref,\n      style: { ...props.style, pointerEvents: readOnly ? \"none\" : undefined },\n      onClick: handlerAll(props.onClick, onEyeDropperClick),\n    }),\n    [disabled, onEyeDropperClick, readOnly],\n  )\n\n  const getSelectorProps = useCallback(\n    (props?: ColorSelectorProps): ColorSelectorProps => ({\n      ...formControlProps,\n      ...props,\n      value,\n      defaultValue: defaultColor,\n      fallbackValue,\n      onChange: onColorSelectorChange,\n      onChangeStart,\n      onChangeEnd,\n      onSwatchClick: handlerAll(\n        onSwatchClick,\n        closeOnSelectSwatch ? onClose : undefined,\n      ),\n      format: formatRef.current,\n      withPicker,\n      withChannel,\n      withResult,\n      withEyeDropper: withColorSelectorEyeDropper,\n      swatchesLabel,\n      swatches,\n      swatchesColumns,\n      variant: colorSelectorVariant,\n      size: colorSelectorSize,\n      colorScheme: colorSelectorColorScheme,\n    }),\n    [\n      formControlProps,\n      value,\n      fallbackValue,\n      defaultColor,\n      onColorSelectorChange,\n      onChangeStart,\n      onChangeEnd,\n      onSwatchClick,\n      onClose,\n      closeOnSelectSwatch,\n      formatRef,\n      withPicker,\n      withChannel,\n      withResult,\n      withColorSelectorEyeDropper,\n      swatchesLabel,\n      swatches,\n      swatchesColumns,\n      colorSelectorColorScheme,\n      colorSelectorSize,\n      colorSelectorVariant,\n    ],\n  )\n\n  return {\n    value,\n    eyeDropperSupported,\n    allowInput,\n    getPopoverProps,\n    getContainerProps,\n    getFieldProps,\n    getSelectorProps,\n    getEyeDropperProps,\n  }\n}\n\nexport type UseColorPickerReturn = ReturnType<typeof useColorPicker>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
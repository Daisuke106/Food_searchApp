{"ast":null,"code":"\"use client\";\n\n// src/use-select.ts\nimport { layoutStyleProperties } from \"@yamada-ui/core\";\nimport { formControlProperties, useFormControlProps } from \"@yamada-ui/form-control\";\nimport { useControllableState } from \"@yamada-ui/use-controllable-state\";\nimport { createDescendant } from \"@yamada-ui/use-descendant\";\nimport { useDisclosure } from \"@yamada-ui/use-disclosure\";\nimport { useOutsideClick } from \"@yamada-ui/use-outside-click\";\nimport { createContext, dataAttr, funcAll, handlerAll, omitObject, pickObject, splitObject, useUnmountEffect, useUpdateEffect, mergeRefs, isHTMLElement, ariaAttr, isArray, isUndefined, getEventRelatedTarget, isContains } from \"@yamada-ui/utils\";\nimport { useCallback, useRef, useState, useEffect } from \"react\";\nvar isTargetOption = target => {\n  var _a;\n  return isHTMLElement(target) && !!((_a = target == null ? void 0 : target.getAttribute(\"role\")) == null ? void 0 : _a.startsWith(\"select-item\"));\n};\nvar {\n  DescendantsContextProvider: SelectDescendantsContextProvider,\n  useDescendantsContext: useSelectDescendantsContext,\n  useDescendants: useSelectDescendants,\n  useDescendant: useSelectDescendant\n} = createDescendant();\nvar [SelectProvider, useSelectContext] = createContext({\n  strict: false,\n  name: \"SelectContext\"\n});\nvar useSelect = ({\n  placeholder,\n  closeOnBlur = true,\n  closeOnEsc = true,\n  closeOnSelect = true,\n  placeholderInOptions = true,\n  omitSelectedValues = false,\n  maxSelectValues,\n  isEmpty,\n  placement = \"bottom-start\",\n  duration = 0.2,\n  isOpen: isOpenProp,\n  defaultIsOpen,\n  onOpen: onOpenProp,\n  onClose: onCloseProp,\n  optionProps,\n  ...rest\n}) => {\n  rest = useFormControlProps(rest);\n  const {\n    \"aria-readonly\": _ariaReadonly,\n    ...formControlProps\n  } = pickObject(rest, formControlProperties);\n  const [containerProps, fieldProps] = splitObject(omitObject(rest, [\"value\", \"defaultValue\", \"onChange\", \"aria-readonly\"]), layoutStyleProperties);\n  const descendants = useSelectDescendants();\n  const [focusedIndex, setFocusedIndex] = useState(-1);\n  const [isAllSelected, setIsAllSelected] = useState(false);\n  const containerRef = useRef(null);\n  const fieldRef = useRef(null);\n  const listRef = useRef(null);\n  const timeoutIds = useRef( /* @__PURE__ */new Set([]));\n  const [value, setValue] = useControllableState({\n    value: rest.value,\n    defaultValue: rest.defaultValue,\n    onChange: rest.onChange\n  });\n  const [label, setLabel] = useState(void 0);\n  const isFocused = focusedIndex > -1;\n  const isMulti = isArray(value);\n  const isEmptyValue = (!isMulti ? !value : !value.length) && !(placeholder && placeholderInOptions);\n  const selectedValues = descendants.values(({\n    node\n  }) => {\n    var _a;\n    return isMulti && value.includes((_a = node.dataset.value) != null ? _a : \"\");\n  });\n  const selectedIndexes = selectedValues.map(({\n    index\n  }) => index);\n  const enabledValues = descendants.enabledValues(({\n    index\n  }) => !selectedIndexes.includes(index));\n  const onFocusFirst = useCallback(() => {\n    const id = setTimeout(() => {\n      const first = descendants.enabledFirstValue();\n      if (!first) return;\n      if (!isMulti || !omitSelectedValues) {\n        setFocusedIndex(first.index);\n      } else {\n        if (selectedIndexes.includes(first.index)) {\n          const enabledFirst = enabledValues[0];\n          setFocusedIndex(enabledFirst.index);\n        } else {\n          setFocusedIndex(first.index);\n        }\n      }\n    });\n    timeoutIds.current.add(id);\n  }, [descendants, enabledValues, isMulti, omitSelectedValues, selectedIndexes]);\n  const onFocusLast = useCallback(() => {\n    const id = setTimeout(() => {\n      const last = descendants.enabledLastValue();\n      if (!last) return;\n      if (!isMulti || !omitSelectedValues) {\n        setFocusedIndex(last.index);\n      } else {\n        if (selectedIndexes.includes(last.index)) {\n          const enabledLast = enabledValues.reverse()[0];\n          setFocusedIndex(enabledLast.index);\n        } else {\n          setFocusedIndex(last.index);\n        }\n      }\n    });\n    timeoutIds.current.add(id);\n  }, [descendants, enabledValues, isMulti, omitSelectedValues, selectedIndexes]);\n  const onFocusSelected = useCallback(() => {\n    const id = setTimeout(() => {\n      const values = descendants.enabledValues();\n      const selected = values.find(({\n        node\n      }) => {\n        var _a;\n        return !isMulti ? node.dataset.value === value : value.includes((_a = node.dataset.value) != null ? _a : \"\");\n      });\n      if (selected) setFocusedIndex(selected.index);\n    });\n    timeoutIds.current.add(id);\n  }, [descendants, isMulti, value]);\n  const onFocusNext = useCallback(() => {\n    const id = setTimeout(() => {\n      var _a;\n      const next = descendants.enabledNextValue(focusedIndex);\n      if (!next) return;\n      if (!isMulti || !omitSelectedValues) {\n        setFocusedIndex(next.index);\n      } else {\n        if (selectedIndexes.includes(next.index)) {\n          const enabledNext = (_a = enabledValues.find(({\n            index\n          }) => next.index < index)) != null ? _a : enabledValues[0];\n          setFocusedIndex(enabledNext.index);\n        } else {\n          setFocusedIndex(next.index);\n        }\n      }\n    });\n    timeoutIds.current.add(id);\n  }, [descendants, enabledValues, focusedIndex, isMulti, omitSelectedValues, selectedIndexes, setFocusedIndex]);\n  const onFocusPrev = useCallback(() => {\n    const id = setTimeout(() => {\n      var _a;\n      const prev = descendants.enabledPrevValue(focusedIndex);\n      if (!prev) return;\n      if (!isMulti || !omitSelectedValues) {\n        setFocusedIndex(prev.index);\n      } else {\n        if (selectedIndexes.includes(prev.index)) {\n          const enabledPrev = (_a = enabledValues.reverse().find(({\n            index\n          }) => index < prev.index)) != null ? _a : enabledValues[0];\n          setFocusedIndex(enabledPrev.index);\n        } else {\n          setFocusedIndex(prev.index);\n        }\n      }\n    });\n    timeoutIds.current.add(id);\n  }, [descendants, enabledValues, focusedIndex, isMulti, omitSelectedValues, selectedIndexes, setFocusedIndex]);\n  const onFocusFirstOrSelected = isEmptyValue || omitSelectedValues ? onFocusFirst : onFocusSelected;\n  const onFocusLastOrSelected = isEmptyValue || omitSelectedValues ? onFocusLast : onFocusSelected;\n  const onChangeLabel = useCallback((newValue, runOmit = true) => {\n    const values = descendants.values();\n    const selectedValues2 = values.filter(({\n      node\n    }) => node.dataset.value === newValue).map(({\n      node,\n      index\n    }) => {\n      var _a;\n      if (!(!!placeholder && placeholderInOptions) || index !== 0) {\n        const el = Array.from(node.children).find(child => child.getAttribute(\"data-label\") !== null);\n        return (_a = el == null ? void 0 : el.innerHTML) != null ? _a : \"\";\n      } else {\n        return void 0;\n      }\n    });\n    setLabel(prev => {\n      if (!isMulti) {\n        return selectedValues2[0];\n      } else {\n        selectedValues2.forEach(selectedValue => {\n          const isSelected = isArray(prev) && prev.includes(selectedValue != null ? selectedValue : \"\");\n          if (!isSelected) {\n            prev = [...(isArray(prev) ? prev : []), selectedValue];\n          } else if (runOmit) {\n            prev = isArray(prev) ? prev.filter(value2 => value2 !== selectedValue) : void 0;\n          }\n        });\n        return prev;\n      }\n    });\n  }, [descendants, isMulti, placeholder, placeholderInOptions]);\n  const onChange = useCallback(newValue => {\n    setValue(prev => {\n      if (!isArray(prev)) {\n        return newValue;\n      } else {\n        const isSelected = prev.includes(newValue);\n        if (!isSelected) {\n          return [...prev, newValue];\n        } else {\n          return prev.filter(value2 => value2 !== newValue);\n        }\n      }\n    });\n    onChangeLabel(newValue);\n  }, [onChangeLabel, setValue]);\n  const onClear = useCallback(ev => {\n    ev.stopPropagation();\n    setValue([]);\n    setLabel(void 0);\n  }, [setLabel, setValue]);\n  const {\n    isOpen,\n    onOpen: onInternalOpen,\n    onClose\n  } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp\n  });\n  const onOpen = useCallback(() => {\n    if (formControlProps.disabled || formControlProps.readOnly) return;\n    if (isEmpty || isAllSelected) return;\n    onInternalOpen();\n  }, [formControlProps, isEmpty, isAllSelected, onInternalOpen]);\n  const onSelect = useCallback(() => {\n    var _a, _b;\n    let enabledValue = descendants.value(focusedIndex);\n    if (\"disabled\" in ((_a = enabledValue == null ? void 0 : enabledValue.node.dataset) != null ? _a : {})) enabledValue = void 0;\n    if (!enabledValue) return;\n    const value2 = (_b = enabledValue.node.dataset.value) != null ? _b : \"\";\n    onChange(value2);\n    if (closeOnSelect) onClose();\n    if (omitSelectedValues) onFocusNext();\n  }, [closeOnSelect, descendants, focusedIndex, omitSelectedValues, onChange, onClose, onFocusNext]);\n  const onClick = useCallback(() => {\n    if (isOpen) return;\n    onOpen();\n    onFocusFirstOrSelected();\n  }, [isOpen, onFocusFirstOrSelected, onOpen]);\n  const onFocus = useCallback(() => {\n    if (isOpen) return;\n    onOpen();\n    onFocusFirstOrSelected();\n  }, [isOpen, onFocusFirstOrSelected, onOpen]);\n  const onBlur = useCallback(ev => {\n    const relatedTarget = getEventRelatedTarget(ev);\n    if (isContains(containerRef.current, relatedTarget)) return;\n    if (!closeOnBlur) return;\n    if (isOpen) onClose();\n  }, [closeOnBlur, isOpen, onClose]);\n  const onKeyDown = useCallback(ev => {\n    if (ev.key === \" \") ev.key = ev.code;\n    if (formControlProps.disabled || formControlProps.readOnly) return;\n    const actions = {\n      ArrowDown: isFocused ? () => onFocusNext() : !isOpen ? funcAll(onOpen, onFocusFirstOrSelected) : void 0,\n      ArrowUp: isFocused ? () => onFocusPrev() : !isOpen ? funcAll(onOpen, onFocusLastOrSelected) : void 0,\n      Space: isFocused ? onSelect : !isOpen ? funcAll(onOpen, onFocusFirstOrSelected) : void 0,\n      Enter: isFocused ? onSelect : !isOpen ? funcAll(onOpen, onFocusFirstOrSelected) : void 0,\n      Home: isOpen ? onFocusFirst : void 0,\n      End: isOpen ? onFocusLast : void 0,\n      Escape: closeOnEsc ? onClose : void 0\n    };\n    const action = actions[ev.key];\n    if (!action) return;\n    ev.preventDefault();\n    ev.stopPropagation();\n    action();\n  }, [formControlProps.disabled, formControlProps.readOnly, isFocused, isOpen, onOpen, onFocusFirstOrSelected, onFocusLastOrSelected, onSelect, onFocusFirst, onFocusLast, closeOnEsc, onClose, onFocusNext, onFocusPrev]);\n  useOutsideClick({\n    ref: containerRef,\n    handler: onClose,\n    enabled: isOpen && closeOnBlur\n  });\n  useEffect(() => {\n    if (!isMulti) return;\n    if (!omitSelectedValues && isUndefined(maxSelectValues)) return;\n    const isAll = value.length > 0 && value.length === descendants.count();\n    const isMax = value.length === maxSelectValues;\n    if (isAll || isMax) {\n      onClose();\n      setIsAllSelected(true);\n    } else {\n      setIsAllSelected(false);\n    }\n  }, [omitSelectedValues, value, descendants, isMulti, onClose, maxSelectValues]);\n  useUpdateEffect(() => {\n    if (!isOpen) setFocusedIndex(-1);\n  }, [isOpen]);\n  useUnmountEffect(() => {\n    timeoutIds.current.forEach(id => clearTimeout(id));\n    timeoutIds.current.clear();\n  });\n  const getPopoverProps = useCallback(props => ({\n    matchWidth: true,\n    ...rest,\n    ...props,\n    isOpen,\n    onOpen,\n    onClose,\n    placement,\n    duration,\n    trigger: \"never\",\n    closeOnButton: false,\n    closeOnBlur\n  }), [duration, closeOnBlur, onClose, onOpen, placement, rest, isOpen]);\n  const getContainerProps = useCallback((props = {}, ref = null) => ({\n    ref: mergeRefs(containerRef, ref),\n    ...containerProps,\n    ...props,\n    ...formControlProps,\n    onClick: handlerAll(props.onClick, rest.onClick, onClick),\n    onBlur: handlerAll(props.onBlur, rest.onBlur, onBlur)\n  }), [containerProps, formControlProps, onBlur, onClick, rest]);\n  const getFieldProps = useCallback((props = {}, ref = null) => ({\n    ref: mergeRefs(fieldRef, ref),\n    tabIndex: 0,\n    ...fieldProps,\n    ...props,\n    \"data-active\": dataAttr(isOpen),\n    \"data-placeholder\": dataAttr(!isMulti ? label === void 0 : !(label == null ? void 0 : label.length)),\n    \"aria-expanded\": dataAttr(isOpen),\n    onFocus: handlerAll(props.onFocus, rest.onFocus, onFocus),\n    onKeyDown: handlerAll(props.onKeyDown, rest.onKeyDown, onKeyDown)\n  }), [fieldProps, isOpen, isMulti, label, rest, onFocus, onKeyDown]);\n  return {\n    descendants,\n    value,\n    label,\n    focusedIndex,\n    placeholder,\n    placeholderInOptions,\n    omitSelectedValues,\n    closeOnSelect,\n    isOpen,\n    containerRef,\n    fieldRef,\n    listRef,\n    optionProps,\n    formControlProps,\n    onChangeLabel,\n    onChange,\n    onClear,\n    onOpen,\n    onClose,\n    onFocusFirst,\n    onFocusLast,\n    onFocusSelected,\n    onFocusNext,\n    onFocusPrev,\n    setFocusedIndex,\n    getPopoverProps,\n    getContainerProps,\n    getFieldProps\n  };\n};\nvar useSelectList = () => {\n  const {\n    listRef,\n    focusedIndex\n  } = useSelectContext();\n  const descendants = useSelectDescendantsContext();\n  const beforeFocusedIndex = useRef(-1);\n  const selectedValue = descendants.value(focusedIndex);\n  useEffect(() => {\n    if (!listRef.current || !selectedValue) return;\n    if (beforeFocusedIndex.current === selectedValue.index) return;\n    const parent = listRef.current;\n    const child = selectedValue.node;\n    const parentHeight = parent.clientHeight;\n    const viewTop = parent.scrollTop;\n    const viewBottom = viewTop + parentHeight;\n    const childHeight = child.clientHeight;\n    const childTop = child.offsetTop;\n    const childBottom = childTop + childHeight;\n    const isInView = viewTop <= childTop && childBottom <= viewBottom;\n    const isScrollBottom = beforeFocusedIndex.current < selectedValue.index;\n    if (!isInView) {\n      if (childBottom <= parentHeight) {\n        listRef.current.scrollTo({\n          top: 0\n        });\n      } else {\n        if (!isScrollBottom) {\n          listRef.current.scrollTo({\n            top: childTop + 1\n          });\n        } else {\n          listRef.current.scrollTo({\n            top: childBottom - parentHeight\n          });\n        }\n      }\n    }\n    beforeFocusedIndex.current = selectedValue.index;\n  }, [listRef, selectedValue]);\n  const getListProps = useCallback((props = {}, ref = null) => ({\n    as: \"ul\",\n    ref: mergeRefs(listRef, ref),\n    role: \"select\",\n    tabIndex: -1,\n    ...props\n  }), [listRef]);\n  return {\n    getListProps\n  };\n};\nvar useSelectOptionGroup = ({\n  label,\n  ...rest\n}) => {\n  const {\n    value,\n    omitSelectedValues\n  } = useSelectContext();\n  const isMulti = isArray(value);\n  const descendants = useSelectDescendantsContext();\n  const values = descendants.values();\n  const selectedValues = isMulti && omitSelectedValues ? descendants.values(({\n    node\n  }) => {\n    var _a;\n    return value.includes((_a = node.dataset.value) != null ? _a : \"\");\n  }) : [];\n  const selectedIndexes = selectedValues.map(({\n    index\n  }) => index);\n  const childValues = values.filter(({\n    node,\n    index\n  }) => {\n    var _a;\n    return ((_a = node.parentElement) == null ? void 0 : _a.dataset.label) === label && !selectedIndexes.includes(index);\n  });\n  const isEmpty = !childValues.length;\n  const computedRest = splitObject(rest, layoutStyleProperties);\n  const getContainerProps = useCallback((props = {}, ref = null) => {\n    const style = {\n      border: \"0px\",\n      clip: \"rect(0px, 0px, 0px, 0px)\",\n      height: \"1px\",\n      width: \"1px\",\n      margin: \"-1px\",\n      padding: \"0px\",\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n      position: \"absolute\"\n    };\n    return {\n      ref,\n      ...props,\n      ...computedRest[0],\n      style: isEmpty ? style : void 0\n    };\n  }, [computedRest, isEmpty]);\n  const getGroupProps = useCallback((props = {}, ref = null) => ({\n    ref,\n    ...props,\n    ...computedRest[1],\n    \"data-label\": label\n  }), [computedRest, label]);\n  return {\n    label,\n    getContainerProps,\n    getGroupProps\n  };\n};\nvar useSelectOption = (ref, props) => {\n  var _a, _b;\n  const {\n    fieldRef,\n    value,\n    placeholder,\n    placeholderInOptions,\n    omitSelectedValues,\n    closeOnSelect: generalCloseOnSelect,\n    focusedIndex,\n    optionProps,\n    onChange,\n    onChangeLabel,\n    onFocusNext,\n    onClose,\n    setFocusedIndex\n  } = useSelectContext();\n  let {\n    icon: customIcon,\n    isDisabled,\n    isFocusable,\n    closeOnSelect: customCloseOnSelect,\n    children,\n    ...computedProps\n  } = {\n    ...optionProps,\n    ...props\n  };\n  const trulyDisabled = !!isDisabled && !isFocusable;\n  const itemRef = useRef(null);\n  const {\n    index,\n    register,\n    descendants\n  } = useSelectDescendant({\n    disabled: trulyDisabled\n  });\n  const values = descendants.values();\n  const frontValues = values.slice(0, index);\n  const isMulti = isArray(value);\n  const isDuplicated = !isMulti ? frontValues.some(({\n    node\n  }) => {\n    var _a2;\n    return node.dataset.value === ((_a2 = computedProps.value) != null ? _a2 : \"\");\n  }) : false;\n  const isSelected = !isDuplicated && (!isMulti ? ((_a = computedProps.value) != null ? _a : \"\") === value : value.includes((_b = computedProps.value) != null ? _b : \"\"));\n  const isFocused = index === focusedIndex;\n  if (!!placeholder && index > 0 && placeholderInOptions && !computedProps.value) {\n    console.warn(`${!isMulti ? \"Select\" : \"MultiSelect\"}: If placeholders are present, All options must be set value. If want to set an empty value, either don't set the placeholder or set 'placeholderInOptions' to false.`);\n  }\n  const onClick = useCallback(ev => {\n    var _a2;\n    ev.preventDefault();\n    ev.stopPropagation();\n    if (isDisabled) {\n      if (fieldRef.current) fieldRef.current.focus();\n      return;\n    }\n    if (!isTargetOption(ev.currentTarget)) {\n      if (fieldRef.current) fieldRef.current.focus();\n      return;\n    }\n    setFocusedIndex(index);\n    onChange((_a2 = computedProps.value) != null ? _a2 : \"\");\n    if (fieldRef.current) fieldRef.current.focus();\n    if (customCloseOnSelect != null ? customCloseOnSelect : generalCloseOnSelect) onClose();\n    if (omitSelectedValues) onFocusNext();\n  }, [isDisabled, setFocusedIndex, index, onChange, computedProps.value, fieldRef, customCloseOnSelect, generalCloseOnSelect, onClose, omitSelectedValues, onFocusNext]);\n  useEffect(() => {\n    var _a2;\n    if (isSelected) onChangeLabel((_a2 = computedProps.value) != null ? _a2 : \"\", false);\n  }, [computedProps, isSelected, onChangeLabel]);\n  const getOptionProps = useCallback((props2 = {}) => {\n    var _a2;\n    const style = {\n      border: \"0px\",\n      clip: \"rect(0px, 0px, 0px, 0px)\",\n      height: \"1px\",\n      width: \"1px\",\n      margin: \"-1px\",\n      padding: \"0px\",\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n      position: \"absolute\"\n    };\n    return {\n      ref: mergeRefs(itemRef, ref, register),\n      ...omitObject(computedProps, [\"value\"]),\n      ...props2,\n      role: \"select-item\",\n      tabIndex: -1,\n      style: omitSelectedValues && isSelected ? style : void 0,\n      \"data-value\": (_a2 = computedProps.value) != null ? _a2 : \"\",\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"aria-checked\": ariaAttr(isSelected),\n      \"aria-disabled\": ariaAttr(isDisabled),\n      onClick: handlerAll(computedProps.onClick, props2.onClick, onClick)\n    };\n  }, [computedProps, isDisabled, isFocused, isSelected, omitSelectedValues, onClick, ref, register]);\n  return {\n    isSelected,\n    isFocused,\n    customIcon,\n    children,\n    getOptionProps\n  };\n};\nexport { SelectDescendantsContextProvider, useSelectDescendantsContext, useSelectDescendants, useSelectDescendant, SelectProvider, useSelectContext, useSelect, useSelectList, useSelectOptionGroup, useSelectOption };","map":{"version":3,"names":["layoutStyleProperties","formControlProperties","useFormControlProps","useControllableState","createDescendant","useDisclosure","useOutsideClick","createContext","dataAttr","funcAll","handlerAll","omitObject","pickObject","splitObject","useUnmountEffect","useUpdateEffect","mergeRefs","isHTMLElement","ariaAttr","isArray","isUndefined","getEventRelatedTarget","isContains","useCallback","useRef","useState","useEffect","isTargetOption","target","_a","getAttribute","startsWith","DescendantsContextProvider","SelectDescendantsContextProvider","useDescendantsContext","useSelectDescendantsContext","useDescendants","useSelectDescendants","useDescendant","useSelectDescendant","SelectProvider","useSelectContext","strict","name","useSelect","placeholder","closeOnBlur","closeOnEsc","closeOnSelect","placeholderInOptions","omitSelectedValues","maxSelectValues","isEmpty","placement","duration","isOpen","isOpenProp","defaultIsOpen","onOpen","onOpenProp","onClose","onCloseProp","optionProps","rest","_ariaReadonly","formControlProps","containerProps","fieldProps","descendants","focusedIndex","setFocusedIndex","isAllSelected","setIsAllSelected","containerRef","fieldRef","listRef","timeoutIds","Set","value","setValue","defaultValue","onChange","label","setLabel","isFocused","isMulti","isEmptyValue","length","selectedValues","values","node","includes","dataset","selectedIndexes","map","index","enabledValues","onFocusFirst","id","setTimeout","first","enabledFirstValue","enabledFirst","current","add","onFocusLast","last","enabledLastValue","enabledLast","reverse","onFocusSelected","selected","find","onFocusNext","next","enabledNextValue","enabledNext","onFocusPrev","prev","enabledPrevValue","enabledPrev","onFocusFirstOrSelected","onFocusLastOrSelected","onChangeLabel","newValue","runOmit","selectedValues2","filter","el","Array","from","children","child","innerHTML","forEach","selectedValue","isSelected","value2","onClear","ev","stopPropagation","onInternalOpen","disabled","readOnly","onSelect","_b","enabledValue","onClick","onFocus","onBlur","relatedTarget","onKeyDown","key","code","actions","ArrowDown","ArrowUp","Space","Enter","Home","End","Escape","action","preventDefault","ref","handler","enabled","isAll","count","isMax","clearTimeout","clear","getPopoverProps","props","matchWidth","trigger","closeOnButton","getContainerProps","getFieldProps","tabIndex","useSelectList","beforeFocusedIndex","parent","parentHeight","clientHeight","viewTop","scrollTop","viewBottom","childHeight","childTop","offsetTop","childBottom","isInView","isScrollBottom","scrollTo","top","getListProps","as","role","useSelectOptionGroup","childValues","parentElement","computedRest","style","border","clip","height","width","margin","padding","overflow","whiteSpace","position","getGroupProps","useSelectOption","generalCloseOnSelect","icon","customIcon","isDisabled","isFocusable","customCloseOnSelect","computedProps","trulyDisabled","itemRef","register","frontValues","slice","isDuplicated","some","_a2","console","warn","focus","currentTarget","getOptionProps","props2"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\select\\src\\use-select.ts"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps, UIPropGetter } from \"@yamada-ui/core\"\nimport { layoutStyleProperties } from \"@yamada-ui/core\"\nimport type { FormControlOptions } from \"@yamada-ui/form-control\"\nimport {\n  formControlProperties,\n  useFormControlProps,\n} from \"@yamada-ui/form-control\"\nimport type { MotionUIPropGetter } from \"@yamada-ui/motion\"\nimport type { PopoverProps } from \"@yamada-ui/popover\"\nimport { useControllableState } from \"@yamada-ui/use-controllable-state\"\nimport { createDescendant } from \"@yamada-ui/use-descendant\"\nimport { useDisclosure } from \"@yamada-ui/use-disclosure\"\nimport { useOutsideClick } from \"@yamada-ui/use-outside-click\"\nimport {\n  createContext,\n  dataAttr,\n  funcAll,\n  handlerAll,\n  omitObject,\n  pickObject,\n  splitObject,\n  useUnmountEffect,\n  useUpdateEffect,\n  mergeRefs,\n  isHTMLElement,\n  ariaAttr,\n  isArray,\n  isUndefined,\n  getEventRelatedTarget,\n  isContains,\n} from \"@yamada-ui/utils\"\nimport type {\n  Dispatch,\n  ForwardedRef,\n  KeyboardEvent,\n  RefObject,\n  SetStateAction,\n  FocusEvent,\n  MouseEvent,\n  CSSProperties,\n} from \"react\"\nimport { useCallback, useRef, useState, useEffect } from \"react\"\nimport type { OptionProps } from \"./\"\n\nconst isTargetOption = (target: EventTarget | null): boolean =>\n  isHTMLElement(target) &&\n  !!target?.getAttribute(\"role\")?.startsWith(\"select-item\")\n\nexport const {\n  DescendantsContextProvider: SelectDescendantsContextProvider,\n  useDescendantsContext: useSelectDescendantsContext,\n  useDescendants: useSelectDescendants,\n  useDescendant: useSelectDescendant,\n} = createDescendant<HTMLElement>()\n\nexport type MaybeValue = string | string[]\n\ntype SelectContext = Omit<\n  UseSelectProps,\n  \"value\" | \"defaultValue\" | \"onChange\" | \"isEmpty\"\n> & {\n  value: MaybeValue\n  label: MaybeValue | undefined\n  onChange: (newValue: string) => void\n  onChangeLabel: (newValue: string, runOmit?: boolean) => void\n  isOpen: boolean\n  onOpen: () => void\n  onClose: () => void\n  onFocusFirst: () => void\n  onFocusLast: () => void\n  onFocusNext: () => void\n  onFocusPrev: () => void\n  focusedIndex: number\n  setFocusedIndex: Dispatch<SetStateAction<number>>\n  containerRef: RefObject<HTMLDivElement>\n  fieldRef: RefObject<HTMLDivElement>\n  listRef: RefObject<HTMLUListElement>\n  styles: Record<string, CSSUIObject>\n}\n\nexport const [SelectProvider, useSelectContext] = createContext<SelectContext>({\n  strict: false,\n  name: \"SelectContext\",\n})\n\nexport type UseSelectProps<T extends MaybeValue = string> = Omit<\n  HTMLUIProps<\"div\">,\n  \"defaultValue\" | \"onChange\" | \"offset\"\n> &\n  Omit<\n    PopoverProps,\n    | \"initialFocusRef\"\n    | \"closeOnButton\"\n    | \"trigger\"\n    | \"autoFocus\"\n    | \"restoreFocus\"\n    | \"openDelay\"\n    | \"closeDelay\"\n  > &\n  FormControlOptions & {\n    /**\n     * The HTML `name` attribute used for forms.\n     */\n    name?: string\n    /**\n     * The placeholder of the select.\n     */\n    placeholder?: string\n    /**\n     * The value of the select.\n     */\n    value?: T\n    /**\n     * The initial value of the select.\n     */\n    defaultValue?: T\n    /**\n     * The callback invoked when value state changes.\n     */\n    onChange?: (value: T) => void\n    /**\n     * If `true`, the list element will be closed when value is selected.\n     *\n     * @default true\n     */\n    closeOnSelect?: boolean\n    /**\n     * If `true`, include placeholders in options.\n     *\n     * @default true\n     */\n    placeholderInOptions?: boolean\n    isEmpty: boolean\n    /**\n     * If `true`, the selected item(s) will be excluded from the list.\n     *\n     * @default false\n     */\n    omitSelectedValues?: boolean\n    /**\n     * The maximum selectable value.\n     */\n    maxSelectValues?: number\n    /**\n     * Props for select option element.\n     */\n    optionProps?: Omit<OptionProps, \"value\" | \"children\">\n  }\n\nexport const useSelect = <T extends MaybeValue = string>({\n  placeholder,\n  closeOnBlur = true,\n  closeOnEsc = true,\n  closeOnSelect = true,\n  placeholderInOptions = true,\n  omitSelectedValues = false,\n  maxSelectValues,\n  isEmpty,\n  placement = \"bottom-start\",\n  duration = 0.2,\n  isOpen: isOpenProp,\n  defaultIsOpen,\n  onOpen: onOpenProp,\n  onClose: onCloseProp,\n  optionProps,\n  ...rest\n}: UseSelectProps<T>) => {\n  rest = useFormControlProps(rest)\n\n  const { \"aria-readonly\": _ariaReadonly, ...formControlProps } = pickObject(\n    rest,\n    formControlProperties,\n  )\n  const [containerProps, fieldProps] = splitObject(\n    omitObject(rest, [\"value\", \"defaultValue\", \"onChange\", \"aria-readonly\"]),\n    layoutStyleProperties,\n  )\n\n  const descendants = useSelectDescendants()\n\n  const [focusedIndex, setFocusedIndex] = useState<number>(-1)\n  const [isAllSelected, setIsAllSelected] = useState<boolean>(false)\n\n  const containerRef = useRef<HTMLDivElement>(null)\n  const fieldRef = useRef<HTMLDivElement>(null)\n  const listRef = useRef<HTMLUListElement>(null)\n  const timeoutIds = useRef<Set<any>>(new Set([]))\n\n  const [value, setValue] = useControllableState({\n    value: rest.value,\n    defaultValue: rest.defaultValue,\n    onChange: rest.onChange,\n  })\n  const [label, setLabel] = useState<T | undefined>(undefined)\n\n  const isFocused = focusedIndex > -1\n  const isMulti = isArray(value)\n  const isEmptyValue =\n    (!isMulti ? !value : !value.length) &&\n    !(placeholder && placeholderInOptions)\n\n  const selectedValues = descendants.values(\n    ({ node }) => isMulti && value.includes(node.dataset.value ?? \"\"),\n  )\n\n  const selectedIndexes = selectedValues.map(({ index }) => index)\n  const enabledValues = descendants.enabledValues(\n    ({ index }) => !selectedIndexes.includes(index),\n  )\n\n  const onFocusFirst = useCallback(() => {\n    const id = setTimeout(() => {\n      const first = descendants.enabledFirstValue()\n\n      if (!first) return\n\n      if (!isMulti || !omitSelectedValues) {\n        setFocusedIndex(first.index)\n      } else {\n        if (selectedIndexes.includes(first.index)) {\n          const enabledFirst = enabledValues[0]\n\n          setFocusedIndex(enabledFirst.index)\n        } else {\n          setFocusedIndex(first.index)\n        }\n      }\n    })\n\n    timeoutIds.current.add(id)\n  }, [descendants, enabledValues, isMulti, omitSelectedValues, selectedIndexes])\n\n  const onFocusLast = useCallback(() => {\n    const id = setTimeout(() => {\n      const last = descendants.enabledLastValue()\n\n      if (!last) return\n\n      if (!isMulti || !omitSelectedValues) {\n        setFocusedIndex(last.index)\n      } else {\n        if (selectedIndexes.includes(last.index)) {\n          const enabledLast = enabledValues.reverse()[0]\n\n          setFocusedIndex(enabledLast.index)\n        } else {\n          setFocusedIndex(last.index)\n        }\n      }\n    })\n\n    timeoutIds.current.add(id)\n  }, [descendants, enabledValues, isMulti, omitSelectedValues, selectedIndexes])\n\n  const onFocusSelected = useCallback(() => {\n    const id = setTimeout(() => {\n      const values = descendants.enabledValues()\n\n      const selected = values.find(({ node }) =>\n        !isMulti\n          ? node.dataset.value === value\n          : value.includes(node.dataset.value ?? \"\"),\n      )\n\n      if (selected) setFocusedIndex(selected.index)\n    })\n\n    timeoutIds.current.add(id)\n  }, [descendants, isMulti, value])\n\n  const onFocusNext = useCallback(() => {\n    const id = setTimeout(() => {\n      const next = descendants.enabledNextValue(focusedIndex)\n\n      if (!next) return\n\n      if (!isMulti || !omitSelectedValues) {\n        setFocusedIndex(next.index)\n      } else {\n        if (selectedIndexes.includes(next.index)) {\n          const enabledNext =\n            enabledValues.find(({ index }) => next.index < index) ??\n            enabledValues[0]\n\n          setFocusedIndex(enabledNext.index)\n        } else {\n          setFocusedIndex(next.index)\n        }\n      }\n    })\n\n    timeoutIds.current.add(id)\n  }, [\n    descendants,\n    enabledValues,\n    focusedIndex,\n    isMulti,\n    omitSelectedValues,\n    selectedIndexes,\n    setFocusedIndex,\n  ])\n\n  const onFocusPrev = useCallback(() => {\n    const id = setTimeout(() => {\n      const prev = descendants.enabledPrevValue(focusedIndex)\n\n      if (!prev) return\n\n      if (!isMulti || !omitSelectedValues) {\n        setFocusedIndex(prev.index)\n      } else {\n        if (selectedIndexes.includes(prev.index)) {\n          const enabledPrev =\n            enabledValues.reverse().find(({ index }) => index < prev.index) ??\n            enabledValues[0]\n\n          setFocusedIndex(enabledPrev.index)\n        } else {\n          setFocusedIndex(prev.index)\n        }\n      }\n    })\n\n    timeoutIds.current.add(id)\n  }, [\n    descendants,\n    enabledValues,\n    focusedIndex,\n    isMulti,\n    omitSelectedValues,\n    selectedIndexes,\n    setFocusedIndex,\n  ])\n\n  const onFocusFirstOrSelected =\n    isEmptyValue || omitSelectedValues ? onFocusFirst : onFocusSelected\n  const onFocusLastOrSelected =\n    isEmptyValue || omitSelectedValues ? onFocusLast : onFocusSelected\n\n  const onChangeLabel = useCallback(\n    (newValue: string, runOmit: boolean = true) => {\n      const values = descendants.values()\n      const selectedValues = values\n        .filter(({ node }) => node.dataset.value === newValue)\n        .map(({ node, index }) => {\n          if (!(!!placeholder && placeholderInOptions) || index !== 0) {\n            const el = Array.from(node.children).find(\n              (child) => child.getAttribute(\"data-label\") !== null,\n            )\n\n            return el?.innerHTML ?? \"\"\n          } else {\n            return undefined\n          }\n        })\n\n      setLabel((prev) => {\n        if (!isMulti) {\n          return selectedValues[0] as T\n        } else {\n          selectedValues.forEach((selectedValue) => {\n            const isSelected =\n              isArray(prev) && prev.includes(selectedValue ?? \"\")\n\n            if (!isSelected) {\n              prev = [...(isArray(prev) ? prev : []), selectedValue] as T\n            } else if (runOmit) {\n              prev = (\n                isArray(prev)\n                  ? prev.filter((value) => value !== selectedValue)\n                  : undefined\n              ) as T\n            }\n          })\n\n          return prev\n        }\n      })\n    },\n    [descendants, isMulti, placeholder, placeholderInOptions],\n  )\n\n  const onChange = useCallback(\n    (newValue: string) => {\n      setValue((prev) => {\n        if (!isArray(prev)) {\n          return newValue as T\n        } else {\n          const isSelected = prev.includes(newValue)\n\n          if (!isSelected) {\n            return [...prev, newValue] as T\n          } else {\n            return prev.filter((value) => value !== newValue) as T\n          }\n        }\n      })\n\n      onChangeLabel(newValue)\n    },\n    [onChangeLabel, setValue],\n  )\n\n  const onClear = useCallback(\n    (ev: MouseEvent<HTMLDivElement>) => {\n      ev.stopPropagation()\n\n      setValue([] as unknown as T)\n      setLabel(undefined)\n    },\n    [setLabel, setValue],\n  )\n\n  const {\n    isOpen,\n    onOpen: onInternalOpen,\n    onClose,\n  } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n  })\n\n  const onOpen = useCallback(() => {\n    if (formControlProps.disabled || formControlProps.readOnly) return\n\n    if (isEmpty || isAllSelected) return\n\n    onInternalOpen()\n  }, [formControlProps, isEmpty, isAllSelected, onInternalOpen])\n\n  const onSelect = useCallback(() => {\n    let enabledValue = descendants.value(focusedIndex)\n\n    if (\"disabled\" in (enabledValue?.node.dataset ?? {}))\n      enabledValue = undefined\n\n    if (!enabledValue) return\n\n    const value = enabledValue.node.dataset.value ?? \"\"\n\n    onChange(value)\n\n    if (closeOnSelect) onClose()\n\n    if (omitSelectedValues) onFocusNext()\n  }, [\n    closeOnSelect,\n    descendants,\n    focusedIndex,\n    omitSelectedValues,\n    onChange,\n    onClose,\n    onFocusNext,\n  ])\n\n  const onClick = useCallback(() => {\n    if (isOpen) return\n\n    onOpen()\n\n    onFocusFirstOrSelected()\n  }, [isOpen, onFocusFirstOrSelected, onOpen])\n\n  const onFocus = useCallback(() => {\n    if (isOpen) return\n\n    onOpen()\n\n    onFocusFirstOrSelected()\n  }, [isOpen, onFocusFirstOrSelected, onOpen])\n\n  const onBlur = useCallback(\n    (ev: FocusEvent<HTMLDivElement>) => {\n      const relatedTarget = getEventRelatedTarget(ev)\n\n      if (isContains(containerRef.current, relatedTarget)) return\n\n      if (!closeOnBlur) return\n\n      if (isOpen) onClose()\n    },\n    [closeOnBlur, isOpen, onClose],\n  )\n\n  const onKeyDown = useCallback(\n    (ev: KeyboardEvent<HTMLDivElement>) => {\n      if (ev.key === \" \") ev.key = ev.code\n\n      if (formControlProps.disabled || formControlProps.readOnly) return\n\n      const actions: Record<string, Function | undefined> = {\n        ArrowDown: isFocused\n          ? () => onFocusNext()\n          : !isOpen\n            ? funcAll(onOpen, onFocusFirstOrSelected)\n            : undefined,\n        ArrowUp: isFocused\n          ? () => onFocusPrev()\n          : !isOpen\n            ? funcAll(onOpen, onFocusLastOrSelected)\n            : undefined,\n        Space: isFocused\n          ? onSelect\n          : !isOpen\n            ? funcAll(onOpen, onFocusFirstOrSelected)\n            : undefined,\n        Enter: isFocused\n          ? onSelect\n          : !isOpen\n            ? funcAll(onOpen, onFocusFirstOrSelected)\n            : undefined,\n        Home: isOpen ? onFocusFirst : undefined,\n        End: isOpen ? onFocusLast : undefined,\n        Escape: closeOnEsc ? onClose : undefined,\n      }\n\n      const action = actions[ev.key]\n\n      if (!action) return\n\n      ev.preventDefault()\n      ev.stopPropagation()\n      action()\n    },\n    [\n      formControlProps.disabled,\n      formControlProps.readOnly,\n      isFocused,\n      isOpen,\n      onOpen,\n      onFocusFirstOrSelected,\n      onFocusLastOrSelected,\n      onSelect,\n      onFocusFirst,\n      onFocusLast,\n      closeOnEsc,\n      onClose,\n      onFocusNext,\n      onFocusPrev,\n    ],\n  )\n\n  useOutsideClick({\n    ref: containerRef,\n    handler: onClose,\n    enabled: isOpen && closeOnBlur,\n  })\n\n  useEffect(() => {\n    if (!isMulti) return\n\n    if (!omitSelectedValues && isUndefined(maxSelectValues)) return\n\n    const isAll = value.length > 0 && value.length === descendants.count()\n    const isMax = value.length === maxSelectValues\n\n    if (isAll || isMax) {\n      onClose()\n      setIsAllSelected(true)\n    } else {\n      setIsAllSelected(false)\n    }\n  }, [\n    omitSelectedValues,\n    value,\n    descendants,\n    isMulti,\n    onClose,\n    maxSelectValues,\n  ])\n\n  useUpdateEffect(() => {\n    if (!isOpen) setFocusedIndex(-1)\n  }, [isOpen])\n\n  useUnmountEffect(() => {\n    timeoutIds.current.forEach((id) => clearTimeout(id))\n    timeoutIds.current.clear()\n  })\n\n  const getPopoverProps = useCallback(\n    (props?: PopoverProps): PopoverProps => ({\n      matchWidth: true,\n      ...rest,\n      ...props,\n      isOpen,\n      onOpen,\n      onClose,\n      placement,\n      duration,\n      trigger: \"never\",\n      closeOnButton: false,\n      closeOnBlur,\n    }),\n    [duration, closeOnBlur, onClose, onOpen, placement, rest, isOpen],\n  )\n\n  const getContainerProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ref: mergeRefs(containerRef, ref),\n      ...containerProps,\n      ...props,\n      ...formControlProps,\n      onClick: handlerAll(props.onClick, rest.onClick, onClick),\n\n      onBlur: handlerAll(props.onBlur, rest.onBlur, onBlur),\n    }),\n    [containerProps, formControlProps, onBlur, onClick, rest],\n  )\n\n  const getFieldProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ref: mergeRefs(fieldRef, ref),\n      tabIndex: 0,\n      ...fieldProps,\n      ...props,\n      \"data-active\": dataAttr(isOpen),\n      \"data-placeholder\": dataAttr(\n        !isMulti ? label === undefined : !label?.length,\n      ),\n      \"aria-expanded\": dataAttr(isOpen),\n      onFocus: handlerAll(props.onFocus, rest.onFocus, onFocus),\n      onKeyDown: handlerAll(props.onKeyDown, rest.onKeyDown, onKeyDown),\n    }),\n    [fieldProps, isOpen, isMulti, label, rest, onFocus, onKeyDown],\n  )\n\n  return {\n    descendants,\n    value,\n    label,\n    focusedIndex,\n    placeholder,\n    placeholderInOptions,\n    omitSelectedValues,\n    closeOnSelect,\n    isOpen,\n    containerRef,\n    fieldRef,\n    listRef,\n    optionProps,\n    formControlProps,\n    onChangeLabel,\n    onChange,\n    onClear,\n    onOpen,\n    onClose,\n    onFocusFirst,\n    onFocusLast,\n    onFocusSelected,\n    onFocusNext,\n    onFocusPrev,\n    setFocusedIndex,\n    getPopoverProps,\n    getContainerProps,\n    getFieldProps,\n  }\n}\n\nexport type UseSelectReturn = ReturnType<typeof useSelect>\n\nexport const useSelectList = () => {\n  const { listRef, focusedIndex } = useSelectContext()\n\n  const descendants = useSelectDescendantsContext()\n\n  const beforeFocusedIndex = useRef<number>(-1)\n  const selectedValue = descendants.value(focusedIndex)\n\n  useEffect(() => {\n    if (!listRef.current || !selectedValue) return\n\n    if (beforeFocusedIndex.current === selectedValue.index) return\n\n    const parent = listRef.current\n    const child = selectedValue.node\n\n    const parentHeight = parent.clientHeight\n    const viewTop = parent.scrollTop\n    const viewBottom = viewTop + parentHeight\n\n    const childHeight = child.clientHeight\n    const childTop = child.offsetTop\n    const childBottom = childTop + childHeight\n\n    const isInView = viewTop <= childTop && childBottom <= viewBottom\n\n    const isScrollBottom = beforeFocusedIndex.current < selectedValue.index\n\n    if (!isInView) {\n      if (childBottom <= parentHeight) {\n        listRef.current.scrollTo({ top: 0 })\n      } else {\n        if (!isScrollBottom) {\n          listRef.current.scrollTo({ top: childTop + 1 })\n        } else {\n          listRef.current.scrollTo({ top: childBottom - parentHeight })\n        }\n      }\n    }\n\n    beforeFocusedIndex.current = selectedValue.index\n  }, [listRef, selectedValue])\n\n  const getListProps: MotionUIPropGetter<\"ul\"> = useCallback(\n    (props = {}, ref = null) => ({\n      as: \"ul\",\n      ref: mergeRefs(listRef, ref),\n      role: \"select\",\n      tabIndex: -1,\n      ...props,\n    }),\n    [listRef],\n  )\n\n  return {\n    getListProps,\n  }\n}\n\nexport type UseSelectListReturn = ReturnType<typeof useSelectList>\n\nexport type UseSelectOptionGroupProps = HTMLUIProps<\"ul\"> & {\n  /**\n   * The label of the option group.\n   */\n  label: string\n}\n\nexport const useSelectOptionGroup = ({\n  label,\n  ...rest\n}: UseSelectOptionGroupProps) => {\n  const { value, omitSelectedValues } = useSelectContext()\n\n  const isMulti = isArray(value)\n\n  const descendants = useSelectDescendantsContext()\n\n  const values = descendants.values()\n  const selectedValues =\n    isMulti && omitSelectedValues\n      ? descendants.values(({ node }) =>\n          value.includes(node.dataset.value ?? \"\"),\n        )\n      : []\n  const selectedIndexes = selectedValues.map(({ index }) => index)\n  const childValues = values.filter(\n    ({ node, index }) =>\n      node.parentElement?.dataset.label === label &&\n      !selectedIndexes.includes(index),\n  )\n\n  const isEmpty = !childValues.length\n\n  const computedRest = splitObject(rest, layoutStyleProperties)\n\n  const getContainerProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const style: CSSProperties = {\n        border: \"0px\",\n        clip: \"rect(0px, 0px, 0px, 0px)\",\n        height: \"1px\",\n        width: \"1px\",\n        margin: \"-1px\",\n        padding: \"0px\",\n        overflow: \"hidden\",\n        whiteSpace: \"nowrap\",\n        position: \"absolute\",\n      }\n\n      return {\n        ref,\n        ...props,\n        ...computedRest[0],\n        style: isEmpty ? style : undefined,\n      }\n    },\n    [computedRest, isEmpty],\n  )\n\n  const getGroupProps: UIPropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ref,\n      ...props,\n      ...computedRest[1],\n      \"data-label\": label,\n    }),\n    [computedRest, label],\n  )\n\n  return {\n    label,\n    getContainerProps,\n    getGroupProps,\n  }\n}\n\nexport type UseSelectOptionGroupReturn = ReturnType<typeof useSelectOptionGroup>\n\nexport type UseSelectOptionProps = Omit<HTMLUIProps<\"li\">, \"value\"> & {\n  /**\n   * The value of the select option.\n   */\n  value?: string\n  /**\n   * If `true`, the select option will be disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the select option will be focusable.\n   *\n   * @default false\n   */\n  isFocusable?: boolean\n  /**\n   * If `true`, the list element will be closed when selected.\n   *\n   * @default false\n   */\n  closeOnSelect?: boolean\n}\n\nexport const useSelectOption = (\n  ref: ForwardedRef<any> | undefined,\n  props: UseSelectOptionProps,\n) => {\n  const {\n    fieldRef,\n    value,\n    placeholder,\n    placeholderInOptions,\n    omitSelectedValues,\n    closeOnSelect: generalCloseOnSelect,\n    focusedIndex,\n    optionProps,\n    onChange,\n    onChangeLabel,\n    onFocusNext,\n    onClose,\n    setFocusedIndex,\n  } = useSelectContext()\n\n  let {\n    icon: customIcon,\n    isDisabled,\n    isFocusable,\n    closeOnSelect: customCloseOnSelect,\n    children,\n    ...computedProps\n  } = { ...optionProps, ...props }\n\n  const trulyDisabled = !!isDisabled && !isFocusable\n\n  const itemRef = useRef<HTMLLIElement>(null)\n\n  const { index, register, descendants } = useSelectDescendant({\n    disabled: trulyDisabled,\n  })\n\n  const values = descendants.values()\n  const frontValues = values.slice(0, index)\n\n  const isMulti = isArray(value)\n  const isDuplicated = !isMulti\n    ? frontValues.some(\n        ({ node }) => node.dataset.value === (computedProps.value ?? \"\"),\n      )\n    : false\n\n  const isSelected =\n    !isDuplicated &&\n    (!isMulti\n      ? (computedProps.value ?? \"\") === value\n      : value.includes(computedProps.value ?? \"\"))\n  const isFocused = index === focusedIndex\n\n  if (\n    !!placeholder &&\n    index > 0 &&\n    placeholderInOptions &&\n    !computedProps.value\n  ) {\n    console.warn(\n      `${\n        !isMulti ? \"Select\" : \"MultiSelect\"\n      }: If placeholders are present, All options must be set value. If want to set an empty value, either don't set the placeholder or set 'placeholderInOptions' to false.`,\n    )\n  }\n  const onClick = useCallback(\n    (ev: MouseEvent<HTMLLIElement>) => {\n      ev.preventDefault()\n      ev.stopPropagation()\n\n      if (isDisabled) {\n        if (fieldRef.current) fieldRef.current.focus()\n\n        return\n      }\n\n      if (!isTargetOption(ev.currentTarget)) {\n        if (fieldRef.current) fieldRef.current.focus()\n\n        return\n      }\n\n      setFocusedIndex(index)\n\n      onChange(computedProps.value ?? \"\")\n\n      if (fieldRef.current) fieldRef.current.focus()\n\n      if (customCloseOnSelect ?? generalCloseOnSelect) onClose()\n\n      if (omitSelectedValues) onFocusNext()\n    },\n    [\n      isDisabled,\n      setFocusedIndex,\n      index,\n      onChange,\n      computedProps.value,\n      fieldRef,\n      customCloseOnSelect,\n      generalCloseOnSelect,\n      onClose,\n      omitSelectedValues,\n      onFocusNext,\n    ],\n  )\n\n  useEffect(() => {\n    if (isSelected) onChangeLabel(computedProps.value ?? \"\", false)\n  }, [computedProps, isSelected, onChangeLabel])\n\n  const getOptionProps: UIPropGetter<\"li\"> = useCallback(\n    (props = {}) => {\n      const style: CSSProperties = {\n        border: \"0px\",\n        clip: \"rect(0px, 0px, 0px, 0px)\",\n        height: \"1px\",\n        width: \"1px\",\n        margin: \"-1px\",\n        padding: \"0px\",\n        overflow: \"hidden\",\n        whiteSpace: \"nowrap\",\n        position: \"absolute\",\n      }\n\n      return {\n        ref: mergeRefs(itemRef, ref, register),\n        ...omitObject(computedProps, [\"value\"]),\n        ...props,\n        role: \"select-item\",\n        tabIndex: -1,\n        style: omitSelectedValues && isSelected ? style : undefined,\n        \"data-value\": computedProps.value ?? \"\",\n        \"data-focus\": dataAttr(isFocused),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"aria-checked\": ariaAttr(isSelected),\n        \"aria-disabled\": ariaAttr(isDisabled),\n        onClick: handlerAll(computedProps.onClick, props.onClick, onClick),\n      }\n    },\n    [\n      computedProps,\n      isDisabled,\n      isFocused,\n      isSelected,\n      omitSelectedValues,\n      onClick,\n      ref,\n      register,\n    ],\n  )\n\n  return {\n    isSelected,\n    isFocused,\n    customIcon,\n    children,\n    getOptionProps,\n  }\n}\n\nexport type UseSelectOptionReturn = ReturnType<typeof useSelectOption>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
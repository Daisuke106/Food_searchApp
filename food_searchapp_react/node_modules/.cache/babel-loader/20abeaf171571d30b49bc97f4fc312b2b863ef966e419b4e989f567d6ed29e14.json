{"ast":null,"code":"\"use client\";\n\n// src/use-snacks.tsx\nimport { Alert, AlertDescription, AlertIcon, AlertTitle } from \"@yamada-ui/alert\";\nimport { CloseButton } from \"@yamada-ui/close-button\";\nimport { forwardRef, ui, useTheme } from \"@yamada-ui/core\";\nimport { cx, merge } from \"@yamada-ui/utils\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar createRender = options => {\n  const {\n    component\n  } = options;\n  const Render = props => {\n    if (typeof component === \"function\") {\n      return component({\n        ...props,\n        ...options\n      });\n    } else {\n      return /* @__PURE__ */jsx(Snack, {\n        ...props,\n        ...options\n      });\n    }\n  };\n  return Render;\n};\nvar counter = 0;\nvar useSnacks = (defaultOptions = {}) => {\n  const [items, setItems] = useState([]);\n  const {\n    theme\n  } = useTheme();\n  const themeOptions = useMemo(() => {\n    var _a, _b;\n    return (_b = (_a = theme.__config.snacks) == null ? void 0 : _a.options) != null ? _b : {};\n  }, [theme]);\n  const computedOptions = useMemo(() => merge(themeOptions, defaultOptions), [defaultOptions, themeOptions]);\n  const {\n    direction,\n    startIndex,\n    limit = 3\n  } = computedOptions;\n  const getOptions = useCallback(options => merge(computedOptions, options), [computedOptions]);\n  const snack = useMemo(() => {\n    const methods = (options = {}) => {\n      options = getOptions(options);\n      const message = createRender(options);\n      counter += 1;\n      let {\n        id = counter,\n        duration,\n        onCloseComplete,\n        status,\n        boxShadow,\n        style\n      } = options;\n      const onClose = () => setItems(prev => prev.filter(child => child.id !== id));\n      const snack2 = {\n        id,\n        status,\n        duration,\n        message,\n        onClose,\n        onCloseComplete,\n        boxShadow,\n        style\n      };\n      setItems(prev => [...prev.splice(-1 * ((limit != null ? limit : Infinity) - 1)), snack2]);\n      return id;\n    };\n    methods.update = (id, options) => {\n      options = getOptions(options);\n      setItems(prev => prev.map(props => {\n        if (props.id === id) {\n          return {\n            ...props,\n            ...options,\n            message: createRender(options)\n          };\n        } else {\n          return props;\n        }\n      }));\n    };\n    methods.closeAll = () => {\n      setItems([]);\n    };\n    methods.close = id => {\n      setItems(prev => prev.filter(props => props.id !== id));\n    };\n    methods.isActive = id => !!items.find(props => props.id === id);\n    return methods;\n  }, [items, limit, getOptions]);\n  const snacks = useMemo(() => ({\n    direction,\n    startIndex,\n    items\n  }), [direction, startIndex, items]);\n  return {\n    snack,\n    snacks\n  };\n};\nvar defaultBoxShadow = [\"0 -1px 3px 0 rgba(0, 0, 0, 0.1), 0 -1px 2px 0 rgba(0, 0, 0, 0.06), 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)\", \"0px 0px 0px 1px rgba(0, 0, 0, 0.1), 0px -1px 2px rgba(0, 0, 0, 0.2), 0px 1px 2px rgba(0, 0, 0, 0.2)\"];\nvar Snack = forwardRef(({\n  variant = \"basic\",\n  colorScheme,\n  status,\n  icon,\n  title,\n  description,\n  isClosable = true,\n  boxShadow = defaultBoxShadow,\n  className,\n  index,\n  onClose\n}, ref) => {\n  return /* @__PURE__ */jsxs(Alert, {\n    ref,\n    className: cx(\"ui-snack\", className),\n    status,\n    variant,\n    colorScheme,\n    alignItems: \"start\",\n    boxShadow: index ? boxShadow : void 0,\n    pe: isClosable ? 8 : void 0,\n    children: [/* @__PURE__ */jsx(AlertIcon, {\n      variant: icon == null ? void 0 : icon.variant,\n      className: \"ui-snack__icon\",\n      ...((icon == null ? void 0 : icon.color) ? {\n        color: icon.color\n      } : {}),\n      children: icon == null ? void 0 : icon.children\n    }), /* @__PURE__ */jsxs(ui.div, {\n      flex: \"1\",\n      children: [title ? /* @__PURE__ */jsx(AlertTitle, {\n        className: \"ui-snack__title\",\n        lineClamp: 1,\n        children: title\n      }) : null, description ? /* @__PURE__ */jsx(AlertDescription, {\n        className: \"ui-snack__desc\",\n        lineClamp: 3,\n        children: description\n      }) : null]\n    }), isClosable ? /* @__PURE__ */jsx(CloseButton, {\n      className: \"ui-snack__close-button\",\n      size: \"sm\",\n      onClick: onClose,\n      position: \"absolute\",\n      top: 2,\n      right: 2\n    }) : null]\n  });\n});\nexport { useSnacks };","map":{"version":3,"names":["Alert","AlertDescription","AlertIcon","AlertTitle","CloseButton","forwardRef","ui","useTheme","cx","merge","useCallback","useMemo","useState","jsx","jsxs","createRender","options","component","Render","props","Snack","counter","useSnacks","defaultOptions","items","setItems","theme","themeOptions","_a","_b","__config","snacks","computedOptions","direction","startIndex","limit","getOptions","snack","methods","message","id","duration","onCloseComplete","status","boxShadow","style","onClose","prev","filter","child","snack2","splice","Infinity","update","map","closeAll","close","isActive","find","defaultBoxShadow","variant","colorScheme","icon","title","description","isClosable","className","index","ref","alignItems","pe","children","color","div","flex","lineClamp","size","onClick","position","top","right"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\snacks\\src\\use-snacks.tsx"],"sourcesContent":["import type { AlertProps } from \"@yamada-ui/alert\"\nimport {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n} from \"@yamada-ui/alert\"\nimport { CloseButton } from \"@yamada-ui/close-button\"\nimport type {\n  CSSUIObject,\n  CSSUIProps,\n  SnackComponentProps,\n  SnackConfigOptions,\n} from \"@yamada-ui/core\"\nimport { forwardRef, ui, useTheme } from \"@yamada-ui/core\"\nimport { cx, merge } from \"@yamada-ui/utils\"\nimport type { FC, ReactNode } from \"react\"\nimport { useCallback, useMemo, useState } from \"react\"\n\nconst createRender = (options: UseSnacksOptions): FC<SnackComponentProps> => {\n  const { component } = options\n\n  const Render: FC<SnackComponentProps> = (props) => {\n    if (typeof component === \"function\") {\n      return component({ ...props, ...options }) as JSX.Element\n    } else {\n      return <Snack {...props} {...options} />\n    }\n  }\n\n  return Render\n}\n\nexport type Snack = {\n  id: string | number\n  duration: UseSnacksOptions[\"duration\"]\n  status: UseSnacksOptions[\"status\"]\n  message: (props: SnackComponentProps) => ReactNode\n  onClose: () => void\n  onCloseComplete?: () => void\n  boxShadow?: CSSUIProps[\"boxShadow\"]\n  style?: CSSUIObject\n}\n\nlet counter = 0\n\ntype SnackMethodsOptions = Omit<\n  UseSnacksOptions,\n  \"direction\" | \"limit\" | \"startIndex\"\n> &\n  Partial<Pick<Snack, \"id\" | \"onCloseComplete\">>\n\nexport type UseSnacksOptions = SnackConfigOptions\n\n/**\n * `useSnacks` is a custom hook for controlling notifications used in forms and the like.\n *\n * @see Docs https://yamada-ui.com/hooks/use-snacks\n */\nexport const useSnacks = (defaultOptions: UseSnacksOptions = {}) => {\n  const [items, setItems] = useState<Snack[]>([])\n  const { theme } = useTheme()\n\n  const themeOptions = useMemo(\n    () => theme.__config.snacks?.options ?? {},\n    [theme],\n  )\n\n  const computedOptions = useMemo(\n    () => merge<UseSnacksOptions>(themeOptions, defaultOptions),\n    [defaultOptions, themeOptions],\n  )\n  const { direction, startIndex, limit = 3 } = computedOptions\n\n  const getOptions = useCallback(\n    (options: SnackMethodsOptions) => merge(computedOptions, options),\n    [computedOptions],\n  )\n\n  const snack = useMemo(() => {\n    const methods = (options: SnackMethodsOptions = {}) => {\n      options = getOptions(options)\n\n      const message = createRender(options)\n\n      counter += 1\n\n      let {\n        id = counter,\n        duration,\n        onCloseComplete,\n        status,\n        boxShadow,\n        style,\n      } = options\n\n      const onClose = () =>\n        setItems((prev) => prev.filter((child) => child.id !== id))\n\n      const snack: Snack = {\n        id,\n        status,\n        duration,\n        message,\n        onClose,\n        onCloseComplete,\n        boxShadow,\n        style,\n      }\n\n      setItems((prev) => [\n        ...prev.splice(-1 * ((limit ?? Infinity) - 1)),\n        snack,\n      ])\n\n      return id\n    }\n\n    methods.update = (\n      id: string | number,\n      options: Omit<SnackMethodsOptions, \"id\">,\n    ) => {\n      options = getOptions(options)\n\n      setItems((prev) =>\n        prev.map((props) => {\n          if (props.id === id) {\n            return { ...props, ...options, message: createRender(options) }\n          } else {\n            return props\n          }\n        }),\n      )\n    }\n\n    methods.closeAll = () => {\n      setItems([])\n    }\n\n    methods.close = (id: string | number) => {\n      setItems((prev) => prev.filter((props) => props.id !== id))\n    }\n\n    methods.isActive = (id: string | number) =>\n      !!items.find((props) => props.id === id)\n\n    return methods\n  }, [items, limit, getOptions])\n\n  const snacks = useMemo(\n    () => ({ direction, startIndex, items }),\n    [direction, startIndex, items],\n  )\n\n  return { snack, snacks }\n}\n\nexport type UseSnacksReturn = ReturnType<typeof useSnacks>\n\nexport type SnackProps = Omit<AlertProps, keyof UseSnacksOptions> &\n  UseSnacksOptions & {\n    index: number\n    onClose?: () => void\n  }\n\nconst defaultBoxShadow: CSSUIProps[\"boxShadow\"] = [\n  \"0 -1px 3px 0 rgba(0, 0, 0, 0.1), 0 -1px 2px 0 rgba(0, 0, 0, 0.06), 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)\",\n  \"0px 0px 0px 1px rgba(0, 0, 0, 0.1), 0px -1px 2px rgba(0, 0, 0, 0.2), 0px 1px 2px rgba(0, 0, 0, 0.2)\",\n]\n\nconst Snack = forwardRef<SnackProps, \"div\">(\n  (\n    {\n      variant = \"basic\",\n      colorScheme,\n      status,\n      icon,\n      title,\n      description,\n      isClosable = true,\n      boxShadow = defaultBoxShadow,\n      className,\n      index,\n      onClose,\n    },\n    ref,\n  ) => {\n    return (\n      <Alert\n        ref={ref}\n        className={cx(\"ui-snack\", className)}\n        status={status}\n        variant={variant}\n        colorScheme={colorScheme}\n        alignItems=\"start\"\n        boxShadow={index ? boxShadow : undefined}\n        pe={isClosable ? 8 : undefined}\n      >\n        <AlertIcon\n          variant={icon?.variant}\n          className=\"ui-snack__icon\"\n          {...(icon?.color ? { color: icon.color } : {})}\n        >\n          {icon?.children}\n        </AlertIcon>\n\n        <ui.div flex=\"1\">\n          {title ? (\n            <AlertTitle className=\"ui-snack__title\" lineClamp={1}>\n              {title}\n            </AlertTitle>\n          ) : null}\n          {description ? (\n            <AlertDescription className=\"ui-snack__desc\" lineClamp={3}>\n              {description}\n            </AlertDescription>\n          ) : null}\n        </ui.div>\n\n        {isClosable ? (\n          <CloseButton\n            className=\"ui-snack__close-button\"\n            size=\"sm\"\n            onClick={onClose}\n            position=\"absolute\"\n            top={2}\n            right={2}\n          />\n        ) : null}\n      </Alert>\n    )\n  },\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
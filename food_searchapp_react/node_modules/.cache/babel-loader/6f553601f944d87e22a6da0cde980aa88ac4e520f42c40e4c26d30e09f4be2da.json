{"ast":null,"code":"\"use client\";\n\n// src/index.ts\nimport { useEventListeners } from \"@yamada-ui/use-event-listener\";\nimport { dataAttr, mergeRefs } from \"@yamada-ui/utils\";\nimport { useCallback, useState } from \"react\";\nvar isValidElement = ev => {\n  const {\n    tagName,\n    isContentEditable\n  } = ev.target;\n  return tagName !== \"INPUT\" && tagName !== \"TEXTAREA\" && isContentEditable !== true;\n};\nvar useClickable = ({\n  ref,\n  isDisabled,\n  isFocusable,\n  clickOnEnter = true,\n  clickOnSpace = true,\n  focusOnClick = true,\n  onMouseDown,\n  onMouseUp,\n  onClick,\n  onKeyDown,\n  onKeyUp,\n  tabIndex: _tabIndex,\n  onMouseOver,\n  onMouseLeave,\n  ...props\n} = {}) => {\n  const [isButton, setIsButton] = useState(true);\n  const [isPressed, setIsPressed] = useState(false);\n  const listeners = useEventListeners();\n  const tabIndex = isButton ? _tabIndex : _tabIndex || 0;\n  const trulyDisabled = isDisabled && !isFocusable;\n  const refCb = node => {\n    if (!node) return;\n    if (node.tagName !== \"BUTTON\") setIsButton(false);\n  };\n  const handleClick = useCallback(ev => {\n    if (isDisabled) {\n      ev.stopPropagation();\n      ev.preventDefault();\n      return;\n    }\n    if (focusOnClick) ev.currentTarget.focus();\n    onClick == null ? void 0 : onClick(ev);\n  }, [isDisabled, focusOnClick, onClick]);\n  const onDocumentKeyUp = useCallback(ev => {\n    if (isPressed && isValidElement(ev)) {\n      ev.preventDefault();\n      ev.stopPropagation();\n      setIsPressed(false);\n      listeners.remove(document, \"keyup\", onDocumentKeyUp, false);\n    }\n  }, [isPressed, listeners]);\n  const handleKeyDown = useCallback(ev => {\n    onKeyDown == null ? void 0 : onKeyDown(ev);\n    if (isDisabled || ev.defaultPrevented || ev.metaKey) return;\n    if (!isValidElement(ev.nativeEvent) || isButton) return;\n    if (clickOnSpace && ev.key === \" \") {\n      ev.preventDefault();\n      setIsPressed(true);\n    }\n    if (clickOnEnter && ev.key === \"Enter\") {\n      ev.preventDefault();\n      ev.currentTarget.click();\n    }\n    listeners.add(document, \"keyup\", onDocumentKeyUp, false);\n  }, [isDisabled, isButton, onKeyDown, clickOnEnter, clickOnSpace, listeners, onDocumentKeyUp]);\n  const handleKeyUp = useCallback(ev => {\n    onKeyUp == null ? void 0 : onKeyUp(ev);\n    if (isDisabled || ev.defaultPrevented || ev.metaKey) return;\n    if (!isValidElement(ev.nativeEvent) || isButton) return;\n    if (clickOnSpace && ev.key === \" \") {\n      ev.preventDefault();\n      setIsPressed(false);\n      ev.currentTarget.click();\n    }\n  }, [clickOnSpace, isButton, isDisabled, onKeyUp]);\n  const onDocumentMouseUp = useCallback(ev => {\n    if (ev.button !== 0) return;\n    setIsPressed(false);\n    listeners.remove(document, \"mouseup\", onDocumentMouseUp, false);\n  }, [listeners]);\n  const handleMouseDown = useCallback(ev => {\n    if (ev.button !== 0) return;\n    if (isDisabled) {\n      ev.stopPropagation();\n      ev.preventDefault();\n      return;\n    }\n    if (!isButton) setIsPressed(true);\n    ev.currentTarget.focus({\n      preventScroll: true\n    });\n    listeners.add(document, \"mouseup\", onDocumentMouseUp, false);\n    onMouseDown == null ? void 0 : onMouseDown(ev);\n  }, [isDisabled, isButton, onMouseDown, listeners, onDocumentMouseUp]);\n  const handleMouseUp = useCallback(ev => {\n    if (ev.button !== 0) return;\n    if (!isButton) setIsPressed(false);\n    onMouseUp == null ? void 0 : onMouseUp(ev);\n  }, [onMouseUp, isButton]);\n  const handleMouseOver = useCallback(ev => {\n    if (isDisabled) {\n      ev.preventDefault();\n      return;\n    }\n    onMouseOver == null ? void 0 : onMouseOver(ev);\n  }, [isDisabled, onMouseOver]);\n  const handleMouseLeave = useCallback(ev => {\n    if (isPressed) {\n      ev.preventDefault();\n      setIsPressed(false);\n    }\n    onMouseLeave == null ? void 0 : onMouseLeave(ev);\n  }, [isPressed, onMouseLeave]);\n  if (isButton) {\n    return {\n      ...props,\n      ref: mergeRefs(ref, refCb),\n      type: \"button\",\n      \"aria-disabled\": trulyDisabled ? void 0 : isDisabled,\n      disabled: trulyDisabled,\n      onClick: handleClick,\n      onMouseDown,\n      onMouseUp,\n      onKeyUp,\n      onKeyDown,\n      onMouseOver,\n      onMouseLeave\n    };\n  } else {\n    return {\n      ...props,\n      ref: mergeRefs(ref, refCb),\n      role: \"button\",\n      \"data-active\": dataAttr(isPressed),\n      \"aria-disabled\": isDisabled ? \"true\" : void 0,\n      tabIndex: trulyDisabled ? void 0 : tabIndex,\n      onClick: handleClick,\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onKeyUp: handleKeyUp,\n      onKeyDown: handleKeyDown,\n      onMouseOver: handleMouseOver,\n      onMouseLeave: handleMouseLeave\n    };\n  }\n};\nexport { useClickable };","map":{"version":3,"names":["useEventListeners","dataAttr","mergeRefs","useCallback","useState","isValidElement","ev","tagName","isContentEditable","target","useClickable","ref","isDisabled","isFocusable","clickOnEnter","clickOnSpace","focusOnClick","onMouseDown","onMouseUp","onClick","onKeyDown","onKeyUp","tabIndex","_tabIndex","onMouseOver","onMouseLeave","props","isButton","setIsButton","isPressed","setIsPressed","listeners","trulyDisabled","refCb","node","handleClick","stopPropagation","preventDefault","currentTarget","focus","onDocumentKeyUp","remove","document","handleKeyDown","defaultPrevented","metaKey","nativeEvent","key","click","add","handleKeyUp","onDocumentMouseUp","button","handleMouseDown","preventScroll","handleMouseUp","handleMouseOver","handleMouseLeave","type","disabled","role"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\use-clickable\\src\\index.ts"],"sourcesContent":["import { useEventListeners } from \"@yamada-ui/use-event-listener\"\nimport type { Dict } from \"@yamada-ui/utils\"\nimport { dataAttr, mergeRefs } from \"@yamada-ui/utils\"\nimport type { HTMLAttributes, KeyboardEvent, MouseEvent, Ref } from \"react\"\nimport { useCallback, useState } from \"react\"\n\nexport type UseClickableProps<\n  Y extends HTMLElement = HTMLElement,\n  M extends HTMLAttributes<Y> = Dict,\n> = M & {\n  /**\n   * If `true`, the element will be disabled. It will set the `disabled` HTML attribute.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and isDisabled, the element will have only `aria-disabled` set to `true`.\n   *\n   * @default false\n   */\n  isFocusable?: boolean\n  /**\n   * Whether or not trigger click on pressing `Enter`.\n   *\n   * @default true\n   */\n  clickOnEnter?: boolean\n  /**\n   * Whether or not trigger click on pressing `Space`.\n   *\n   * @default true\n   */\n  clickOnSpace?: boolean\n  /**\n   * Whether or not to focus the element when it is clicked.\n   * If `true`, the element will receive focus upon click.\n   *\n   * @default true\n   */\n  focusOnClick?: boolean\n  /**\n   * The ref for the element.\n   */\n  ref?: Ref<HTMLElement>\n}\n\nconst isValidElement = (\n  ev: KeyboardEvent | KeyboardEvent[\"nativeEvent\"],\n): boolean => {\n  const { tagName, isContentEditable } = ev.target as HTMLElement\n\n  return (\n    tagName !== \"INPUT\" && tagName !== \"TEXTAREA\" && isContentEditable !== true\n  )\n}\n\nexport const useClickable = <\n  Y extends HTMLElement = HTMLElement,\n  M extends HTMLAttributes<Y> = Dict,\n>(\n  {\n    ref,\n    isDisabled,\n    isFocusable,\n    clickOnEnter = true,\n    clickOnSpace = true,\n    focusOnClick = true,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onKeyDown,\n    onKeyUp,\n    tabIndex: _tabIndex,\n    onMouseOver,\n    onMouseLeave,\n    ...props\n  }: UseClickableProps<Y, M> = {} as UseClickableProps<Y, M>,\n) => {\n  const [isButton, setIsButton] = useState<boolean>(true)\n  const [isPressed, setIsPressed] = useState<boolean>(false)\n\n  const listeners = useEventListeners()\n\n  const tabIndex = isButton ? _tabIndex : _tabIndex || 0\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const refCb = (node: any) => {\n    if (!node) return\n\n    if (node.tagName !== \"BUTTON\") setIsButton(false)\n  }\n\n  const handleClick = useCallback(\n    (ev: MouseEvent<Y>) => {\n      if (isDisabled) {\n        ev.stopPropagation()\n        ev.preventDefault()\n\n        return\n      }\n\n      if (focusOnClick) ev.currentTarget.focus()\n      onClick?.(ev)\n    },\n    [isDisabled, focusOnClick, onClick],\n  )\n\n  const onDocumentKeyUp = useCallback(\n    (ev: KeyboardEvent<Y>) => {\n      if (isPressed && isValidElement(ev)) {\n        ev.preventDefault()\n        ev.stopPropagation()\n\n        setIsPressed(false)\n\n        listeners.remove(document, \"keyup\", onDocumentKeyUp, false)\n      }\n    },\n    [isPressed, listeners],\n  )\n\n  const handleKeyDown = useCallback(\n    (ev: KeyboardEvent<Y>) => {\n      onKeyDown?.(ev)\n\n      if (isDisabled || ev.defaultPrevented || ev.metaKey) return\n\n      if (!isValidElement(ev.nativeEvent) || isButton) return\n\n      if (clickOnSpace && ev.key === \" \") {\n        ev.preventDefault()\n        setIsPressed(true)\n      }\n\n      if (clickOnEnter && ev.key === \"Enter\") {\n        ev.preventDefault()\n        ev.currentTarget.click()\n      }\n\n      listeners.add(document, \"keyup\", onDocumentKeyUp, false)\n    },\n    [\n      isDisabled,\n      isButton,\n      onKeyDown,\n      clickOnEnter,\n      clickOnSpace,\n      listeners,\n      onDocumentKeyUp,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (ev: KeyboardEvent<Y>) => {\n      onKeyUp?.(ev)\n\n      if (isDisabled || ev.defaultPrevented || ev.metaKey) return\n\n      if (!isValidElement(ev.nativeEvent) || isButton) return\n\n      if (clickOnSpace && ev.key === \" \") {\n        ev.preventDefault()\n        setIsPressed(false)\n\n        ev.currentTarget.click()\n      }\n    },\n    [clickOnSpace, isButton, isDisabled, onKeyUp],\n  )\n\n  const onDocumentMouseUp = useCallback(\n    (ev: MouseEvent<Y>) => {\n      if (ev.button !== 0) return\n\n      setIsPressed(false)\n\n      listeners.remove(document, \"mouseup\", onDocumentMouseUp, false)\n    },\n    [listeners],\n  )\n\n  const handleMouseDown = useCallback(\n    (ev: MouseEvent<Y>) => {\n      if (ev.button !== 0) return\n\n      if (isDisabled) {\n        ev.stopPropagation()\n        ev.preventDefault()\n\n        return\n      }\n\n      if (!isButton) setIsPressed(true)\n\n      ev.currentTarget.focus({ preventScroll: true })\n\n      listeners.add(document, \"mouseup\", onDocumentMouseUp, false)\n\n      onMouseDown?.(ev)\n    },\n    [isDisabled, isButton, onMouseDown, listeners, onDocumentMouseUp],\n  )\n\n  const handleMouseUp = useCallback(\n    (ev: MouseEvent<Y>) => {\n      if (ev.button !== 0) return\n\n      if (!isButton) setIsPressed(false)\n\n      onMouseUp?.(ev)\n    },\n    [onMouseUp, isButton],\n  )\n\n  const handleMouseOver = useCallback(\n    (ev: MouseEvent<Y>) => {\n      if (isDisabled) {\n        ev.preventDefault()\n\n        return\n      }\n\n      onMouseOver?.(ev)\n    },\n    [isDisabled, onMouseOver],\n  )\n\n  const handleMouseLeave = useCallback(\n    (ev: MouseEvent<Y>) => {\n      if (isPressed) {\n        ev.preventDefault()\n\n        setIsPressed(false)\n      }\n\n      onMouseLeave?.(ev)\n    },\n    [isPressed, onMouseLeave],\n  )\n\n  if (isButton) {\n    return {\n      ...props,\n      ref: mergeRefs(ref, refCb),\n      type: \"button\",\n      \"aria-disabled\": trulyDisabled ? undefined : isDisabled,\n      disabled: trulyDisabled,\n      onClick: handleClick,\n      onMouseDown,\n      onMouseUp,\n      onKeyUp,\n      onKeyDown,\n      onMouseOver,\n      onMouseLeave,\n    }\n  } else {\n    return {\n      ...props,\n      ref: mergeRefs(ref, refCb),\n      role: \"button\",\n      \"data-active\": dataAttr(isPressed),\n      \"aria-disabled\": isDisabled ? (\"true\" as const) : undefined,\n      tabIndex: trulyDisabled ? undefined : tabIndex,\n      onClick: handleClick,\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onKeyUp: handleKeyUp,\n      onKeyDown: handleKeyDown,\n      onMouseOver: handleMouseOver,\n      onMouseLeave: handleMouseLeave,\n    }\n  }\n}\n\nexport type UseClickableReturn = ReturnType<typeof useClickable>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
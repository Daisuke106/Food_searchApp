{"ast":null,"code":"\"use client\";\n\n// src/index.ts\nimport { useTheme } from \"@yamada-ui/core\";\nimport { createdDom } from \"@yamada-ui/utils\";\nimport { useState, useMemo, useEffect } from \"react\";\nvar useBreakpoint = () => {\n  const {\n    theme\n  } = useTheme();\n  if (!theme) throw Error(\"useBreakpoint: `theme` is undefined. Seems you forgot to wrap your app in `<UIProvider />`\");\n  const breakpoints = theme.__breakpoints;\n  if (!breakpoints) throw Error(\"useBreakpoint: `breakpoints` is undefined. Seems you forgot to put theme in `breakpoints`\");\n  const queries = useMemo(() => breakpoints.queries.map(_ref => {\n    let {\n      breakpoint: breakpoint2,\n      minMaxQuery\n    } = _ref;\n    var _a;\n    return {\n      breakpoint: breakpoint2,\n      query: (_a = minMaxQuery == null ? void 0 : minMaxQuery.replace(\"@media screen and \", \"\")) != null ? _a : \"\"\n    };\n  }), [breakpoints]);\n  const [breakpoint, setBreakpoint] = useState(() => {\n    const isBrowser = createdDom();\n    if (!isBrowser) return \"base\";\n    for (const {\n      breakpoint: breakpoint2,\n      query\n    } of queries) {\n      const mql = window.matchMedia(query);\n      if (mql.matches) return breakpoint2;\n    }\n  });\n  useEffect(() => {\n    const observer = queries.map(_ref2 => {\n      let {\n        breakpoint: breakpoint2,\n        query\n      } = _ref2;\n      const mql = window.matchMedia(query);\n      const onChange = e => {\n        if (e.matches) setBreakpoint(breakpoint2);\n      };\n      if (typeof mql.addEventListener === \"function\") mql.addEventListener(\"change\", onChange);\n      return () => {\n        if (typeof mql.removeEventListener === \"function\") mql.removeEventListener(\"change\", onChange);\n      };\n    });\n    return () => {\n      observer.forEach(unobserve => unobserve());\n    };\n  }, [queries]);\n  return breakpoint;\n};\nvar useBreakpointValue = values => {\n  const {\n    theme\n  } = useTheme();\n  const breakpoint = useBreakpoint();\n  return getBreakpointValue(values)(theme, breakpoint);\n};\nvar getBreakpointValue = values => (theme, breakpoint) => {\n  var _a;\n  if (!theme) throw Error(\"useBreakpoint: `theme` is undefined. Seems you forgot to wrap your app in `<UIProvider />`\");\n  const breakpoints = (_a = theme.__breakpoints) == null ? void 0 : _a.keys;\n  if (!breakpoints) throw Error(\"useBreakpoint: `breakpoints` is undefined. Seems you forgot to put theme in `breakpoints`\");\n  const currentIndex = breakpoints.indexOf(breakpoint);\n  for (let i = currentIndex; 0 < i; i--) {\n    const nextBreakpoint = breakpoints[i];\n    if (values.hasOwnProperty(nextBreakpoint)) {\n      return values[nextBreakpoint];\n    }\n  }\n  return values.base;\n};\nexport { getBreakpointValue, useBreakpoint, useBreakpointValue };","map":{"version":3,"names":["useTheme","createdDom","useState","useMemo","useEffect","useBreakpoint","theme","Error","breakpoints","__breakpoints","queries","map","_ref","breakpoint","breakpoint2","minMaxQuery","_a","query","replace","setBreakpoint","isBrowser","mql","window","matchMedia","matches","observer","_ref2","onChange","e","addEventListener","removeEventListener","forEach","unobserve","useBreakpointValue","values","getBreakpointValue","keys","currentIndex","indexOf","i","nextBreakpoint","hasOwnProperty","base"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\use-breakpoint\\src\\index.ts"],"sourcesContent":["import type { Theme, ResponsiveObject, StyledTheme } from \"@yamada-ui/core\"\nimport { useTheme } from \"@yamada-ui/core\"\nimport { createdDom } from \"@yamada-ui/utils\"\nimport { useState, useMemo, useEffect } from \"react\"\n\n/**\n * `useBreakpoint` is a custom hook that returns the current breakpoint.\n * This hook monitors changes in the window size and returns the appropriate value.\n *\n * @see Docs https://yamada-ui.com/hooks/use-breakpoint\n */\nexport const useBreakpoint = () => {\n  const { theme } = useTheme()\n\n  if (!theme)\n    throw Error(\n      \"useBreakpoint: `theme` is undefined. Seems you forgot to wrap your app in `<UIProvider />`\",\n    )\n\n  const breakpoints = theme.__breakpoints\n\n  if (!breakpoints)\n    throw Error(\n      \"useBreakpoint: `breakpoints` is undefined. Seems you forgot to put theme in `breakpoints`\",\n    )\n\n  const queries = useMemo(\n    () =>\n      breakpoints.queries.map(({ breakpoint, minMaxQuery }) => ({\n        breakpoint,\n        query: minMaxQuery?.replace(\"@media screen and \", \"\") ?? \"\",\n      })),\n    [breakpoints],\n  )\n\n  const [breakpoint, setBreakpoint] = useState(() => {\n    const isBrowser = createdDom()\n\n    if (!isBrowser) return \"base\"\n\n    for (const { breakpoint, query } of queries) {\n      const mql = window.matchMedia(query)\n\n      if (mql.matches) return breakpoint\n    }\n  })\n\n  useEffect(() => {\n    const observer = queries.map(({ breakpoint, query }): (() => void) => {\n      const mql = window.matchMedia(query)\n\n      const onChange = (e: MediaQueryListEvent) => {\n        if (e.matches) setBreakpoint(breakpoint)\n      }\n\n      if (typeof mql.addEventListener === \"function\")\n        mql.addEventListener(\"change\", onChange)\n\n      return () => {\n        if (typeof mql.removeEventListener === \"function\")\n          mql.removeEventListener(\"change\", onChange)\n      }\n    })\n\n    return () => {\n      observer.forEach((unobserve) => unobserve())\n    }\n  }, [queries])\n\n  return breakpoint as Theme[\"breakpoints\"]\n}\n\n/**\n * `useBreakpointValue` is a custom hook that returns the value of the current breakpoint from the provided object.\n * This hook monitors changes in the window size and returns the appropriate value.\n *\n * @see Docs https://yamada-ui.com/hooks/use-breakpoint-value\n */\nexport const useBreakpointValue = <T extends any>(\n  values: ResponsiveObject<T>,\n): T => {\n  const { theme } = useTheme()\n  const breakpoint = useBreakpoint()\n\n  return getBreakpointValue<T>(values)(theme, breakpoint)\n}\n\nexport const getBreakpointValue =\n  <T extends any>(values: ResponsiveObject<T>) =>\n  (theme: StyledTheme, breakpoint: Theme[\"breakpoints\"]): T => {\n    if (!theme)\n      throw Error(\n        \"useBreakpoint: `theme` is undefined. Seems you forgot to wrap your app in `<UIProvider />`\",\n      )\n\n    const breakpoints = theme.__breakpoints?.keys\n\n    if (!breakpoints)\n      throw Error(\n        \"useBreakpoint: `breakpoints` is undefined. Seems you forgot to put theme in `breakpoints`\",\n      )\n\n    const currentIndex = breakpoints.indexOf(breakpoint)\n\n    for (let i = currentIndex; 0 < i; i--) {\n      const nextBreakpoint = breakpoints[i]\n\n      if (values.hasOwnProperty(nextBreakpoint)) {\n        return values[nextBreakpoint] as T\n      }\n    }\n\n    return values.base as T\n  }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\n// src/index.ts\nimport { getOwnerDocument, useCallbackRef } from \"@yamada-ui/utils\";\nimport { useEffect, useRef } from \"react\";\nvar useOutsideClick = ({\n  ref,\n  handler,\n  enabled = true\n}) => {\n  const handlerRef = useCallbackRef(handler);\n  const state = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  useEffect(() => {\n    if (!enabled) return;\n    const onPointerDown = ev => {\n      if (isValidEvent(ev, ref)) state.current.isPointerDown = true;\n    };\n    const onMouseUp = ev => {\n      if (state.current.ignoreEmulatedMouseEvents) {\n        state.current.ignoreEmulatedMouseEvents = false;\n        return;\n      }\n      if (state.current.isPointerDown && handler && isValidEvent(ev, ref)) {\n        state.current.isPointerDown = false;\n        handlerRef(ev);\n      }\n    };\n    const onTouchEnd = ev => {\n      state.current.ignoreEmulatedMouseEvents = true;\n      if (handler && state.current.isPointerDown && isValidEvent(ev, ref)) {\n        state.current.isPointerDown = false;\n        handlerRef(ev);\n      }\n    };\n    const doc = getOwnerDocument(ref.current);\n    doc.addEventListener(\"mousedown\", onPointerDown, true);\n    doc.addEventListener(\"mouseup\", onMouseUp, true);\n    doc.addEventListener(\"touchstart\", onPointerDown, true);\n    doc.addEventListener(\"touchend\", onTouchEnd, true);\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true);\n      doc.removeEventListener(\"mouseup\", onMouseUp, true);\n      doc.removeEventListener(\"touchstart\", onPointerDown, true);\n      doc.removeEventListener(\"touchend\", onTouchEnd, true);\n    };\n  }, [handler, ref, handlerRef, state, enabled]);\n};\nvar isValidEvent = (ev, ref) => {\n  var _a;\n  const target = ev.target;\n  if (\"button\" in ev && ev.button > 0) return false;\n  if (target) {\n    if (!getOwnerDocument(target).contains(target)) return false;\n  }\n  return !((_a = ref.current) == null ? void 0 : _a.contains(target));\n};\nexport { useOutsideClick };","map":{"version":3,"names":["getOwnerDocument","useCallbackRef","useEffect","useRef","useOutsideClick","ref","handler","enabled","handlerRef","state","isPointerDown","ignoreEmulatedMouseEvents","onPointerDown","ev","isValidEvent","current","onMouseUp","onTouchEnd","doc","addEventListener","removeEventListener","_a","target","button","contains"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\use-outside-click\\src\\index.ts"],"sourcesContent":["import { getOwnerDocument, useCallbackRef } from \"@yamada-ui/utils\"\nimport type { RefObject } from \"react\"\nimport { useEffect, useRef } from \"react\"\n\nexport type UseOutsideClickProps = {\n  enabled?: boolean\n  ref: React.RefObject<HTMLElement>\n  handler?: (ev: Event) => void\n}\n\n/**\n * `useOutsideClick` is a custom hook that detects click events outside of an element.\n *\n * @see Docs https://yamada-ui.com/hooks/use-outside-click\n */\nexport const useOutsideClick = ({\n  ref,\n  handler,\n  enabled = true,\n}: UseOutsideClickProps) => {\n  const handlerRef = useCallbackRef(handler)\n\n  const state = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n  })\n\n  useEffect(() => {\n    if (!enabled) return\n\n    const onPointerDown = (ev: MouseEvent | TouchEvent) => {\n      if (isValidEvent(ev, ref)) state.current.isPointerDown = true\n    }\n\n    const onMouseUp = (ev: MouseEvent) => {\n      if (state.current.ignoreEmulatedMouseEvents) {\n        state.current.ignoreEmulatedMouseEvents = false\n\n        return\n      }\n\n      if (state.current.isPointerDown && handler && isValidEvent(ev, ref)) {\n        state.current.isPointerDown = false\n\n        handlerRef(ev)\n      }\n    }\n\n    const onTouchEnd = (ev: TouchEvent) => {\n      state.current.ignoreEmulatedMouseEvents = true\n\n      if (handler && state.current.isPointerDown && isValidEvent(ev, ref)) {\n        state.current.isPointerDown = false\n\n        handlerRef(ev)\n      }\n    }\n\n    const doc = getOwnerDocument(ref.current)\n\n    doc.addEventListener(\"mousedown\", onPointerDown, true)\n    doc.addEventListener(\"mouseup\", onMouseUp, true)\n    doc.addEventListener(\"touchstart\", onPointerDown, true)\n    doc.addEventListener(\"touchend\", onTouchEnd, true)\n\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true)\n      doc.removeEventListener(\"mouseup\", onMouseUp, true)\n      doc.removeEventListener(\"touchstart\", onPointerDown, true)\n      doc.removeEventListener(\"touchend\", onTouchEnd, true)\n    }\n  }, [handler, ref, handlerRef, state, enabled])\n}\n\nconst isValidEvent = (\n  ev: MouseEvent | TouchEvent,\n  ref: RefObject<HTMLElement>,\n) => {\n  const target = ev.target as HTMLElement\n\n  if (\"button\" in ev && ev.button > 0) return false\n\n  if (target) if (!getOwnerDocument(target).contains(target)) return false\n\n  return !ref.current?.contains(target)\n}\n"],"mappings":";;;AAAA,SAASA,gBAAA,EAAkBC,cAAA,QAAsB;AAEjD,SAASC,SAAA,EAAWC,MAAA,QAAc;AAa3B,IAAMC,eAAA,GAAkBA,CAAC;EAC9BC,GAAA;EACAC,OAAA;EACAC,OAAA,GAAU;AACZ,MAA4B;EAC1B,MAAMC,UAAA,GAAaP,cAAA,CAAeK,OAAO;EAEzC,MAAMG,KAAA,GAAQN,MAAA,CAAO;IACnBO,aAAA,EAAe;IACfC,yBAAA,EAA2B;EAC7B,CAAC;EAEDT,SAAA,CAAU,MAAM;IACd,IAAI,CAACK,OAAA,EAAS;IAEd,MAAMK,aAAA,GAAiBC,EAAA,IAAgC;MACrD,IAAIC,YAAA,CAAaD,EAAA,EAAIR,GAAG,GAAGI,KAAA,CAAMM,OAAA,CAAQL,aAAA,GAAgB;IAC3D;IAEA,MAAMM,SAAA,GAAaH,EAAA,IAAmB;MACpC,IAAIJ,KAAA,CAAMM,OAAA,CAAQJ,yBAAA,EAA2B;QAC3CF,KAAA,CAAMM,OAAA,CAAQJ,yBAAA,GAA4B;QAE1C;MACF;MAEA,IAAIF,KAAA,CAAMM,OAAA,CAAQL,aAAA,IAAiBJ,OAAA,IAAWQ,YAAA,CAAaD,EAAA,EAAIR,GAAG,GAAG;QACnEI,KAAA,CAAMM,OAAA,CAAQL,aAAA,GAAgB;QAE9BF,UAAA,CAAWK,EAAE;MACf;IACF;IAEA,MAAMI,UAAA,GAAcJ,EAAA,IAAmB;MACrCJ,KAAA,CAAMM,OAAA,CAAQJ,yBAAA,GAA4B;MAE1C,IAAIL,OAAA,IAAWG,KAAA,CAAMM,OAAA,CAAQL,aAAA,IAAiBI,YAAA,CAAaD,EAAA,EAAIR,GAAG,GAAG;QACnEI,KAAA,CAAMM,OAAA,CAAQL,aAAA,GAAgB;QAE9BF,UAAA,CAAWK,EAAE;MACf;IACF;IAEA,MAAMK,GAAA,GAAMlB,gBAAA,CAAiBK,GAAA,CAAIU,OAAO;IAExCG,GAAA,CAAIC,gBAAA,CAAiB,aAAaP,aAAA,EAAe,IAAI;IACrDM,GAAA,CAAIC,gBAAA,CAAiB,WAAWH,SAAA,EAAW,IAAI;IAC/CE,GAAA,CAAIC,gBAAA,CAAiB,cAAcP,aAAA,EAAe,IAAI;IACtDM,GAAA,CAAIC,gBAAA,CAAiB,YAAYF,UAAA,EAAY,IAAI;IAEjD,OAAO,MAAM;MACXC,GAAA,CAAIE,mBAAA,CAAoB,aAAaR,aAAA,EAAe,IAAI;MACxDM,GAAA,CAAIE,mBAAA,CAAoB,WAAWJ,SAAA,EAAW,IAAI;MAClDE,GAAA,CAAIE,mBAAA,CAAoB,cAAcR,aAAA,EAAe,IAAI;MACzDM,GAAA,CAAIE,mBAAA,CAAoB,YAAYH,UAAA,EAAY,IAAI;IACtD;EACF,GAAG,CAACX,OAAA,EAASD,GAAA,EAAKG,UAAA,EAAYC,KAAA,EAAOF,OAAO,CAAC;AAC/C;AAEA,IAAMO,YAAA,GAAeA,CACnBD,EAAA,EACAR,GAAA,KACG;EA7EL,IAAAgB,EAAA;EA8EE,MAAMC,MAAA,GAAST,EAAA,CAAGS,MAAA;EAElB,IAAI,YAAYT,EAAA,IAAMA,EAAA,CAAGU,MAAA,GAAS,GAAG,OAAO;EAE5C,IAAID,MAAA;IAAQ,IAAI,CAACtB,gBAAA,CAAiBsB,MAAM,EAAEE,QAAA,CAASF,MAAM,GAAG,OAAO;EAAA;EAEnE,OAAO,GAACD,EAAA,GAAAhB,GAAA,CAAIU,OAAA,KAAJ,gBAAAM,EAAA,CAAaG,QAAA,CAASF,MAAA;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
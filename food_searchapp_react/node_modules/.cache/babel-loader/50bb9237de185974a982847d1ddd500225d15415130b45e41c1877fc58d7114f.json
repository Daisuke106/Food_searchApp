{"ast":null,"code":"\"use client\";\n\n// src/index.ts\nimport { useCallbackRef } from \"@yamada-ui/utils\";\nimport { useCallback, useEffect, useRef } from \"react\";\nvar useEventListener = (target, event, handler, options) => {\n  const listener = useCallbackRef(handler);\n  useEffect(() => {\n    const el = typeof target === \"function\" ? target() : target != null ? target : document;\n    if (!handler || !el) return;\n    el.addEventListener(event, listener, options);\n    return () => {\n      el.removeEventListener(event, listener, options);\n    };\n  }, [event, target, options, listener, handler]);\n  return () => {\n    const el = typeof target === \"function\" ? target() : target != null ? target : document;\n    el == null ? void 0 : el.removeEventListener(event, listener, options);\n  };\n};\nvar useEventListeners = () => {\n  const listeners = useRef( /* @__PURE__ */new Map());\n  const currentListeners = listeners.current;\n  const add = useCallback((el, event, listener, options) => {\n    listeners.current.set(listener, {\n      event,\n      el,\n      options\n    });\n    el.addEventListener(event, listener, options);\n  }, []);\n  const remove = useCallback((el, event, listener, options) => {\n    el.removeEventListener(event, listener, options);\n    listeners.current.delete(listener);\n  }, []);\n  useEffect(() => () => {\n    currentListeners.forEach((_ref, key) => {\n      let {\n        el,\n        event,\n        options\n      } = _ref;\n      return remove(el, event, key, options);\n    });\n  }, [remove, currentListeners]);\n  return {\n    add,\n    remove\n  };\n};\nexport { useEventListener, useEventListeners };","map":{"version":3,"names":["useCallbackRef","useCallback","useEffect","useRef","useEventListener","target","event","handler","options","listener","el","document","addEventListener","removeEventListener","useEventListeners","listeners","Map","currentListeners","current","add","set","remove","delete","forEach","_ref","key"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\use-event-listener\\src\\index.ts"],"sourcesContent":["import { useCallbackRef } from \"@yamada-ui/utils\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\ntype Events =\n  | keyof DocumentEventMap\n  | keyof WindowEventMap\n  | keyof GlobalEventHandlersEventMap\ntype Target = EventTarget | null | (() => EventTarget | null)\ntype Options = boolean | AddEventListenerOptions\ntype Handler<E extends Events> = E extends keyof DocumentEventMap\n  ? (event: DocumentEventMap[E]) => void\n  : E extends keyof WindowEventMap\n    ? (event: WindowEventMap[E]) => void\n    : E extends keyof GlobalEventHandlersEventMap\n      ? (event: GlobalEventHandlersEventMap[E]) => void\n      : ((event: Event) => void) | undefined\n\nexport const useEventListener = <E extends Events>(\n  target: Target,\n  event: E,\n  handler: Handler<E>,\n  options?: Options,\n) => {\n  const listener = useCallbackRef(handler)\n\n  useEffect(() => {\n    const el = typeof target === \"function\" ? target() : target ?? document\n\n    if (!handler || !el) return\n\n    el.addEventListener(\n      event,\n      listener as EventListenerOrEventListenerObject,\n      options,\n    )\n\n    return () => {\n      el.removeEventListener(\n        event,\n        listener as EventListenerOrEventListenerObject,\n        options,\n      )\n    }\n  }, [event, target, options, listener, handler])\n\n  return () => {\n    const el = typeof target === \"function\" ? target() : target ?? document\n\n    el?.removeEventListener(\n      event,\n      listener as EventListenerOrEventListenerObject,\n      options,\n    )\n  }\n}\n\nexport const useEventListeners = () => {\n  const listeners = useRef(new Map())\n  const currentListeners = listeners.current\n\n  const add = useCallback(\n    <E extends Events>(\n      el: EventTarget,\n      event: E,\n      listener: any,\n      options: boolean | AddEventListenerOptions,\n    ) => {\n      listeners.current.set(listener, { event, el, options })\n\n      el.addEventListener(\n        event,\n        listener as EventListenerOrEventListenerObject,\n        options,\n      )\n    },\n    [],\n  )\n\n  const remove = useCallback(\n    <E extends Events>(\n      el: EventTarget,\n      event: E,\n      listener: any,\n      options: boolean | EventListenerOptions,\n    ) => {\n      el.removeEventListener(\n        event,\n        listener as EventListenerOrEventListenerObject,\n        options,\n      )\n\n      listeners.current.delete(listener)\n    },\n    [],\n  )\n\n  useEffect(\n    () => () => {\n      currentListeners.forEach(({ el, event, options }, key) =>\n        remove(el, event, key, options),\n      )\n    },\n    [remove, currentListeners],\n  )\n\n  return { add, remove }\n}\n"],"mappings":";;;AAAA,SAASA,cAAA,QAAsB;AAC/B,SAASC,WAAA,EAAaC,SAAA,EAAWC,MAAA,QAAc;AAgBxC,IAAMC,gBAAA,GAAmBA,CAC9BC,MAAA,EACAC,KAAA,EACAC,OAAA,EACAC,OAAA,KACG;EACH,MAAMC,QAAA,GAAWT,cAAA,CAAeO,OAAO;EAEvCL,SAAA,CAAU,MAAM;IACd,MAAMQ,EAAA,GAAK,OAAOL,MAAA,KAAW,aAAaA,MAAA,CAAO,IAAIA,MAAA,WAAAA,MAAA,GAAUM,QAAA;IAE/D,IAAI,CAACJ,OAAA,IAAW,CAACG,EAAA,EAAI;IAErBA,EAAA,CAAGE,gBAAA,CACDN,KAAA,EACAG,QAAA,EACAD,OACF;IAEA,OAAO,MAAM;MACXE,EAAA,CAAGG,mBAAA,CACDP,KAAA,EACAG,QAAA,EACAD,OACF;IACF;EACF,GAAG,CAACF,KAAA,EAAOD,MAAA,EAAQG,OAAA,EAASC,QAAA,EAAUF,OAAO,CAAC;EAE9C,OAAO,MAAM;IACX,MAAMG,EAAA,GAAK,OAAOL,MAAA,KAAW,aAAaA,MAAA,CAAO,IAAIA,MAAA,WAAAA,MAAA,GAAUM,QAAA;IAE/DD,EAAA,oBAAAA,EAAA,CAAIG,mBAAA,CACFP,KAAA,EACAG,QAAA,EACAD,OAAA;EAEJ;AACF;AAEO,IAAMM,iBAAA,GAAoBA,CAAA,KAAM;EACrC,MAAMC,SAAA,GAAYZ,MAAA,EAAO,mBAAIa,GAAA,CAAI,CAAC;EAClC,MAAMC,gBAAA,GAAmBF,SAAA,CAAUG,OAAA;EAEnC,MAAMC,GAAA,GAAMlB,WAAA,CACV,CACES,EAAA,EACAJ,KAAA,EACAG,QAAA,EACAD,OAAA,KACG;IACHO,SAAA,CAAUG,OAAA,CAAQE,GAAA,CAAIX,QAAA,EAAU;MAAEH,KAAA;MAAOI,EAAA;MAAIF;IAAQ,CAAC;IAEtDE,EAAA,CAAGE,gBAAA,CACDN,KAAA,EACAG,QAAA,EACAD,OACF;EACF,GACA,EACF;EAEA,MAAMa,MAAA,GAASpB,WAAA,CACb,CACES,EAAA,EACAJ,KAAA,EACAG,QAAA,EACAD,OAAA,KACG;IACHE,EAAA,CAAGG,mBAAA,CACDP,KAAA,EACAG,QAAA,EACAD,OACF;IAEAO,SAAA,CAAUG,OAAA,CAAQI,MAAA,CAAOb,QAAQ;EACnC,GACA,EACF;EAEAP,SAAA,CACE,MAAM,MAAM;IACVe,gBAAA,CAAiBM,OAAA,CAAQ,CAAAC,IAAA,EAAyBC,GAAA;MAAA,IAAxB;QAAEf,EAAA;QAAIJ,KAAA;QAAOE;MAAQ,IAAAgB,IAAA;MAAA,OAC7CH,MAAA,CAAOX,EAAA,EAAIJ,KAAA,EAAOmB,GAAA,EAAKjB,OAAO;IAAA,CAChC;EACF,GACA,CAACa,MAAA,EAAQJ,gBAAgB,CAC3B;EAEA,OAAO;IAAEE,GAAA;IAAKE;EAAO;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\n// src/container.tsx\nimport { ui, forwardRef, useComponentStyle, omitThemeProps } from \"@yamada-ui/core\";\nimport { cx } from \"@yamada-ui/utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef((props, ref) => {\n  const [styles, mergedProps] = useComponentStyle(\"Container\", props);\n  const {\n    className,\n    centerContent,\n    ...rest\n  } = omitThemeProps(mergedProps);\n  const css = useMemo(() => ({\n    alignItems: centerContent ? \"center\" : void 0,\n    ...styles\n  }), [centerContent, styles]);\n  return /* @__PURE__ */jsx(ui.section, {\n    ref,\n    className: cx(\"ui-container\", className),\n    __css: css,\n    ...rest\n  });\n});\nexport { Container };","map":{"version":3,"names":["ui","forwardRef","useComponentStyle","omitThemeProps","cx","useMemo","jsx","Container","props","ref","styles","mergedProps","className","centerContent","rest","css","alignItems","section","__css"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\layouts\\src\\container.tsx"],"sourcesContent":["import type { HTMLUIProps, ThemeProps, CSSUIObject } from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useMemo } from \"react\"\n\ntype ContainerOptions = {\n  /**\n   * If `true`, container will center its children regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\nexport type ContainerProps = HTMLUIProps<\"section\"> &\n  ThemeProps<\"Container\"> &\n  ContainerOptions\n\n/**\n * `Container` is a component used as a general division element. By default, it renders the `section` element.\n *\n * @see Docs https://yamada-ui.com/components/layouts/container\n */\nexport const Container = forwardRef<ContainerProps, \"section\">((props, ref) => {\n  const [styles, mergedProps] = useComponentStyle(\"Container\", props)\n  const { className, centerContent, ...rest } = omitThemeProps(mergedProps)\n\n  const css: CSSUIObject = useMemo(\n    () => ({\n      alignItems: centerContent ? \"center\" : undefined,\n      ...styles,\n    }),\n    [centerContent, styles],\n  )\n\n  return (\n    <ui.section\n      ref={ref}\n      className={cx(\"ui-container\", className)}\n      __css={css}\n      {...rest}\n    />\n  )\n})\n"],"mappings":";;;AACA,SACEA,EAAA,EACAC,UAAA,EACAC,iBAAA,EACAC,cAAA,QACK;AACP,SAASC,EAAA,QAAU;AACnB,SAASC,OAAA,QAAe;AAiCpB,SAAAC,GAAA;AAbG,IAAMC,SAAA,GAAYN,UAAA,CAAsC,CAACO,KAAA,EAAOC,GAAA,KAAQ;EAC7E,MAAM,CAACC,MAAA,EAAQC,WAAW,IAAIT,iBAAA,CAAkB,aAAaM,KAAK;EAClE,MAAM;IAAEI,SAAA;IAAWC,aAAA;IAAe,GAAGC;EAAK,IAAIX,cAAA,CAAeQ,WAAW;EAExE,MAAMI,GAAA,GAAmBV,OAAA,CACvB,OAAO;IACLW,UAAA,EAAYH,aAAA,GAAgB,WAAW;IACvC,GAAGH;EACL,IACA,CAACG,aAAA,EAAeH,MAAM,CACxB;EAEA,OACE,eAAAJ,GAAA,CAACN,EAAA,CAAGiB,OAAA,EAAH;IACCR,GAAA;IACAG,SAAA,EAAWR,EAAA,CAAG,gBAAgBQ,SAAS;IACvCM,KAAA,EAAOH,GAAA;IACN,GAAGD;EAAA,CACN;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\nimport { ColorSwatch } from \"./chunk-UQWAM6TA.mjs\";\nimport { useColorSelectorContext } from \"./chunk-5QT7SRA4.mjs\";\n\n// src/color-selector-swatches.tsx\nimport { forwardRef, ui } from \"@yamada-ui/core\";\nimport { cx, replaceObject } from \"@yamada-ui/utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ColorSelectorSwatches = forwardRef(({\n  className,\n  swatchesLabel,\n  swatches,\n  swatchesContainerProps,\n  swatchProps,\n  swatchesColumns,\n  ...rest\n}, ref) => {\n  const {\n    getSwatchProps,\n    readOnly,\n    styles\n  } = useColorSelectorContext();\n  const css = {\n    display: \"grid\",\n    gridTemplateColumns: replaceObject(swatchesColumns, value => value != null ? `repeat(${value}, minmax(0, 1fr))` : void 0),\n    ...styles.swatches\n  };\n  return (swatches == null ? void 0 : swatches.length) ? /* @__PURE__ */jsxs(ui.div, {\n    ...swatchesContainerProps,\n    children: [swatchesLabel ? /* @__PURE__ */jsx(ui.p, {\n      className: \"ui-color-selector__swatches__label\",\n      __css: {\n        ...styles.swatchesLabel\n      },\n      children: swatchesLabel\n    }) : null, /* @__PURE__ */jsx(ui.div, {\n      ref,\n      className: cx(\"ui-color-selector__swatches\", className),\n      __css: css,\n      ...rest,\n      children: swatches.map(color => /* @__PURE__ */jsx(ColorSwatch, {\n        as: \"button\",\n        __css: {\n          boxSize: \"100%\",\n          pointerEvents: readOnly ? \"none\" : void 0,\n          ...styles.swatch\n        },\n        ...getSwatchProps({\n          color,\n          ...swatchProps\n        })\n      }, color))\n    })]\n  }) : null;\n});\nexport { ColorSelectorSwatches };","map":{"version":3,"names":["forwardRef","ui","cx","replaceObject","jsx","jsxs","ColorSelectorSwatches","className","swatchesLabel","swatches","swatchesContainerProps","swatchProps","swatchesColumns","rest","ref","getSwatchProps","readOnly","styles","useColorSelectorContext","css","display","gridTemplateColumns","value","length","div","children","p","__css","map","color","ColorSwatch","as","boxSize","pointerEvents","swatch"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\color-picker\\src\\color-selector-swatches.tsx"],"sourcesContent":["import { forwardRef, ui } from \"@yamada-ui/core\"\nimport type { CSSUIObject, HTMLUIProps, Token } from \"@yamada-ui/core\"\nimport { cx, replaceObject } from \"@yamada-ui/utils\"\nimport type { ReactNode } from \"react\"\nimport type { ColorSwatchProps } from \"./color-swatch\"\nimport { ColorSwatch } from \"./color-swatch\"\nimport { useColorSelectorContext } from \"./use-color-selector\"\n\ntype ColorSelectorSwatchesOptions = {\n  /**\n   * The swatches label to use.\n   */\n  swatchesLabel?: ReactNode\n  /**\n   * An array of colors in one of the supported formats.\n   * Used to render swatches list below the color selector.\n   */\n  swatches?: string[]\n  /**\n   * Number of swatches grid columns.\n   *\n   * @default 7\n   */\n  swatchesColumns?: Token<number>\n  /**\n   * Props for the color swatch component.\n   */\n  swatchProps?: ColorSwatchProps\n  /**\n   * Props for the swatches container element.\n   */\n  swatchesContainerProps?: Omit<HTMLUIProps<\"div\">, \"children\">\n}\n\nexport type ColorSelectorSwatchesProps = Omit<HTMLUIProps<\"div\">, \"children\"> &\n  ColorSelectorSwatchesOptions\n\nexport const ColorSelectorSwatches = forwardRef<\n  ColorSelectorSwatchesProps,\n  \"div\"\n>(\n  (\n    {\n      className,\n      swatchesLabel,\n      swatches,\n      swatchesContainerProps,\n      swatchProps,\n      swatchesColumns,\n      ...rest\n    },\n    ref,\n  ) => {\n    const { getSwatchProps, readOnly, styles } = useColorSelectorContext()\n\n    const css: CSSUIObject = {\n      display: \"grid\",\n      gridTemplateColumns: replaceObject(swatchesColumns, (value) =>\n        value != null ? `repeat(${value}, minmax(0, 1fr))` : undefined,\n      ) as CSSUIObject[\"gridTemplateColumns\"],\n      ...styles.swatches,\n    }\n\n    return swatches?.length ? (\n      <ui.div {...swatchesContainerProps}>\n        {swatchesLabel ? (\n          <ui.p\n            className=\"ui-color-selector__swatches__label\"\n            __css={{ ...styles.swatchesLabel }}\n          >\n            {swatchesLabel}\n          </ui.p>\n        ) : null}\n\n        <ui.div\n          ref={ref}\n          className={cx(\"ui-color-selector__swatches\", className)}\n          __css={css}\n          {...rest}\n        >\n          {swatches.map((color) => (\n            <ColorSwatch\n              as=\"button\"\n              key={color}\n              __css={{\n                boxSize: \"100%\",\n                pointerEvents: readOnly ? \"none\" : undefined,\n                ...styles.swatch,\n              }}\n              {...getSwatchProps({ color, ...swatchProps })}\n            />\n          ))}\n        </ui.div>\n      </ui.div>\n    ) : null\n  },\n)\n"],"mappings":";;;;;;AAAA,SAASA,UAAA,EAAYC,EAAA,QAAU;AAE/B,SAASC,EAAA,EAAIC,aAAA,QAAqB;AA8D5B,SAEIC,GAAA,EAFJC,IAAA;AA3BC,IAAMC,qBAAA,GAAwBN,UAAA,CAInC,CACE;EACEO,SAAA;EACAC,aAAA;EACAC,QAAA;EACAC,sBAAA;EACAC,WAAA;EACAC,eAAA;EACA,GAAGC;AACL,GACAC,GAAA,KACG;EACH,MAAM;IAAEC,cAAA;IAAgBC,QAAA;IAAUC;EAAO,IAAIC,uBAAA,CAAwB;EAErE,MAAMC,GAAA,GAAmB;IACvBC,OAAA,EAAS;IACTC,mBAAA,EAAqBlB,aAAA,CAAcS,eAAA,EAAkBU,KAAA,IACnDA,KAAA,IAAS,OAAO,UAAUA,KAAK,sBAAsB,MACvD;IACA,GAAGL,MAAA,CAAOR;EACZ;EAEA,QAAOA,QAAA,oBAAAA,QAAA,CAAUc,MAAA,IACf,eAAAlB,IAAA,CAACJ,EAAA,CAAGuB,GAAA,EAAH;IAAQ,GAAGd,sBAAA;IACTe,QAAA,GAAAjB,aAAA,GACC,eAAAJ,GAAA,CAACH,EAAA,CAAGyB,CAAA,EAAH;MACCnB,SAAA,EAAU;MACVoB,KAAA,EAAO;QAAE,GAAGV,MAAA,CAAOT;MAAc;MAEhCiB,QAAA,EAAAjB;IAAA,CACH,IACE,MAEJ,eAAAJ,GAAA,CAACH,EAAA,CAAGuB,GAAA,EAAH;MACCV,GAAA;MACAP,SAAA,EAAWL,EAAA,CAAG,+BAA+BK,SAAS;MACtDoB,KAAA,EAAOR,GAAA;MACN,GAAGN,IAAA;MAEHY,QAAA,EAAAhB,QAAA,CAASmB,GAAA,CAAKC,KAAA,IACb,eAAAzB,GAAA,CAAC0B,WAAA;QACCC,EAAA,EAAG;QAEHJ,KAAA,EAAO;UACLK,OAAA,EAAS;UACTC,aAAA,EAAejB,QAAA,GAAW,SAAS;UACnC,GAAGC,MAAA,CAAOiB;QACZ;QACC,GAAGnB,cAAA,CAAe;UAAEc,KAAA;UAAO,GAAGlB;QAAY,CAAC;MAAA,GANvCkB,KAOP,CACD;IAAA,CACH;EAAA,CACF,IACE;AACN,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
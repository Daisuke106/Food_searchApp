{"ast":null,"code":"// src/event.ts\nvar isMouseEvent = ev => {\n  const win = getEventWindow(ev);\n  if (typeof win.PointerEvent !== \"undefined\" && ev instanceof win.PointerEvent) return !!(ev.pointerType === \"mouse\");\n  return ev instanceof win.MouseEvent;\n};\nvar isTouchEvent = ev => !!ev.touches;\nvar isMultiTouchEvent = ev => isTouchEvent(ev) && ev.touches.length > 1;\nvar getEventWindow = ev => {\n  var _a;\n  return (_a = ev.view) != null ? _a : window;\n};\nvar pointFromTouch = (e, type = \"page\") => {\n  const point = e.touches[0] || e.changedTouches[0];\n  return {\n    x: point[`${type}X`],\n    y: point[`${type}Y`]\n  };\n};\nvar pointFromMouse = (point, type = \"page\") => ({\n  x: point[`${type}X`],\n  y: point[`${type}Y`]\n});\nvar getEventPoint = (ev, type = \"page\") => isTouchEvent(ev) ? pointFromTouch(ev, type) : pointFromMouse(ev, type);\nvar addDomEvent = (target, type, cb, options) => {\n  target.addEventListener(type, cb, options);\n  return () => {\n    target.removeEventListener(type, cb, options);\n  };\n};\nvar filter = cb => ev => {\n  const isMouse = isMouseEvent(ev);\n  if (!isMouse || isMouse && ev.button === 0) cb(ev);\n};\nvar wrap = (cb, filterPrimary = false) => {\n  const listener = ev => cb(ev, {\n    point: getEventPoint(ev)\n  });\n  const fn = filterPrimary ? filter(listener) : listener;\n  return fn;\n};\nvar addPointerEvent = (target, type, cb, options) => addDomEvent(target, type, wrap(cb, type === \"pointerdown\"), options);\nexport { isMouseEvent, isTouchEvent, isMultiTouchEvent, getEventWindow, pointFromTouch, pointFromMouse, getEventPoint, addDomEvent, addPointerEvent };","map":{"version":3,"names":["isMouseEvent","ev","win","getEventWindow","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","isMultiTouchEvent","length","_a","view","window","pointFromTouch","e","type","point","changedTouches","x","y","pointFromMouse","getEventPoint","addDomEvent","target","cb","options","addEventListener","removeEventListener","filter","isMouse","button","wrap","filterPrimary","listener","fn","addPointerEvent"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\utils\\src\\event.ts"],"sourcesContent":["export type AnyPointerEvent = MouseEvent | TouchEvent | PointerEvent\n\nexport type PointType = \"page\" | \"client\"\n\nexport type Point = {\n  x: number\n  y: number\n}\n\nexport type PointerEventInfo = {\n  point: Point\n}\n\nexport type MixedEventListener = (\n  e: AnyPointerEvent,\n  info: PointerEventInfo,\n) => void\n\nexport const isMouseEvent = (ev: any): ev is MouseEvent => {\n  const win = getEventWindow(ev)\n\n  if (typeof win.PointerEvent !== \"undefined\" && ev instanceof win.PointerEvent)\n    return !!(ev.pointerType === \"mouse\")\n\n  return ev instanceof win.MouseEvent\n}\n\nexport const isTouchEvent = (ev: AnyPointerEvent): ev is TouchEvent =>\n  !!(ev as TouchEvent).touches\n\nexport const isMultiTouchEvent = (ev: AnyPointerEvent) =>\n  isTouchEvent(ev) && ev.touches.length > 1\n\nexport const getEventWindow = (ev: Event): typeof globalThis =>\n  ((ev as UIEvent).view ?? window) as unknown as typeof globalThis\n\nexport const pointFromTouch = (e: TouchEvent, type: PointType = \"page\") => {\n  const point = e.touches[0] || e.changedTouches[0]\n\n  return { x: point[`${type}X`], y: point[`${type}Y`] }\n}\n\nexport const pointFromMouse = (\n  point: MouseEvent | PointerEvent,\n  type: PointType = \"page\",\n) => ({\n  x: point[`${type}X`],\n  y: point[`${type}Y`],\n})\n\nexport const getEventPoint = (ev: AnyPointerEvent, type: PointType = \"page\") =>\n  isTouchEvent(ev) ? pointFromTouch(ev, type) : pointFromMouse(ev, type)\n\nexport const addDomEvent = (\n  target: EventTarget,\n  type: string,\n  cb: EventListener,\n  options?: AddEventListenerOptions,\n) => {\n  target.addEventListener(type, cb, options)\n\n  return () => {\n    target.removeEventListener(type, cb, options)\n  }\n}\n\nconst filter =\n  (cb: EventListener): EventListener =>\n  (ev: Event) => {\n    const isMouse = isMouseEvent(ev)\n\n    if (!isMouse || (isMouse && ev.button === 0)) cb(ev)\n  }\n\nconst wrap = (cb: MixedEventListener, filterPrimary = false): EventListener => {\n  const listener = (ev: any) => cb(ev, { point: getEventPoint(ev) })\n\n  const fn = filterPrimary ? filter(listener) : listener\n\n  return fn as EventListener\n}\n\nexport const addPointerEvent = (\n  target: EventTarget,\n  type: string,\n  cb: MixedEventListener,\n  options?: AddEventListenerOptions,\n) => addDomEvent(target, type, wrap(cb, type === \"pointerdown\"), options)\n"],"mappings":";AAkBO,IAAMA,YAAA,GAAgBC,EAAA,IAA8B;EACzD,MAAMC,GAAA,GAAMC,cAAA,CAAeF,EAAE;EAE7B,IAAI,OAAOC,GAAA,CAAIE,YAAA,KAAiB,eAAeH,EAAA,YAAcC,GAAA,CAAIE,YAAA,EAC/D,OAAO,CAAC,EAAEH,EAAA,CAAGI,WAAA,KAAgB;EAE/B,OAAOJ,EAAA,YAAcC,GAAA,CAAII,UAAA;AAC3B;AAEO,IAAMC,YAAA,GAAgBN,EAAA,IAC3B,CAAC,CAAEA,EAAA,CAAkBO,OAAA;AAEhB,IAAMC,iBAAA,GAAqBR,EAAA,IAChCM,YAAA,CAAaN,EAAE,KAAKA,EAAA,CAAGO,OAAA,CAAQE,MAAA,GAAS;AAEnC,IAAMP,cAAA,GAAkBF,EAAA,IAA8B;EAjC7D,IAAAU,EAAA;EAkCI,QAAAA,EAAA,GAAAV,EAAA,CAAeW,IAAA,KAAf,OAAAD,EAAA,GAAuBE,MAAA;AAAA;AAEpB,IAAMC,cAAA,GAAiBA,CAACC,CAAA,EAAeC,IAAA,GAAkB,WAAW;EACzE,MAAMC,KAAA,GAAQF,CAAA,CAAEP,OAAA,CAAQ,CAAC,KAAKO,CAAA,CAAEG,cAAA,CAAe,CAAC;EAEhD,OAAO;IAAEC,CAAA,EAAGF,KAAA,CAAM,GAAGD,IAAI,GAAG;IAAGI,CAAA,EAAGH,KAAA,CAAM,GAAGD,IAAI,GAAG;EAAE;AACtD;AAEO,IAAMK,cAAA,GAAiBA,CAC5BJ,KAAA,EACAD,IAAA,GAAkB,YACd;EACJG,CAAA,EAAGF,KAAA,CAAM,GAAGD,IAAI,GAAG;EACnBI,CAAA,EAAGH,KAAA,CAAM,GAAGD,IAAI,GAAG;AACrB;AAEO,IAAMM,aAAA,GAAgBA,CAACrB,EAAA,EAAqBe,IAAA,GAAkB,WACnET,YAAA,CAAaN,EAAE,IAAIa,cAAA,CAAeb,EAAA,EAAIe,IAAI,IAAIK,cAAA,CAAepB,EAAA,EAAIe,IAAI;AAEhE,IAAMO,WAAA,GAAcA,CACzBC,MAAA,EACAR,IAAA,EACAS,EAAA,EACAC,OAAA,KACG;EACHF,MAAA,CAAOG,gBAAA,CAAiBX,IAAA,EAAMS,EAAA,EAAIC,OAAO;EAEzC,OAAO,MAAM;IACXF,MAAA,CAAOI,mBAAA,CAAoBZ,IAAA,EAAMS,EAAA,EAAIC,OAAO;EAC9C;AACF;AAEA,IAAMG,MAAA,GACHJ,EAAA,IACAxB,EAAA,IAAc;EACb,MAAM6B,OAAA,GAAU9B,YAAA,CAAaC,EAAE;EAE/B,IAAI,CAAC6B,OAAA,IAAYA,OAAA,IAAW7B,EAAA,CAAG8B,MAAA,KAAW,GAAIN,EAAA,CAAGxB,EAAE;AACrD;AAEF,IAAM+B,IAAA,GAAOA,CAACP,EAAA,EAAwBQ,aAAA,GAAgB,UAAyB;EAC7E,MAAMC,QAAA,GAAYjC,EAAA,IAAYwB,EAAA,CAAGxB,EAAA,EAAI;IAAEgB,KAAA,EAAOK,aAAA,CAAcrB,EAAE;EAAE,CAAC;EAEjE,MAAMkC,EAAA,GAAKF,aAAA,GAAgBJ,MAAA,CAAOK,QAAQ,IAAIA,QAAA;EAE9C,OAAOC,EAAA;AACT;AAEO,IAAMC,eAAA,GAAkBA,CAC7BZ,MAAA,EACAR,IAAA,EACAS,EAAA,EACAC,OAAA,KACGH,WAAA,CAAYC,MAAA,EAAQR,IAAA,EAAMgB,IAAA,CAAKP,EAAA,EAAIT,IAAA,KAAS,aAAa,GAAGU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\n// src/index.ts\nimport { useTheme, generateAnimation, css } from \"@yamada-ui/core\";\nimport { useBoolean } from \"@yamada-ui/use-boolean\";\nimport { useEventListener } from \"@yamada-ui/use-event-listener\";\nimport { isArray, isUndefined, runIfFunc, getOwnerWindow } from \"@yamada-ui/utils\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nvar useAnimation = styles => {\n  const {\n    theme\n  } = useTheme();\n  if (isArray(styles)) {\n    return styles.map(style => generateAnimation(style, theme, css)).join(\", \");\n  } else {\n    return generateAnimation(styles, theme, css);\n  }\n};\nvar useDynamicAnimation = (arrayOrObj, init) => {\n  const {\n    theme\n  } = useTheme();\n  const keys = useRef(!isUndefined(init) ? isArray(init) ? init.map(String) : String(init) : void 0);\n  const cache = useRef( /* @__PURE__ */new Map());\n  const [animations, setAnimations] = useState(() => {\n    var _a;\n    for (const [key, styles] of Object.entries(arrayOrObj)) {\n      if (cache.current.has(key)) return;\n      if (isArray(styles)) {\n        cache.current.set(key, styles.map(style => generateAnimation(style, theme, css)).join(\", \"));\n      } else {\n        cache.current.set(key, generateAnimation(styles, theme, css));\n      }\n    }\n    if (isArray(keys.current)) {\n      return keys.current.map(key => cache.current.get(key)).join(\", \");\n    } else {\n      return cache.current.get((_a = keys.current) != null ? _a : \"\");\n    }\n  });\n  const setAnimation = useCallback(keysOrFunc => {\n    var _a;\n    const args = (() => {\n      if (!isUndefined(keys.current) && isArray(arrayOrObj)) {\n        return isArray(keys.current) ? keys.current.map(Number) : Number(keys.current);\n      } else {\n        return keys.current;\n      }\n    })();\n    const keyOrArray = runIfFunc(keysOrFunc, args);\n    keys.current = isArray(keyOrArray) ? keyOrArray.map(String) : String(keyOrArray);\n    if (isArray(keys.current)) {\n      setAnimations(keys.current.map(key => cache.current.get(key)).join(\", \"));\n    } else {\n      setAnimations(cache.current.get((_a = keys.current) != null ? _a : \"\"));\n    }\n  }, [arrayOrObj]);\n  return [animations, setAnimation];\n};\nvar useAnimationObserver = ({\n  isOpen,\n  ref\n}) => {\n  const [mounted, setMounted] = useState(isOpen);\n  const [flg, {\n    on\n  }] = useBoolean();\n  useEffect(() => {\n    if (flg) return;\n    setMounted(isOpen);\n    on();\n  }, [isOpen, flg, on]);\n  useEventListener(() => ref.current, \"animationend\", () => setMounted(isOpen));\n  const hidden = isOpen ? false : !mounted;\n  return {\n    present: !hidden,\n    onAnimationComplete() {\n      var _a;\n      const ownerWindow = getOwnerWindow(ref.current);\n      const ev = new ownerWindow.CustomEvent(\"animationend\", {\n        bubbles: true\n      });\n      (_a = ref.current) == null ? void 0 : _a.dispatchEvent(ev);\n    }\n  };\n};\nexport { useAnimation, useAnimationObserver, useDynamicAnimation };","map":{"version":3,"names":["useTheme","generateAnimation","css","useBoolean","useEventListener","isArray","isUndefined","runIfFunc","getOwnerWindow","useCallback","useEffect","useRef","useState","useAnimation","styles","theme","map","style","join","useDynamicAnimation","arrayOrObj","init","keys","String","cache","Map","animations","setAnimations","_a","key","Object","entries","current","has","set","get","setAnimation","keysOrFunc","args","Number","keyOrArray","useAnimationObserver","isOpen","ref","mounted","setMounted","flg","on","hidden","present","onAnimationComplete","ownerWindow","ev","CustomEvent","bubbles","dispatchEvent"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\use-animation\\src\\index.ts"],"sourcesContent":["import type { AnimationStyle, Theme } from \"@yamada-ui/core\"\nimport { useTheme, generateAnimation, css } from \"@yamada-ui/core\"\nimport { useBoolean } from \"@yamada-ui/use-boolean\"\nimport { useEventListener } from \"@yamada-ui/use-event-listener\"\nimport {\n  isArray,\n  isUndefined,\n  runIfFunc,\n  getOwnerWindow,\n} from \"@yamada-ui/utils\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\n\ntype Styles =\n  | AnimationStyle\n  | Theme[\"animations\"]\n  | (AnimationStyle | Theme[\"animations\"])[]\n\n/**\n * `useAnimation` is a custom hook that implements animations similar to CSS `keyframes`.\n *\n * @see Docs https://yamada-ui.com/hooks/use-animation\n */\nexport const useAnimation = (styles: Styles): string => {\n  const { theme } = useTheme()\n\n  if (isArray(styles)) {\n    return styles\n      .map((style) => generateAnimation(style, theme, css))\n      .join(\", \")\n  } else {\n    return generateAnimation(styles, theme, css)\n  }\n}\n\n/**\n * `useDynamicAnimation` is a custom hook used to switch animations.\n *\n * @see Docs https://yamada-ui.com/hooks/use-dynamic-animation\n */\nexport const useDynamicAnimation = <\n  T extends (AnimationStyle | Theme[\"animations\"])[] | Record<string, Styles>,\n>(\n  arrayOrObj: T,\n  init?: keyof T | (keyof T)[],\n): [\n  string | undefined,\n  (\n    key:\n      | keyof T\n      | (keyof T)[]\n      | ((key: keyof T | (keyof T)[] | undefined) => keyof T | (keyof T)[]),\n  ) => void,\n] => {\n  const { theme } = useTheme()\n\n  const keys = useRef<string | string[] | undefined>(\n    !isUndefined(init)\n      ? isArray(init)\n        ? init.map(String)\n        : String(init)\n      : undefined,\n  )\n  const cache = useRef<Map<string, string>>(new Map<string, string>())\n\n  const [animations, setAnimations] = useState<string | undefined>(() => {\n    for (const [key, styles] of Object.entries(arrayOrObj)) {\n      if (cache.current.has(key)) return\n\n      if (isArray(styles)) {\n        cache.current.set(\n          key,\n          styles\n            .map((style) => generateAnimation(style, theme, css))\n            .join(\", \"),\n        )\n      } else {\n        cache.current.set(key, generateAnimation(styles, theme, css))\n      }\n    }\n\n    if (isArray(keys.current)) {\n      return keys.current.map((key) => cache.current.get(key)).join(\", \")\n    } else {\n      return cache.current.get(keys.current ?? \"\")\n    }\n  })\n\n  const setAnimation = useCallback(\n    (\n      keysOrFunc:\n        | keyof T\n        | (keyof T)[]\n        | ((key: keyof T | (keyof T)[] | undefined) => keyof T | (keyof T)[]),\n    ) => {\n      const args = (() => {\n        if (!isUndefined(keys.current) && isArray(arrayOrObj)) {\n          return isArray(keys.current)\n            ? keys.current.map(Number)\n            : Number(keys.current)\n        } else {\n          return keys.current\n        }\n      })() as keyof T | (keyof T)[] | undefined\n\n      const keyOrArray = runIfFunc(keysOrFunc, args)\n\n      keys.current = isArray(keyOrArray)\n        ? keyOrArray.map(String)\n        : String(keyOrArray)\n\n      if (isArray(keys.current)) {\n        setAnimations(\n          keys.current.map((key) => cache.current.get(key)).join(\", \"),\n        )\n      } else {\n        setAnimations(cache.current.get(keys.current ?? \"\"))\n      }\n    },\n    [arrayOrObj],\n  )\n\n  return [animations, setAnimation]\n}\n\nexport type UseAnimationObserverProps = {\n  isOpen: boolean\n  ref: React.RefObject<HTMLElement>\n}\n\nexport const useAnimationObserver = ({\n  isOpen,\n  ref,\n}: UseAnimationObserverProps) => {\n  const [mounted, setMounted] = useState(isOpen)\n  const [flg, { on }] = useBoolean()\n\n  useEffect(() => {\n    if (flg) return\n\n    setMounted(isOpen)\n    on()\n  }, [isOpen, flg, on])\n\n  useEventListener(\n    () => ref.current,\n    \"animationend\",\n    () => setMounted(isOpen),\n  )\n\n  const hidden = isOpen ? false : !mounted\n\n  return {\n    present: !hidden,\n    onAnimationComplete() {\n      const ownerWindow = getOwnerWindow(ref.current)\n      const ev = new ownerWindow.CustomEvent(\"animationend\", {\n        bubbles: true,\n      })\n\n      ref.current?.dispatchEvent(ev)\n    },\n  }\n}\n\nexport type ReturnUseAnimationObserver = ReturnType<typeof useAnimationObserver>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
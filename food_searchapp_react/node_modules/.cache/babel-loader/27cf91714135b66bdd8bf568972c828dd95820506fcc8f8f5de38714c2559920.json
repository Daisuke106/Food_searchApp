{"ast":null,"code":"\"use client\";\n\nimport { useColorSelectorContext } from \"./chunk-5QT7SRA4.mjs\";\n\n// src/color-selector-channels.tsx\nimport { forwardRef, ui } from \"@yamada-ui/core\";\nimport { Input } from \"@yamada-ui/input\";\nimport { cx } from \"@yamada-ui/utils\";\nimport { useId } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar ColorSelectorChannels = forwardRef((_ref, ref) => {\n  let {\n    className,\n    channelProps,\n    ...rest\n  } = _ref;\n  const {\n    withAlpha,\n    channels,\n    getChannelProps,\n    styles\n  } = useColorSelectorContext();\n  const css = {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(\".concat(withAlpha ? \"4\" : \"3\", \", 1fr)\"),\n    ...styles.channels\n  };\n  return /* @__PURE__ */jsx(ui.div, {\n    ref,\n    className: cx(\"ui-color-selector__channels\", className),\n    __css: css,\n    ...rest,\n    children: channels.map(_ref2 => {\n      let {\n        label,\n        space,\n        value,\n        min,\n        max\n      } = _ref2;\n      return /* @__PURE__ */jsx(ColorSelectorChannel, {\n        channelLabel: label,\n        ...getChannelProps({\n          ...channelProps,\n          space,\n          value,\n          min,\n          max\n        })\n      }, label);\n    })\n  });\n});\nvar ColorSelectorChannel = forwardRef((_ref3, ref) => {\n  let {\n    className,\n    channelLabel,\n    ...rest\n  } = _ref3;\n  const id = useId();\n  let {\n    size,\n    disabled,\n    readOnly,\n    styles\n  } = useColorSelectorContext();\n  if (size === \"full\") size = \"lg\";\n  const css = {\n    ...styles.channel\n  };\n  return /* @__PURE__ */jsxs(ui.div, {\n    className: cx(\"ui-color-selector__channel\", className),\n    children: [channelLabel ? /* @__PURE__ */jsx(ui.label, {\n      htmlFor: id,\n      style: {\n        cursor: disabled ? \"not-allowed\" : void 0\n      },\n      __css: {\n        display: \"block\",\n        pointerEvents: readOnly ? \"none\" : void 0,\n        ...styles.channelLabel\n      },\n      children: channelLabel\n    }) : null, /* @__PURE__ */jsx(Input, {\n      ref,\n      id,\n      size,\n      __css: css,\n      ...rest\n    })]\n  });\n});\nexport { ColorSelectorChannels, ColorSelectorChannel };","map":{"version":3,"names":["forwardRef","ui","Input","cx","useId","jsx","jsxs","ColorSelectorChannels","_ref","ref","className","channelProps","rest","withAlpha","channels","getChannelProps","styles","useColorSelectorContext","css","display","gridTemplateColumns","concat","div","__css","children","map","_ref2","label","space","value","min","max","ColorSelectorChannel","channelLabel","_ref3","id","size","disabled","readOnly","channel","htmlFor","style","cursor","pointerEvents"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\color-picker\\src\\color-selector-channels.tsx"],"sourcesContent":["import { forwardRef, ui } from \"@yamada-ui/core\"\nimport type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { Input } from \"@yamada-ui/input\"\nimport type { InputProps } from \"@yamada-ui/input\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useId, type ReactNode } from \"react\"\nimport { useColorSelectorContext } from \"./use-color-selector\"\n\ntype ColorSelectorChannelsOptions = {\n  /**\n   * Props for the chancel component.\n   */\n  channelProps?: Omit<ColorSelectorChannelProps, \"channelLabel\">\n}\n\nexport type ColorSelectorChannelsProps = Omit<HTMLUIProps<\"div\">, \"children\"> &\n  ColorSelectorChannelsOptions\n\nexport const ColorSelectorChannels = forwardRef<\n  ColorSelectorChannelsProps,\n  \"div\"\n>(({ className, channelProps, ...rest }, ref) => {\n  const { withAlpha, channels, getChannelProps, styles } =\n    useColorSelectorContext()\n\n  const css: CSSUIObject = {\n    display: \"grid\",\n    gridTemplateColumns: `repeat(${withAlpha ? \"4\" : \"3\"}, 1fr)`,\n    ...styles.channels,\n  }\n\n  return (\n    <ui.div\n      ref={ref}\n      className={cx(\"ui-color-selector__channels\", className)}\n      __css={css}\n      {...rest}\n    >\n      {channels.map(({ label, space, value, min, max }) => (\n        <ColorSelectorChannel\n          key={label}\n          channelLabel={label}\n          {...getChannelProps({ ...channelProps, space, value, min, max })}\n        />\n      ))}\n    </ui.div>\n  )\n})\n\ntype ColorSelectorChannelOptions = {\n  channelLabel?: ReactNode\n}\n\nexport type ColorSelectorChannelProps = Omit<\n  InputProps,\n  \"type\" | \"pattern\" | \"min\" | \"max\" | \"value\" | \"defaultValue\"\n> &\n  ColorSelectorChannelOptions\n\nexport const ColorSelectorChannel = forwardRef<\n  ColorSelectorChannelProps,\n  \"input\"\n>(({ className, channelLabel, ...rest }, ref) => {\n  const id = useId()\n  let { size, disabled, readOnly, styles } = useColorSelectorContext()\n\n  if (size === \"full\") size = \"lg\"\n\n  const css: CSSUIObject = { ...styles.channel }\n\n  return (\n    <ui.div className={cx(\"ui-color-selector__channel\", className)}>\n      {channelLabel ? (\n        <ui.label\n          htmlFor={id}\n          style={{ cursor: disabled ? \"not-allowed\" : undefined }}\n          __css={{\n            display: \"block\",\n            pointerEvents: readOnly ? \"none\" : undefined,\n            ...styles.channelLabel,\n          }}\n        >\n          {channelLabel}\n        </ui.label>\n      ) : null}\n\n      <Input ref={ref} id={id} size={size} __css={css} {...rest} />\n    </ui.div>\n  )\n})\n"],"mappings":";;;;;AAAA,SAASA,UAAA,EAAYC,EAAA,QAAU;AAE/B,SAASC,KAAA,QAAa;AAEtB,SAASC,EAAA,QAAU;AACnB,SAASC,KAAA,QAA6B;AAkC9B,SAAAC,GAAA,EAgCJC,IAAA,QAhCI;AArBD,IAAMC,qBAAA,GAAwBP,UAAA,CAGnC,CAAAQ,IAAA,EAAuCC,GAAA,KAAQ;EAAA,IAA9C;IAAEC,SAAA;IAAWC,YAAA;IAAc,GAAGC;EAAK,IAAAJ,IAAA;EACpC,MAAM;IAAEK,SAAA;IAAWC,QAAA;IAAUC,eAAA;IAAiBC;EAAO,IACnDC,uBAAA,CAAwB;EAE1B,MAAMC,GAAA,GAAmB;IACvBC,OAAA,EAAS;IACTC,mBAAA,YAAAC,MAAA,CAA+BR,SAAA,GAAY,MAAM,GAAG;IACpD,GAAGG,MAAA,CAAOF;EACZ;EAEA,OACE,eAAAT,GAAA,CAACJ,EAAA,CAAGqB,GAAA,EAAH;IACCb,GAAA;IACAC,SAAA,EAAWP,EAAA,CAAG,+BAA+BO,SAAS;IACtDa,KAAA,EAAOL,GAAA;IACN,GAAGN,IAAA;IAEHY,QAAA,EAAAV,QAAA,CAASW,GAAA,CAAIC,KAAA;MAAA,IAAC;QAAEC,KAAA;QAAOC,KAAA;QAAOC,KAAA;QAAOC,GAAA;QAAKC;MAAI,IAAAL,KAAA;MAAA,OAC7C,eAAArB,GAAA,CAAC2B,oBAAA;QAECC,YAAA,EAAcN,KAAA;QACb,GAAGZ,eAAA,CAAgB;UAAE,GAAGJ,YAAA;UAAciB,KAAA;UAAOC,KAAA;UAAOC,GAAA;UAAKC;QAAI,CAAC;MAAA,GAF1DJ,KAGP,CACD;IAAA;EAAA,CACH;AAEJ,CAAC;AAYM,IAAMK,oBAAA,GAAuBhC,UAAA,CAGlC,CAAAkC,KAAA,EAAuCzB,GAAA,KAAQ;EAAA,IAA9C;IAAEC,SAAA;IAAWuB,YAAA;IAAc,GAAGrB;EAAK,IAAAsB,KAAA;EACpC,MAAMC,EAAA,GAAK/B,KAAA,CAAM;EACjB,IAAI;IAAEgC,IAAA;IAAMC,QAAA;IAAUC,QAAA;IAAUtB;EAAO,IAAIC,uBAAA,CAAwB;EAEnE,IAAImB,IAAA,KAAS,QAAQA,IAAA,GAAO;EAE5B,MAAMlB,GAAA,GAAmB;IAAE,GAAGF,MAAA,CAAOuB;EAAQ;EAE7C,OACE,eAAAjC,IAAA,CAACL,EAAA,CAAGqB,GAAA,EAAH;IAAOZ,SAAA,EAAWP,EAAA,CAAG,8BAA8BO,SAAS;IAC1Dc,QAAA,GAAAS,YAAA,GACC,eAAA5B,GAAA,CAACJ,EAAA,CAAG0B,KAAA,EAAH;MACCa,OAAA,EAASL,EAAA;MACTM,KAAA,EAAO;QAAEC,MAAA,EAAQL,QAAA,GAAW,gBAAgB;MAAU;MACtDd,KAAA,EAAO;QACLJ,OAAA,EAAS;QACTwB,aAAA,EAAeL,QAAA,GAAW,SAAS;QACnC,GAAGtB,MAAA,CAAOiB;MACZ;MAECT,QAAA,EAAAS;IAAA,CACH,IACE,MAEJ,eAAA5B,GAAA,CAACH,KAAA;MAAMO,GAAA;MAAU0B,EAAA;MAAQC,IAAA;MAAYb,KAAA,EAAOL,GAAA;MAAM,GAAGN;IAAA,CAAM;EAAA,CAC7D;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\n// src/tag.tsx\nimport { ui, forwardRef, useMultiComponentStyle, omitThemeProps } from \"@yamada-ui/core\";\nimport { Icon } from \"@yamada-ui/icon\";\nimport { useClickable } from \"@yamada-ui/use-clickable\";\nimport { cx } from \"@yamada-ui/utils\";\nimport { useRef } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Tag = forwardRef((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"Tag\", props);\n  const {\n    className,\n    leftIcon,\n    rightIcon,\n    onClose,\n    isDisabled,\n    children,\n    ...rest\n  } = omitThemeProps(mergedProps);\n  const css = {\n    maxW: \"100%\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    gap: \"fallback(1, 0.25rem)\",\n    verticalAlign: \"top\",\n    ...styles.container\n  };\n  return /* @__PURE__ */jsxs(ui.span, {\n    ref,\n    className: cx(\"ui-tag\", className),\n    __css: css,\n    ...rest,\n    children: [leftIcon, /* @__PURE__ */jsx(TagLabel, {\n      children\n    }), rightIcon, onClose ? /* @__PURE__ */jsx(CloseButton, {\n      isDisabled,\n      onClick: onClose,\n      children: /* @__PURE__ */jsx(CloseIcon, {})\n    }) : null]\n  });\n});\nvar TagLabel = _ref => {\n  let {\n    children,\n    ...props\n  } = _ref;\n  const [styles] = useMultiComponentStyle(\"Tag\", props);\n  const css = styles.label;\n  return /* @__PURE__ */jsx(ui.span, {\n    lineClamp: 1,\n    __css: css,\n    children\n  });\n};\nvar CloseIcon = () => {\n  return /* @__PURE__ */jsx(Icon, {\n    verticalAlign: \"inherit\",\n    viewBox: \"0 0 512 512\",\n    fontSize: \"1.125rem\",\n    children: /* @__PURE__ */jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n    })\n  });\n};\nvar CloseButton = _ref2 => {\n  let {\n    children,\n    ...props\n  } = _ref2;\n  const ref = useRef(null);\n  const [styles] = useMultiComponentStyle(\"Tag\", props);\n  const css = {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: \"0\",\n    cursor: \"pointer\",\n    ...styles.closeButton\n  };\n  const rest = useClickable({\n    ref,\n    ...props\n  });\n  return /* @__PURE__ */jsx(ui.span, {\n    \"aria-label\": \"Close tag\",\n    __css: css,\n    ...rest,\n    children\n  });\n};\nexport { Tag };","map":{"version":3,"names":["ui","forwardRef","useMultiComponentStyle","omitThemeProps","Icon","useClickable","cx","useRef","jsx","jsxs","Tag","props","ref","styles","mergedProps","className","leftIcon","rightIcon","onClose","isDisabled","children","rest","css","maxW","display","alignItems","gap","verticalAlign","container","span","__css","TagLabel","CloseButton","onClick","CloseIcon","_ref","label","lineClamp","viewBox","fontSize","fill","d","_ref2","justifyContent","outline","cursor","closeButton"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\tag\\src\\tag.tsx"],"sourcesContent":["import type { HTMLUIProps, ThemeProps, CSSUIObject } from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport { Icon } from \"@yamada-ui/icon\"\nimport { useClickable } from \"@yamada-ui/use-clickable\"\nimport { cx } from \"@yamada-ui/utils\"\nimport type {\n  FC,\n  HTMLAttributes,\n  MouseEventHandler,\n  ReactElement,\n  ReactNode,\n} from \"react\"\nimport { useRef } from \"react\"\n\ntype TagOptions = {\n  /**\n   * Icon to be displayed to the left of the tag.\n   */\n  leftIcon?: ReactElement\n  /**\n   * Icon to be displayed to the right of the tag.\n   */\n  rightIcon?: ReactElement\n  /**\n   * Function to be executed when the close button is clicked.\n   */\n  onClose?: MouseEventHandler<HTMLElement>\n  /**\n   * If `true`, the tag is disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n}\n\nexport type TagProps = HTMLUIProps<\"span\"> & ThemeProps<\"Tag\"> & TagOptions\n\n/**\n * `Tag` is a component used to categorize or organize items using keywords that describe them.\n *\n * @see Docs https://yamada-ui.com/components/data-display/tag\n */\nexport const Tag = forwardRef<TagProps, \"span\">((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"Tag\", props)\n  const {\n    className,\n    leftIcon,\n    rightIcon,\n    onClose,\n    isDisabled,\n    children,\n    ...rest\n  } = omitThemeProps(mergedProps)\n\n  const css: CSSUIObject = {\n    maxW: \"100%\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    gap: \"fallback(1, 0.25rem)\",\n    verticalAlign: \"top\",\n    ...styles.container,\n  }\n\n  return (\n    <ui.span\n      ref={ref}\n      className={cx(\"ui-tag\", className)}\n      __css={css}\n      {...rest}\n    >\n      {leftIcon}\n      <TagLabel>{children}</TagLabel>\n      {rightIcon}\n      {onClose ? (\n        <CloseButton isDisabled={isDisabled} onClick={onClose}>\n          <CloseIcon />\n        </CloseButton>\n      ) : null}\n    </ui.span>\n  )\n})\n\nconst TagLabel: FC<{ children: ReactNode }> = ({ children, ...props }) => {\n  const [styles] = useMultiComponentStyle(\"Tag\", props)\n  const css = styles.label\n\n  return (\n    <ui.span lineClamp={1} __css={css}>\n      {children}\n    </ui.span>\n  )\n}\n\nconst CloseIcon: FC = () => {\n  return (\n    <Icon verticalAlign=\"inherit\" viewBox=\"0 0 512 512\" fontSize=\"1.125rem\">\n      <path\n        fill=\"currentColor\"\n        d=\"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n      />\n    </Icon>\n  )\n}\n\ntype CloseButtonProps = HTMLUIProps<\"span\"> & { isDisabled?: boolean }\n\nconst CloseButton: FC<CloseButtonProps> = ({ children, ...props }) => {\n  const ref = useRef<HTMLSpanElement>(null)\n\n  const [styles] = useMultiComponentStyle(\"Tag\", props)\n\n  const css: CSSUIObject = {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: \"0\",\n    cursor: \"pointer\",\n    ...styles.closeButton,\n  }\n\n  const rest = useClickable({ ref, ...(props as HTMLAttributes<HTMLElement>) })\n\n  return (\n    <ui.span aria-label=\"Close tag\" __css={css} {...rest}>\n      {children}\n    </ui.span>\n  )\n}\n"],"mappings":";;;AACA,SACEA,EAAA,EACAC,UAAA,EACAC,sBAAA,EACAC,cAAA,QACK;AACP,SAASC,IAAA,QAAY;AACrB,SAASC,YAAA,QAAoB;AAC7B,SAASC,EAAA,QAAU;AAQnB,SAASC,MAAA,QAAc;AAoDnB,SAOEC,GAAA,EAPFC,IAAA;AAtBG,IAAMC,GAAA,GAAMT,UAAA,CAA6B,CAACU,KAAA,EAAOC,GAAA,KAAQ;EAC9D,MAAM,CAACC,MAAA,EAAQC,WAAW,IAAIZ,sBAAA,CAAuB,OAAOS,KAAK;EACjE,MAAM;IACJI,SAAA;IACAC,QAAA;IACAC,SAAA;IACAC,OAAA;IACAC,UAAA;IACAC,QAAA;IACA,GAAGC;EACL,IAAIlB,cAAA,CAAeW,WAAW;EAE9B,MAAMQ,GAAA,GAAmB;IACvBC,IAAA,EAAM;IACNC,OAAA,EAAS;IACTC,UAAA,EAAY;IACZC,GAAA,EAAK;IACLC,aAAA,EAAe;IACf,GAAGd,MAAA,CAAOe;EACZ;EAEA,OACE,eAAAnB,IAAA,CAACT,EAAA,CAAG6B,IAAA,EAAH;IACCjB,GAAA;IACAG,SAAA,EAAWT,EAAA,CAAG,UAAUS,SAAS;IACjCe,KAAA,EAAOR,GAAA;IACN,GAAGD,IAAA;IAEHD,QAAA,GAAAJ,QAAA,EACD,eAAAR,GAAA,CAACuB,QAAA;MAAUX;IAAA,CAAS,GACnBH,SAAA,EACAC,OAAA,GACC,eAAAV,GAAA,CAACwB,WAAA;MAAYb,UAAA;MAAwBc,OAAA,EAASf,OAAA;MAC5CE,QAAA,iBAAAZ,GAAA,CAAC0B,SAAA,IAAU;IAAA,CACb,IACE;EAAA,CACN;AAEJ,CAAC;AAED,IAAMH,QAAA,GAAwCI,IAAA,IAA4B;EAAA,IAA3B;IAAEf,QAAA;IAAU,GAAGT;EAAM,IAAAwB,IAAA;EAClE,MAAM,CAACtB,MAAM,IAAIX,sBAAA,CAAuB,OAAOS,KAAK;EACpD,MAAMW,GAAA,GAAMT,MAAA,CAAOuB,KAAA;EAEnB,OACE,eAAA5B,GAAA,CAACR,EAAA,CAAG6B,IAAA,EAAH;IAAQQ,SAAA,EAAW;IAAGP,KAAA,EAAOR,GAAA;IAC3BF;EAAA,CACH;AAEJ;AAEA,IAAMc,SAAA,GAAgBA,CAAA,KAAM;EAC1B,OACE,eAAA1B,GAAA,CAACJ,IAAA;IAAKuB,aAAA,EAAc;IAAUW,OAAA,EAAQ;IAAcC,QAAA,EAAS;IAC3DnB,QAAA,iBAAAZ,GAAA,CAAC;MACCgC,IAAA,EAAK;MACLC,CAAA,EAAE;IAAA,CACJ;EAAA,CACF;AAEJ;AAIA,IAAMT,WAAA,GAAoCU,KAAA,IAA4B;EAAA,IAA3B;IAAEtB,QAAA;IAAU,GAAGT;EAAM,IAAA+B,KAAA;EAC9D,MAAM9B,GAAA,GAAML,MAAA,CAAwB,IAAI;EAExC,MAAM,CAACM,MAAM,IAAIX,sBAAA,CAAuB,OAAOS,KAAK;EAEpD,MAAMW,GAAA,GAAmB;IACvBE,OAAA,EAAS;IACTC,UAAA,EAAY;IACZkB,cAAA,EAAgB;IAChBC,OAAA,EAAS;IACTC,MAAA,EAAQ;IACR,GAAGhC,MAAA,CAAOiC;EACZ;EAEA,MAAMzB,IAAA,GAAOhB,YAAA,CAAa;IAAEO,GAAA;IAAK,GAAID;EAAsC,CAAC;EAE5E,OACE,eAAAH,GAAA,CAACR,EAAA,CAAG6B,IAAA,EAAH;IAAQ,cAAW;IAAYC,KAAA,EAAOR,GAAA;IAAM,GAAGD,IAAA;IAC7CD;EAAA,CACH;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
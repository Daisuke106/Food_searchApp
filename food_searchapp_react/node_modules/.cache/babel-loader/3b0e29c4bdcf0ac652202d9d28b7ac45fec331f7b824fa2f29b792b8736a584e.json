{"ast":null,"code":"\"use client\";\n\n// src/number-input.tsx\nimport { ui, forwardRef, useMultiComponentStyle, omitThemeProps } from \"@yamada-ui/core\";\nimport { formControlProperties, useFormControlProps } from \"@yamada-ui/form-control\";\nimport { ChevronIcon } from \"@yamada-ui/icon\";\nimport { useCounter } from \"@yamada-ui/use-counter\";\nimport { useEventListener } from \"@yamada-ui/use-event-listener\";\nimport { useInterval } from \"@yamada-ui/use-interval\";\nimport { ariaAttr, createContext, cx, handlerAll, mergeRefs, pickObject, useCallbackRef, useSafeLayoutEffect, useUpdateEffect } from \"@yamada-ui/utils\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar isDefaultValidCharacter = character => /^[Ee0-9+\\-.]$/.test(character);\nvar isValidNumericKeyboardEvent = ({\n  key,\n  ctrlKey,\n  altKey,\n  metaKey\n}, isValid) => {\n  if (key == null) return true;\n  const isModifierKey = ctrlKey || altKey || metaKey;\n  const isSingleCharacterKey = key.length === 1;\n  if (!isSingleCharacterKey || isModifierKey) return true;\n  return isValid(key);\n};\nvar getStep = ({\n  ctrlKey,\n  shiftKey,\n  metaKey\n}) => {\n  let ratio = 1;\n  if (metaKey || ctrlKey) ratio = 0.1;\n  if (shiftKey) ratio = 10;\n  return ratio;\n};\nvar useNumberInput = (props = {}) => {\n  const {\n    id,\n    name,\n    value: valueProp,\n    defaultValue,\n    inputMode = \"decimal\",\n    pattern = \"[0-9]*(.[0-9]+)?\",\n    required,\n    disabled,\n    readOnly,\n    focusInputOnChange = true,\n    clampValueOnBlur = true,\n    keepWithinRange = true,\n    allowMouseWheel,\n    min = Number.MIN_SAFE_INTEGER,\n    max = Number.MAX_SAFE_INTEGER,\n    step: stepProp,\n    precision,\n    parse: parseProp,\n    format: formatProp,\n    onInvalid: onInvalidProp,\n    isValidCharacter: isValidCharacterProp,\n    getAriaValueText: getAriaValueTextProp,\n    onChange: onChangeProp,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    \"aria-invalid\": isInvalid,\n    ...rest\n  } = useFormControlProps(props);\n  const formControlProps = pickObject(rest, formControlProperties);\n  const isRequired = required;\n  const isReadOnly = readOnly;\n  const isDisabled = disabled;\n  const [isFocused, setFocused] = useState(false);\n  const isInteractive = !(readOnly || disabled);\n  const inputRef = useRef(null);\n  const inputSelectionRef = useRef(null);\n  const incrementRef = useRef(null);\n  const decrementRef = useRef(null);\n  const onFocus = useCallbackRef(handlerAll(onFocusProp, ev => {\n    var _a, _b, _c;\n    setFocused(true);\n    if (!inputSelectionRef.current) return;\n    ev.target.selectionStart = (_b = inputSelectionRef.current.start) != null ? _b : (_a = ev.currentTarget.value) == null ? void 0 : _a.length;\n    ev.currentTarget.selectionEnd = (_c = inputSelectionRef.current.end) != null ? _c : ev.currentTarget.selectionStart;\n  }));\n  const onBlur = useCallbackRef(handlerAll(onBlurProp, () => {\n    setFocused(false);\n    if (clampValueOnBlur) validateAndClamp();\n  }));\n  const onInvalid = useCallbackRef(onInvalidProp);\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  const isValidCharacter = useCallbackRef(isValidCharacterProp != null ? isValidCharacterProp : isDefaultValidCharacter);\n  const {\n    isMin,\n    isMax,\n    isOut,\n    value,\n    valueAsNumber,\n    setValue,\n    update,\n    cast,\n    ...counter\n  } = useCounter({\n    value: valueProp,\n    defaultValue,\n    step: stepProp,\n    min,\n    max,\n    precision,\n    keepWithinRange,\n    onChange: onChangeProp\n  });\n  const valueText = useMemo(() => {\n    let text = getAriaValueText == null ? void 0 : getAriaValueText(value);\n    if (text != null) return text;\n    text = value.toString();\n    return !text ? void 0 : text;\n  }, [value, getAriaValueText]);\n  const sanitize = useCallback(value2 => value2.split(\"\").filter(isValidCharacter).join(\"\"), [isValidCharacter]);\n  const parse = useCallback(value2 => {\n    var _a;\n    return (_a = parseProp == null ? void 0 : parseProp(value2)) != null ? _a : value2;\n  }, [parseProp]);\n  const format = useCallback(value2 => {\n    var _a;\n    return ((_a = formatProp == null ? void 0 : formatProp(value2)) != null ? _a : value2).toString();\n  }, [formatProp]);\n  const increment = useCallback((step = stepProp != null ? stepProp : 1) => {\n    if (isInteractive) counter.increment(step);\n  }, [isInteractive, counter, stepProp]);\n  const decrement = useCallback((step = stepProp != null ? stepProp : 1) => {\n    if (isInteractive) counter.decrement(step);\n  }, [isInteractive, counter, stepProp]);\n  const validateAndClamp = useCallback(() => {\n    let next = value;\n    if (value === \"\") return;\n    const valueStartsWithE = /^[eE]/.test(value.toString());\n    if (valueStartsWithE) {\n      setValue(\"\");\n    } else {\n      if (valueAsNumber < min) next = min;\n      if (valueAsNumber > max) next = max;\n      cast(next);\n    }\n  }, [cast, max, min, setValue, value, valueAsNumber]);\n  const onChange = useCallback(ev => {\n    if (ev.nativeEvent.isComposing) return;\n    const parsedInput = parse(ev.currentTarget.value);\n    update(sanitize(parsedInput));\n    inputSelectionRef.current = {\n      start: ev.currentTarget.selectionStart,\n      end: ev.currentTarget.selectionEnd\n    };\n  }, [parse, update, sanitize]);\n  const onKeyDown = useCallback(ev => {\n    if (ev.nativeEvent.isComposing) return;\n    if (!isValidNumericKeyboardEvent(ev, isValidCharacter)) ev.preventDefault();\n    const step = getStep(ev) * (stepProp != null ? stepProp : 1);\n    const keyMap = {\n      ArrowUp: () => increment(step),\n      ArrowDown: () => decrement(step),\n      Home: () => update(min),\n      End: () => update(max)\n    };\n    const action = keyMap[ev.key];\n    if (!action) return;\n    ev.preventDefault();\n    action(ev);\n  }, [decrement, increment, isValidCharacter, max, min, stepProp, update]);\n  const {\n    up,\n    down,\n    stop,\n    isSpinning\n  } = useSpinner(increment, decrement);\n  useAttributeObserver(incrementRef, [\"disabled\"], isSpinning, stop);\n  useAttributeObserver(decrementRef, [\"disabled\"], isSpinning, stop);\n  const focusInput = useCallback(() => {\n    if (focusInputOnChange) requestAnimationFrame(() => {\n      var _a;\n      (_a = inputRef.current) == null ? void 0 : _a.focus();\n    });\n  }, [focusInputOnChange]);\n  const eventUp = useCallback(ev => {\n    ev.preventDefault();\n    up();\n    focusInput();\n  }, [focusInput, up]);\n  const eventDown = useCallback(ev => {\n    ev.preventDefault();\n    down();\n    focusInput();\n  }, [focusInput, down]);\n  useUpdateEffect(() => {\n    if (valueAsNumber > max) {\n      onInvalid == null ? void 0 : onInvalid(\"rangeOverflow\", format(value), valueAsNumber);\n    } else if (valueAsNumber < min) {\n      onInvalid == null ? void 0 : onInvalid(\"rangeOverflow\", format(value), valueAsNumber);\n    }\n  }, [valueAsNumber, value, format, onInvalid]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return;\n    const notInSync = inputRef.current.value != value;\n    if (!notInSync) return;\n    const parsedInput = parse(inputRef.current.value);\n    setValue(sanitize(parsedInput));\n  }, [parse, sanitize]);\n  useEventListener(() => inputRef.current, \"wheel\", ev => {\n    var _a, _b;\n    const ownerDocument = (_b = (_a = inputRef.current) == null ? void 0 : _a.ownerDocument) != null ? _b : document;\n    const isFocused2 = ownerDocument.activeElement === inputRef.current;\n    if (!allowMouseWheel || !isFocused2) return;\n    ev.preventDefault();\n    const step = getStep(ev) * (stepProp != null ? stepProp : 1);\n    const direction = Math.sign(ev.deltaY);\n    if (direction === -1) {\n      increment(step);\n    } else if (direction === 1) {\n      decrement(step);\n    }\n  }, {\n    passive: false\n  });\n  const getInputProps = useCallback((props2 = {}, ref = null) => ({\n    id,\n    name,\n    type: \"text\",\n    role: \"spinbutton\",\n    inputMode,\n    pattern,\n    required,\n    disabled,\n    readOnly,\n    ...formControlProps,\n    ...props2,\n    min,\n    max,\n    step: stepProp,\n    ref: mergeRefs(inputRef, ref),\n    value: format(value),\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": Number.isNaN(valueAsNumber) ? void 0 : valueAsNumber,\n    \"aria-valuetext\": valueText,\n    \"aria-invalid\": ariaAttr(isInvalid != null ? isInvalid : isOut),\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    onChange: handlerAll(props2.onChange, onChange),\n    onKeyDown: handlerAll(props2.onKeyDown, onKeyDown),\n    onFocus: handlerAll(props2.onFocus, onFocus),\n    onBlur: handlerAll(props2.onBlur, onBlur)\n  }), [id, name, inputMode, pattern, required, disabled, readOnly, formControlProps, min, max, stepProp, format, value, valueAsNumber, valueText, isInvalid, isOut, onChange, onKeyDown, onFocus, onBlur]);\n  const getIncrementProps = useCallback((props2 = {}, ref = null) => {\n    var _a;\n    const trulyDisabled = disabled || keepWithinRange && isMax;\n    return {\n      required,\n      readOnly,\n      disabled: trulyDisabled,\n      ...formControlProps,\n      ...props2,\n      style: {\n        ...props2.style,\n        cursor: readOnly ? \"not-allowed\" : (_a = props2.style) == null ? void 0 : _a.cursor\n      },\n      ref: mergeRefs(ref, incrementRef),\n      role: \"button\",\n      tabIndex: -1,\n      onPointerDown: handlerAll(props2.onPointerDown, ev => {\n        if (ev.button === 0 && !trulyDisabled) eventUp(ev);\n      }),\n      onPointerLeave: handlerAll(props2.onPointerLeave, stop),\n      onPointerUp: handlerAll(props2.onPointerUp, stop)\n    };\n  }, [disabled, keepWithinRange, isMax, required, readOnly, formControlProps, stop, eventUp]);\n  const getDecrementProps = useCallback((props2 = {}, ref = null) => {\n    var _a;\n    const trulyDisabled = disabled || keepWithinRange && isMin;\n    return {\n      required,\n      readOnly,\n      disabled: trulyDisabled,\n      ...formControlProps,\n      ...props2,\n      style: {\n        ...props2.style,\n        cursor: readOnly ? \"not-allowed\" : (_a = props2.style) == null ? void 0 : _a.cursor\n      },\n      ref: mergeRefs(ref, decrementRef),\n      role: \"button\",\n      tabIndex: -1,\n      onPointerDown: handlerAll(props2.onPointerDown, ev => {\n        if (ev.button === 0 && !trulyDisabled) eventDown(ev);\n      }),\n      onPointerLeave: handlerAll(props2.onPointerLeave, stop),\n      onPointerUp: handlerAll(props2.onPointerUp, stop)\n    };\n  }, [disabled, keepWithinRange, isMin, required, readOnly, formControlProps, stop, eventDown]);\n  return {\n    props: rest,\n    value: format(value),\n    valueAsNumber,\n    isFocused,\n    isRequired,\n    isReadOnly,\n    isDisabled,\n    getInputProps,\n    getIncrementProps,\n    getDecrementProps\n  };\n};\nvar INTERVAL = 50;\nvar DELAY = 300;\nvar useSpinner = (increment, decrement) => {\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [action, setAction] = useState(null);\n  const [isOnce, setIsOnce] = useState(true);\n  const timeoutRef = useRef(null);\n  const removeTimeout = () => clearTimeout(timeoutRef.current);\n  useInterval(() => {\n    if (action === \"increment\") increment();\n    if (action === \"decrement\") decrement();\n  }, isSpinning ? INTERVAL : null);\n  const up = useCallback(() => {\n    if (isOnce) increment();\n    timeoutRef.current = setTimeout(() => {\n      setIsOnce(false);\n      setIsSpinning(true);\n      setAction(\"increment\");\n    }, DELAY);\n  }, [increment, isOnce]);\n  const down = useCallback(() => {\n    if (isOnce) decrement();\n    timeoutRef.current = setTimeout(() => {\n      setIsOnce(false);\n      setIsSpinning(true);\n      setAction(\"decrement\");\n    }, DELAY);\n  }, [decrement, isOnce]);\n  const stop = useCallback(() => {\n    setIsOnce(true);\n    setIsSpinning(false);\n    removeTimeout();\n  }, []);\n  useEffect(() => {\n    return () => removeTimeout();\n  }, []);\n  return {\n    up,\n    down,\n    stop,\n    isSpinning\n  };\n};\nvar useAttributeObserver = (ref, attributeFilter, enabled, func) => {\n  useEffect(() => {\n    var _a;\n    if (!ref.current || !enabled) return;\n    const ownerDocument = (_a = ref.current.ownerDocument.defaultView) != null ? _a : window;\n    const observer = new ownerDocument.MutationObserver(changes => {\n      for (const {\n        type,\n        attributeName\n      } of changes) {\n        if (type === \"attributes\" && attributeName && attributeFilter.includes(attributeName)) func();\n      }\n    });\n    observer.observe(ref.current, {\n      attributes: true,\n      attributeFilter\n    });\n    return () => observer.disconnect();\n  });\n};\nvar [NumberInputContextProvider, useNumberInputContext] = createContext({\n  strict: false,\n  name: \"NumberInputContext\"\n});\nvar NumberInput = forwardRef((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"NumberInput\", props);\n  const {\n    className,\n    isStepper = true,\n    containerProps,\n    addonProps,\n    incrementProps,\n    decrementProps,\n    ...computedProps\n  } = omitThemeProps(mergedProps);\n  const {\n    getInputProps,\n    getIncrementProps,\n    getDecrementProps,\n    props: rest\n  } = useNumberInput(computedProps);\n  const css = {\n    position: \"relative\",\n    zIndex: 0,\n    ...styles.container\n  };\n  return /* @__PURE__ */jsx(NumberInputContextProvider, {\n    value: {\n      getInputProps,\n      getIncrementProps,\n      getDecrementProps,\n      styles\n    },\n    children: /* @__PURE__ */jsxs(ui.div, {\n      className: cx(\"ui-number-input\", className),\n      __css: css,\n      ...containerProps,\n      children: [/* @__PURE__ */jsx(NumberInputField, {\n        ...getInputProps(rest, ref)\n      }), isStepper ? /* @__PURE__ */jsxs(NumberInputAddon, {\n        ...addonProps,\n        children: [/* @__PURE__ */jsx(NumberIncrementStepper, {\n          ...incrementProps\n        }), /* @__PURE__ */jsx(NumberDecrementStepper, {\n          ...decrementProps\n        })]\n      }) : null]\n    })\n  });\n});\nvar NumberInputField = forwardRef(({\n  className,\n  ...rest\n}, ref) => {\n  const {\n    styles\n  } = useNumberInputContext();\n  const css = {\n    width: \"100%\",\n    ...styles.field\n  };\n  return /* @__PURE__ */jsx(ui.input, {\n    ref,\n    className: cx(\"ui-number-input__field\", className),\n    __css: css,\n    ...rest\n  });\n});\nvar NumberInputAddon = forwardRef(({\n  className,\n  ...rest\n}, ref) => {\n  const {\n    styles\n  } = useNumberInputContext();\n  const css = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"absolute\",\n    top: \"0\",\n    insetEnd: \"0px\",\n    margin: \"1px\",\n    height: \"calc(100% - 2px)\",\n    zIndex: \"fallback(yamcha, 1)\",\n    ...styles.addon\n  };\n  return /* @__PURE__ */jsx(ui.div, {\n    ref,\n    className: cx(\"ui-number-input__addon\", className),\n    \"aria-hidden\": true,\n    __css: css,\n    ...rest\n  });\n});\nvar Stepper = ui(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flex: 1,\n    transitionProperty: \"common\",\n    transitionDuration: \"normal\",\n    userSelect: \"none\",\n    cursor: \"pointer\",\n    lineHeight: \"normal\"\n  }\n});\nvar NumberIncrementStepper = forwardRef(({\n  className,\n  children,\n  ...rest\n}, ref) => {\n  const {\n    getIncrementProps,\n    styles\n  } = useNumberInputContext();\n  const css = {\n    ...styles.stepper\n  };\n  return /* @__PURE__ */jsx(Stepper, {\n    className: cx(\"ui-number-input__stepper--up\", className),\n    ...getIncrementProps(rest, ref),\n    __css: css,\n    children: children != null ? children : /* @__PURE__ */jsx(ChevronIcon, {\n      __css: {\n        transform: \"rotate(180deg)\"\n      }\n    })\n  });\n});\nvar NumberDecrementStepper = forwardRef(({\n  className,\n  children,\n  ...rest\n}, ref) => {\n  const {\n    getDecrementProps,\n    styles\n  } = useNumberInputContext();\n  const css = {\n    ...styles.stepper\n  };\n  return /* @__PURE__ */jsx(Stepper, {\n    className: cx(\"ui-number-input__stepper--down\", className),\n    ...getDecrementProps(rest, ref),\n    __css: css,\n    children: children != null ? children : /* @__PURE__ */jsx(ChevronIcon, {})\n  });\n});\nexport { useNumberInput, NumberInput };","map":{"version":3,"names":["ui","forwardRef","useMultiComponentStyle","omitThemeProps","formControlProperties","useFormControlProps","ChevronIcon","useCounter","useEventListener","useInterval","ariaAttr","createContext","cx","handlerAll","mergeRefs","pickObject","useCallbackRef","useSafeLayoutEffect","useUpdateEffect","useCallback","useEffect","useMemo","useRef","useState","jsx","jsxs","isDefaultValidCharacter","character","test","isValidNumericKeyboardEvent","key","ctrlKey","altKey","metaKey","isValid","isModifierKey","isSingleCharacterKey","length","getStep","shiftKey","ratio","useNumberInput","props","id","name","value","valueProp","defaultValue","inputMode","pattern","required","disabled","readOnly","focusInputOnChange","clampValueOnBlur","keepWithinRange","allowMouseWheel","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","step","stepProp","precision","parse","parseProp","format","formatProp","onInvalid","onInvalidProp","isValidCharacter","isValidCharacterProp","getAriaValueText","getAriaValueTextProp","onChange","onChangeProp","onFocus","onFocusProp","onBlur","onBlurProp","isInvalid","rest","formControlProps","isRequired","isReadOnly","isDisabled","isFocused","setFocused","isInteractive","inputRef","inputSelectionRef","incrementRef","decrementRef","ev","_a","_b","_c","current","target","selectionStart","start","currentTarget","selectionEnd","end","validateAndClamp","isMin","isMax","isOut","valueAsNumber","setValue","update","cast","counter","valueText","text","toString","sanitize","value2","split","filter","join","increment","decrement","next","valueStartsWithE","nativeEvent","isComposing","parsedInput","onKeyDown","preventDefault","keyMap","ArrowUp","ArrowDown","Home","End","action","up","down","stop","isSpinning","useSpinner","useAttributeObserver","focusInput","requestAnimationFrame","focus","eventUp","eventDown","notInSync","ownerDocument","document","isFocused2","activeElement","direction","Math","sign","deltaY","passive","getInputProps","props2","ref","type","role","isNaN","autoComplete","autoCorrect","getIncrementProps","trulyDisabled","style","cursor","tabIndex","onPointerDown","button","onPointerLeave","onPointerUp","getDecrementProps","INTERVAL","DELAY","setIsSpinning","setAction","isOnce","setIsOnce","timeoutRef","removeTimeout","clearTimeout","setTimeout","attributeFilter","enabled","func","defaultView","window","observer","MutationObserver","changes","attributeName","includes","observe","attributes","disconnect","NumberInputContextProvider","useNumberInputContext","strict","NumberInput","styles","mergedProps","className","isStepper","containerProps","addonProps","incrementProps","decrementProps","computedProps","css","position","zIndex","container","children","div","__css","NumberInputField","NumberInputAddon","NumberIncrementStepper","NumberDecrementStepper","width","field","input","display","flexDirection","top","insetEnd","margin","height","addon","Stepper","baseStyle","justifyContent","alignItems","flex","transitionProperty","transitionDuration","userSelect","lineHeight","stepper","transform"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\number-input\\src\\number-input.tsx"],"sourcesContent":["import type {\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n  ColorModeToken,\n  CSS,\n} from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport type { UseFormControlProps } from \"@yamada-ui/form-control\"\nimport {\n  formControlProperties,\n  useFormControlProps,\n} from \"@yamada-ui/form-control\"\nimport { ChevronIcon } from \"@yamada-ui/icon\"\nimport type { UseCounterProps } from \"@yamada-ui/use-counter\"\nimport { useCounter } from \"@yamada-ui/use-counter\"\nimport { useEventListener } from \"@yamada-ui/use-event-listener\"\nimport { useInterval } from \"@yamada-ui/use-interval\"\nimport type { DOMAttributes, PropGetter } from \"@yamada-ui/utils\"\nimport {\n  ariaAttr,\n  createContext,\n  cx,\n  handlerAll,\n  mergeRefs,\n  pickObject,\n  useCallbackRef,\n  useSafeLayoutEffect,\n  useUpdateEffect,\n} from \"@yamada-ui/utils\"\nimport type {\n  ChangeEvent,\n  InputHTMLAttributes,\n  KeyboardEvent,\n  KeyboardEventHandler,\n} from \"react\"\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\"\n\nconst isDefaultValidCharacter = (character: string) =>\n  /^[Ee0-9+\\-.]$/.test(character)\n\nconst isValidNumericKeyboardEvent = (\n  { key, ctrlKey, altKey, metaKey }: KeyboardEvent,\n  isValid: (key: string) => boolean,\n) => {\n  if (key == null) return true\n\n  const isModifierKey = ctrlKey || altKey || metaKey\n  const isSingleCharacterKey = key.length === 1\n\n  if (!isSingleCharacterKey || isModifierKey) return true\n\n  return isValid(key)\n}\n\nconst getStep = <Y extends KeyboardEvent | WheelEvent>({\n  ctrlKey,\n  shiftKey,\n  metaKey,\n}: Y) => {\n  let ratio = 1\n\n  if (metaKey || ctrlKey) ratio = 0.1\n\n  if (shiftKey) ratio = 10\n\n  return ratio\n}\n\ntype ValidityState = \"rangeUnderflow\" | \"rangeOverflow\"\n\nexport type UseNumberInputProps = UseFormControlProps<HTMLInputElement> &\n  UseCounterProps & {\n    /**\n     * The HTML `name` attribute used for forms.\n     */\n    name?: string\n    /**\n     * Hints at the type of data that might be entered by the user.\n     * It also determines the type of keyboard shown to the user on mobile devices.\n     *\n     * @default 'decimal'\n     */\n    inputMode?: InputHTMLAttributes<any>[\"inputMode\"]\n    /**\n     * The pattern used to check the <input> element's value against on form submission.\n     *\n     * @default '[0-9]*(.[0-9]+)?'\n     */\n    pattern?: InputHTMLAttributes<any>[\"pattern\"]\n    /**\n     * If `true`, the input will be focused as you increment or decrement the value with the stepper.\n     *\n     * @default true\n     */\n    focusInputOnChange?: boolean\n    /**\n     * This controls the value update when you blur out of the input.\n     * - If `true` and the value is greater than `max`, the value will be reset to `max`.\n     * - Else, the value remains the same.\n     *\n     * @default true\n     */\n    clampValueOnBlur?: boolean\n    /**\n     * If `true`, the input's value will change based on mouse wheel.\n     *\n     * @default false\n     */\n    allowMouseWheel?: boolean\n    /**\n     * The callback invoked when invalid number is entered.\n     */\n    onInvalid?: (\n      message: ValidityState,\n      value: string,\n      valueAsNumber: number,\n    ) => void\n    /**\n     * This is used to format the value so that screen readers\n     * can speak out a more human-friendly value.\n     *\n     * It is used to set the `aria-valuetext` property of the input.\n     */\n    getAriaValueText?: (value: string | number) => string\n    /**\n     * Whether the pressed key should be allowed in the input.\n     * The default behavior is to allow DOM floating point characters defined by /^[Ee0-9+\\-.]$/.\n     */\n    isValidCharacter?: (value: string) => boolean\n    /**\n     * If using a custom display format, this converts the custom format to a format `parseFloat` understands.\n     */\n    parse?: (value: string) => string\n    /**\n     * If using a custom display format, this converts the default format to the custom format.\n     */\n    format?: (value: string | number) => string | number\n  }\n\nexport const useNumberInput = (props: UseNumberInputProps = {}) => {\n  const {\n    id,\n    name,\n    value: valueProp,\n    defaultValue,\n    inputMode = \"decimal\",\n    pattern = \"[0-9]*(.[0-9]+)?\",\n    required,\n    disabled,\n    readOnly,\n    focusInputOnChange = true,\n    clampValueOnBlur = true,\n    keepWithinRange = true,\n    allowMouseWheel,\n    min = Number.MIN_SAFE_INTEGER,\n    max = Number.MAX_SAFE_INTEGER,\n    step: stepProp,\n    precision,\n    parse: parseProp,\n    format: formatProp,\n    onInvalid: onInvalidProp,\n    isValidCharacter: isValidCharacterProp,\n    getAriaValueText: getAriaValueTextProp,\n    onChange: onChangeProp,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    \"aria-invalid\": isInvalid,\n    ...rest\n  } = useFormControlProps(props)\n  const formControlProps = pickObject(rest, formControlProperties)\n\n  const isRequired = required\n  const isReadOnly = readOnly\n  const isDisabled = disabled\n\n  const [isFocused, setFocused] = useState(false)\n  const isInteractive = !(readOnly || disabled)\n\n  const inputRef = useRef<HTMLInputElement>(null)\n  const inputSelectionRef = useRef<{\n    start: number | null\n    end: number | null\n  } | null>(null)\n  const incrementRef = useRef<HTMLButtonElement>(null)\n  const decrementRef = useRef<HTMLButtonElement>(null)\n\n  const onFocus = useCallbackRef(\n    handlerAll(onFocusProp, (ev) => {\n      setFocused(true)\n\n      if (!inputSelectionRef.current) return\n\n      ev.target.selectionStart =\n        inputSelectionRef.current.start ?? ev.currentTarget.value?.length\n      ev.currentTarget.selectionEnd =\n        inputSelectionRef.current.end ?? ev.currentTarget.selectionStart\n    }),\n  )\n  const onBlur = useCallbackRef(\n    handlerAll(onBlurProp, () => {\n      setFocused(false)\n\n      if (clampValueOnBlur) validateAndClamp()\n    }),\n  )\n  const onInvalid = useCallbackRef(onInvalidProp)\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp)\n  const isValidCharacter = useCallbackRef(\n    isValidCharacterProp ?? isDefaultValidCharacter,\n  )\n\n  const {\n    isMin,\n    isMax,\n    isOut,\n    value,\n    valueAsNumber,\n    setValue,\n    update,\n    cast,\n    ...counter\n  } = useCounter({\n    value: valueProp,\n    defaultValue,\n    step: stepProp,\n    min,\n    max,\n    precision,\n    keepWithinRange,\n    onChange: onChangeProp,\n  })\n\n  const valueText = useMemo(() => {\n    let text = getAriaValueText?.(value)\n\n    if (text != null) return text\n\n    text = value.toString()\n\n    return !text ? undefined : text\n  }, [value, getAriaValueText])\n\n  const sanitize = useCallback(\n    (value: string) => value.split(\"\").filter(isValidCharacter).join(\"\"),\n    [isValidCharacter],\n  )\n\n  const parse = useCallback(\n    (value: string) => parseProp?.(value) ?? value,\n    [parseProp],\n  )\n\n  const format = useCallback(\n    (value: string | number) => (formatProp?.(value) ?? value).toString(),\n    [formatProp],\n  )\n\n  const increment = useCallback(\n    (step = stepProp ?? 1) => {\n      if (isInteractive) counter.increment(step)\n    },\n    [isInteractive, counter, stepProp],\n  )\n\n  const decrement = useCallback(\n    (step = stepProp ?? 1) => {\n      if (isInteractive) counter.decrement(step)\n    },\n    [isInteractive, counter, stepProp],\n  )\n\n  const validateAndClamp = useCallback(() => {\n    let next = value as string | number\n\n    if (value === \"\") return\n\n    const valueStartsWithE = /^[eE]/.test(value.toString())\n\n    if (valueStartsWithE) {\n      setValue(\"\")\n    } else {\n      if (valueAsNumber < min) next = min\n\n      if (valueAsNumber > max) next = max\n\n      cast(next)\n    }\n  }, [cast, max, min, setValue, value, valueAsNumber])\n\n  const onChange = useCallback(\n    (ev: ChangeEvent<HTMLInputElement>) => {\n      if ((ev.nativeEvent as InputEvent).isComposing) return\n\n      const parsedInput = parse(ev.currentTarget.value)\n\n      update(sanitize(parsedInput))\n\n      inputSelectionRef.current = {\n        start: ev.currentTarget.selectionStart,\n        end: ev.currentTarget.selectionEnd,\n      }\n    },\n    [parse, update, sanitize],\n  )\n\n  const onKeyDown = useCallback(\n    (ev: KeyboardEvent) => {\n      if (ev.nativeEvent.isComposing) return\n\n      if (!isValidNumericKeyboardEvent(ev, isValidCharacter))\n        ev.preventDefault()\n\n      const step = getStep(ev) * (stepProp ?? 1)\n\n      const keyMap: Record<string, KeyboardEventHandler> = {\n        ArrowUp: () => increment(step),\n        ArrowDown: () => decrement(step),\n        Home: () => update(min),\n        End: () => update(max),\n      }\n\n      const action = keyMap[ev.key]\n\n      if (!action) return\n\n      ev.preventDefault()\n      action(ev)\n    },\n    [decrement, increment, isValidCharacter, max, min, stepProp, update],\n  )\n\n  const { up, down, stop, isSpinning } = useSpinner(increment, decrement)\n\n  useAttributeObserver(incrementRef, [\"disabled\"], isSpinning, stop)\n  useAttributeObserver(decrementRef, [\"disabled\"], isSpinning, stop)\n\n  const focusInput = useCallback(() => {\n    if (focusInputOnChange)\n      requestAnimationFrame(() => {\n        inputRef.current?.focus()\n      })\n  }, [focusInputOnChange])\n\n  const eventUp = useCallback(\n    (ev: any) => {\n      ev.preventDefault()\n      up()\n      focusInput()\n    },\n    [focusInput, up],\n  )\n\n  const eventDown = useCallback(\n    (ev: any) => {\n      ev.preventDefault()\n      down()\n      focusInput()\n    },\n    [focusInput, down],\n  )\n\n  useUpdateEffect(() => {\n    if (valueAsNumber > max) {\n      onInvalid?.(\"rangeOverflow\", format(value), valueAsNumber)\n    } else if (valueAsNumber < min) {\n      onInvalid?.(\"rangeOverflow\", format(value), valueAsNumber)\n    }\n  }, [valueAsNumber, value, format, onInvalid])\n\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return\n\n    const notInSync = inputRef.current.value != value\n\n    if (!notInSync) return\n\n    const parsedInput = parse(inputRef.current.value)\n\n    setValue(sanitize(parsedInput))\n  }, [parse, sanitize])\n\n  useEventListener(\n    () => inputRef.current,\n    \"wheel\",\n    (ev) => {\n      const ownerDocument = inputRef.current?.ownerDocument ?? document\n      const isFocused = ownerDocument.activeElement === inputRef.current\n\n      if (!allowMouseWheel || !isFocused) return\n\n      ev.preventDefault()\n\n      const step = getStep(ev as any) * (stepProp ?? 1)\n      const direction = Math.sign(ev.deltaY)\n\n      if (direction === -1) {\n        increment(step)\n      } else if (direction === 1) {\n        decrement(step)\n      }\n    },\n    { passive: false },\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      id,\n      name,\n      type: \"text\",\n      role: \"spinbutton\",\n      inputMode,\n      pattern,\n      required,\n      disabled,\n      readOnly,\n      ...formControlProps,\n      ...props,\n      min,\n      max,\n      step: stepProp,\n      ref: mergeRefs(inputRef, ref),\n      value: format(value),\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": Number.isNaN(valueAsNumber) ? undefined : valueAsNumber,\n      \"aria-valuetext\": valueText,\n      \"aria-invalid\": ariaAttr(isInvalid ?? isOut),\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      onChange: handlerAll(props.onChange, onChange),\n      onKeyDown: handlerAll(props.onKeyDown, onKeyDown),\n      onFocus: handlerAll(props.onFocus, onFocus),\n      onBlur: handlerAll(props.onBlur, onBlur),\n    }),\n    [\n      id,\n      name,\n      inputMode,\n      pattern,\n      required,\n      disabled,\n      readOnly,\n      formControlProps,\n      min,\n      max,\n      stepProp,\n      format,\n      value,\n      valueAsNumber,\n      valueText,\n      isInvalid,\n      isOut,\n      onChange,\n      onKeyDown,\n      onFocus,\n      onBlur,\n    ],\n  )\n\n  const getIncrementProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const trulyDisabled = disabled || (keepWithinRange && isMax)\n\n      return {\n        required,\n        readOnly,\n        disabled: trulyDisabled,\n        ...formControlProps,\n        ...props,\n        style: {\n          ...props.style,\n          cursor: readOnly ? \"not-allowed\" : props.style?.cursor,\n        },\n        ref: mergeRefs(ref, incrementRef),\n        role: \"button\",\n        tabIndex: -1,\n        onPointerDown: handlerAll(props.onPointerDown, (ev) => {\n          if (ev.button === 0 && !trulyDisabled) eventUp(ev)\n        }),\n        onPointerLeave: handlerAll(props.onPointerLeave, stop),\n        onPointerUp: handlerAll(props.onPointerUp, stop),\n      }\n    },\n    [\n      disabled,\n      keepWithinRange,\n      isMax,\n      required,\n      readOnly,\n      formControlProps,\n      stop,\n      eventUp,\n    ],\n  )\n\n  const getDecrementProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const trulyDisabled = disabled || (keepWithinRange && isMin)\n\n      return {\n        required,\n        readOnly,\n        disabled: trulyDisabled,\n        ...formControlProps,\n        ...props,\n        style: {\n          ...props.style,\n          cursor: readOnly ? \"not-allowed\" : props.style?.cursor,\n        },\n        ref: mergeRefs(ref, decrementRef),\n        role: \"button\",\n        tabIndex: -1,\n        onPointerDown: handlerAll(props.onPointerDown, (ev) => {\n          if (ev.button === 0 && !trulyDisabled) eventDown(ev)\n        }),\n        onPointerLeave: handlerAll(props.onPointerLeave, stop),\n        onPointerUp: handlerAll(props.onPointerUp, stop),\n      }\n    },\n    [\n      disabled,\n      keepWithinRange,\n      isMin,\n      required,\n      readOnly,\n      formControlProps,\n      stop,\n      eventDown,\n    ],\n  )\n\n  return {\n    props: rest,\n    value: format(value),\n    valueAsNumber,\n    isFocused,\n    isRequired,\n    isReadOnly,\n    isDisabled,\n    getInputProps,\n    getIncrementProps,\n    getDecrementProps,\n  }\n}\n\nexport type UseNumberInputReturn = ReturnType<typeof useNumberInput>\n\nconst INTERVAL = 50\n\nconst DELAY = 300\n\ntype Action = \"increment\" | \"decrement\"\n\nconst useSpinner = (increment: Function, decrement: Function) => {\n  const [isSpinning, setIsSpinning] = useState(false)\n  const [action, setAction] = useState<Action | null>(null)\n  const [isOnce, setIsOnce] = useState(true)\n  const timeoutRef = useRef<any>(null)\n\n  const removeTimeout = () => clearTimeout(timeoutRef.current)\n\n  useInterval(\n    () => {\n      if (action === \"increment\") increment()\n\n      if (action === \"decrement\") decrement()\n    },\n    isSpinning ? INTERVAL : null,\n  )\n\n  const up = useCallback(() => {\n    if (isOnce) increment()\n\n    timeoutRef.current = setTimeout(() => {\n      setIsOnce(false)\n      setIsSpinning(true)\n      setAction(\"increment\")\n    }, DELAY)\n  }, [increment, isOnce])\n\n  const down = useCallback(() => {\n    if (isOnce) decrement()\n\n    timeoutRef.current = setTimeout(() => {\n      setIsOnce(false)\n      setIsSpinning(true)\n      setAction(\"decrement\")\n    }, DELAY)\n  }, [decrement, isOnce])\n\n  const stop = useCallback(() => {\n    setIsOnce(true)\n    setIsSpinning(false)\n    removeTimeout()\n  }, [])\n\n  useEffect(() => {\n    return () => removeTimeout()\n  }, [])\n\n  return { up, down, stop, isSpinning }\n}\n\nconst useAttributeObserver = (\n  ref: React.RefObject<HTMLElement | null>,\n  attributeFilter: string[],\n  enabled: boolean,\n  func: () => void,\n) => {\n  useEffect(() => {\n    if (!ref.current || !enabled) return\n\n    const ownerDocument = ref.current.ownerDocument.defaultView ?? window\n\n    const observer = new ownerDocument.MutationObserver((changes) => {\n      for (const { type, attributeName } of changes) {\n        if (\n          type === \"attributes\" &&\n          attributeName &&\n          attributeFilter.includes(attributeName)\n        )\n          func()\n      }\n    })\n\n    observer.observe(ref.current, { attributes: true, attributeFilter })\n\n    return () => observer.disconnect()\n  })\n}\n\ntype NumberInputOptions = {\n  /**\n   * If `true`, display the addon for the number input.\n   */\n  isStepper?: boolean\n  /**\n   * Props for container element.\n   */\n  containerProps?: HTMLUIProps<\"div\">\n  /**\n   * Props for addon component.\n   */\n  addonProps?: HTMLUIProps<\"div\">\n  /**\n   * Props for increment component.\n   */\n  incrementProps?: NumberIncrementStepperProps\n  /**\n   * Props for decrement component.\n   */\n  decrementProps?: NumberDecrementStepperProps\n  /**\n   * The border color when the input is focused.\n   */\n  focusBorderColor?: ColorModeToken<CSS.Property.BorderColor, \"colors\">\n  /**\n   * The border color when the input is invalid.\n   */\n  errorBorderColor?: ColorModeToken<CSS.Property.BorderColor, \"colors\">\n}\n\nexport type NumberInputProps = Omit<\n  HTMLUIProps<\"input\">,\n  \"disabled\" | \"required\" | \"readOnly\" | \"size\" | \"onChange\"\n> &\n  ThemeProps<\"NumberInput\"> &\n  Omit<UseNumberInputProps, \"disabled\" | \"required\" | \"readOnly\"> &\n  NumberInputOptions\n\ntype NumberInputContext = {\n  getInputProps: PropGetter\n  getIncrementProps: PropGetter\n  getDecrementProps: PropGetter\n  styles: Record<string, CSSUIObject>\n}\n\nconst [NumberInputContextProvider, useNumberInputContext] =\n  createContext<NumberInputContext>({\n    strict: false,\n    name: \"NumberInputContext\",\n  })\n\n/**\n * `NumberInput` is a component used to obtain numeric input from the user.\n *\n * @see Docs https://yamada-ui.com/components/forms/number-input\n */\nexport const NumberInput = forwardRef<NumberInputProps, \"input\">(\n  (props, ref) => {\n    const [styles, mergedProps] = useMultiComponentStyle(\"NumberInput\", props)\n    const {\n      className,\n      isStepper = true,\n      containerProps,\n      addonProps,\n      incrementProps,\n      decrementProps,\n      ...computedProps\n    } = omitThemeProps(mergedProps)\n    const {\n      getInputProps,\n      getIncrementProps,\n      getDecrementProps,\n      props: rest,\n    } = useNumberInput(computedProps)\n\n    const css: CSSUIObject = {\n      position: \"relative\",\n      zIndex: 0,\n      ...styles.container,\n    }\n\n    return (\n      <NumberInputContextProvider\n        value={{ getInputProps, getIncrementProps, getDecrementProps, styles }}\n      >\n        <ui.div\n          className={cx(\"ui-number-input\", className)}\n          __css={css}\n          {...containerProps}\n        >\n          <NumberInputField\n            {...getInputProps(rest as DOMAttributes<HTMLElement>, ref)}\n          />\n\n          {isStepper ? (\n            <NumberInputAddon {...addonProps}>\n              <NumberIncrementStepper {...incrementProps} />\n              <NumberDecrementStepper {...decrementProps} />\n            </NumberInputAddon>\n          ) : null}\n        </ui.div>\n      </NumberInputContextProvider>\n    )\n  },\n)\n\ntype NumberInputFieldProps = Omit<\n  HTMLUIProps<\"input\">,\n  \"disabled\" | \"required\" | \"readOnly\" | \"size\"\n>\n\nconst NumberInputField = forwardRef<NumberInputFieldProps, \"input\">(\n  ({ className, ...rest }, ref) => {\n    const { styles } = useNumberInputContext()\n\n    const css: CSSUIObject = {\n      width: \"100%\",\n      ...styles.field,\n    }\n\n    return (\n      <ui.input\n        ref={ref}\n        className={cx(\"ui-number-input__field\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n\ntype NumberInputAddonProps = HTMLUIProps<\"div\">\n\nconst NumberInputAddon = forwardRef<NumberInputAddonProps, \"div\">(\n  ({ className, ...rest }, ref) => {\n    const { styles } = useNumberInputContext()\n\n    const css: CSSUIObject = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"absolute\",\n      top: \"0\",\n      insetEnd: \"0px\",\n      margin: \"1px\",\n      height: \"calc(100% - 2px)\",\n      zIndex: \"fallback(yamcha, 1)\",\n      ...styles.addon,\n    }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-number-input__addon\", className)}\n        aria-hidden\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n\nconst Stepper = ui(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flex: 1,\n    transitionProperty: \"common\",\n    transitionDuration: \"normal\",\n    userSelect: \"none\",\n    cursor: \"pointer\",\n    lineHeight: \"normal\",\n  },\n})\n\ntype NumberIncrementStepperProps = HTMLUIProps<\"div\">\n\nconst NumberIncrementStepper = forwardRef<NumberIncrementStepperProps, \"div\">(\n  ({ className, children, ...rest }, ref) => {\n    const { getIncrementProps, styles } = useNumberInputContext()\n\n    const css: CSSUIObject = { ...styles.stepper }\n\n    return (\n      <Stepper\n        className={cx(\"ui-number-input__stepper--up\", className)}\n        {...getIncrementProps(rest as DOMAttributes<HTMLElement>, ref)}\n        __css={css}\n      >\n        {children ?? <ChevronIcon __css={{ transform: \"rotate(180deg)\" }} />}\n      </Stepper>\n    )\n  },\n)\n\ntype NumberDecrementStepperProps = HTMLUIProps<\"div\">\n\nconst NumberDecrementStepper = forwardRef<NumberDecrementStepperProps, \"div\">(\n  ({ className, children, ...rest }, ref) => {\n    const { getDecrementProps, styles } = useNumberInputContext()\n\n    const css: CSSUIObject = { ...styles.stepper }\n\n    return (\n      <Stepper\n        className={cx(\"ui-number-input__stepper--down\", className)}\n        {...getDecrementProps(rest as DOMAttributes<HTMLElement>, ref)}\n        __css={css}\n      >\n        {children ?? <ChevronIcon />}\n      </Stepper>\n    )\n  },\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
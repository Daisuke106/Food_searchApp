{"ast":null,"code":"\"use client\";\n\n// src/heading.tsx\nimport { ui, forwardRef, omitThemeProps, useComponentStyle } from \"@yamada-ui/core\";\nimport { cx } from \"@yamada-ui/utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef((props, ref) => {\n  const [css, mergedProps] = useComponentStyle(\"Heading\", props);\n  const {\n    className,\n    ...rest\n  } = omitThemeProps(mergedProps);\n  return /* @__PURE__ */jsx(ui.h1, {\n    ref,\n    className: cx(\"ui-heading\", className),\n    __css: css,\n    ...rest\n  });\n});\nexport { Heading };","map":{"version":3,"names":["ui","forwardRef","omitThemeProps","useComponentStyle","cx","jsx","Heading","props","ref","css","mergedProps","className","rest","h1","__css"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\typography\\src\\heading.tsx"],"sourcesContent":["import type { HTMLUIProps, ThemeProps } from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  omitThemeProps,\n  useComponentStyle,\n} from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\n\nexport type HeadingProps = HTMLUIProps<\"h1\"> & ThemeProps<\"Heading\">\n\n/**\n * `Heading` is a component that represents section headings. By default, it renders an `h1` element.\n *\n * @see Docs https://yamada-ui.com/components/typography/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h1\">((props, ref) => {\n  const [css, mergedProps] = useComponentStyle(\"Heading\", props)\n  const { className, ...rest } = omitThemeProps(mergedProps)\n\n  return (\n    <ui.h1\n      ref={ref}\n      className={cx(\"ui-heading\", className)}\n      __css={css}\n      {...rest}\n    />\n  )\n})\n"],"mappings":";;;AACA,SACEA,EAAA,EACAC,UAAA,EACAC,cAAA,EACAC,iBAAA,QACK;AACP,SAASC,EAAA,QAAU;AAcf,SAAAC,GAAA;AALG,IAAMC,OAAA,GAAUL,UAAA,CAA+B,CAACM,KAAA,EAAOC,GAAA,KAAQ;EACpE,MAAM,CAACC,GAAA,EAAKC,WAAW,IAAIP,iBAAA,CAAkB,WAAWI,KAAK;EAC7D,MAAM;IAAEI,SAAA;IAAW,GAAGC;EAAK,IAAIV,cAAA,CAAeQ,WAAW;EAEzD,OACE,eAAAL,GAAA,CAACL,EAAA,CAAGa,EAAA,EAAH;IACCL,GAAA;IACAG,SAAA,EAAWP,EAAA,CAAG,cAAcO,SAAS;IACrCG,KAAA,EAAOL,GAAA;IACN,GAAGG;EAAA,CACN;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
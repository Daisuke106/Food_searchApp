{"ast":null,"code":"\"use client\";\n\n// src/reorder.tsx\nimport { ui, useMultiComponentStyle, omitThemeProps } from \"@yamada-ui/core\";\nimport { MotionReorder } from \"@yamada-ui/motion\";\nimport { createContext, cx, getValidChildren, handlerAll, useUpdateEffect } from \"@yamada-ui/utils\";\nimport { forwardRef, useCallback, useMemo, useRef, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ReorderProvider, useReorderContext] = createContext({\n  name: \"ReorderContext\",\n  errorMessage: `useReorderContext returned is 'undefined'. Seems you forgot to wrap the components in \"<Reorder />\"`\n});\nvar omitDuplicated = values => Array.from(new Set(values));\nvar pickDuplicated = values => values.filter((value, index, self) => self.indexOf(value) === index && index !== self.lastIndexOf(value));\nvar Reorder = forwardRef((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"Reorder\", props);\n  const {\n    className,\n    orientation = \"vertical\",\n    gap = \"fallback(4, 1rem)\",\n    onChange,\n    onCompleteChange,\n    children,\n    ...rest\n  } = omitThemeProps(mergedProps);\n  const axis = orientation === \"vertical\" ? \"y\" : \"x\";\n  const validChildren = getValidChildren(children);\n  const defaultValues = useMemo(() => {\n    const values2 = validChildren.map(({\n      props: props2\n    }) => props2.label);\n    const duplicatedValues = pickDuplicated(values2);\n    if (duplicatedValues.length) console.warn(`Reorder: 'label' of 'ReorderItem' must not be duplicated. duplicate 'label' is '${duplicatedValues.join(`', '`)}' `);\n    return omitDuplicated(values2);\n  }, [validChildren]);\n  const prevDefaultValues = useRef(defaultValues);\n  const [values, setValues] = useState(defaultValues);\n  const prevValues = useRef(defaultValues);\n  const onReorder = useCallback(newValues => {\n    setValues(newValues);\n    onChange == null ? void 0 : onChange(newValues);\n  }, [onChange]);\n  const onCompleteReorder = useCallback(() => {\n    const isEqual = JSON.stringify(prevValues.current) === JSON.stringify(values);\n    if (isEqual) return;\n    prevValues.current = values;\n    onCompleteChange == null ? void 0 : onCompleteChange(values);\n  }, [onCompleteChange, values]);\n  useUpdateEffect(() => {\n    const isEqual = JSON.stringify(defaultValues) === JSON.stringify(prevDefaultValues.current);\n    if (isEqual) return;\n    prevValues.current = defaultValues;\n    prevDefaultValues.current = defaultValues;\n    setValues(defaultValues);\n  }, [defaultValues]);\n  const cloneChildren = useMemo(() => values.map(value => validChildren.find(({\n    props: props2\n  }) => props2.label === value)), [values, validChildren]);\n  const css = {\n    display: \"flex\",\n    flexDirection: orientation === \"vertical\" ? \"column\" : \"row\",\n    gap,\n    ...styles.container\n  };\n  return /* @__PURE__ */jsx(ReorderProvider, {\n    value: {\n      orientation,\n      styles\n    },\n    children: /* @__PURE__ */jsx(ui.ul, {\n      ref,\n      as: MotionReorder.Group,\n      className: cx(\"ui-reorder\", className),\n      axis,\n      values,\n      onReorder,\n      __css: css,\n      ...rest,\n      onMouseUp: handlerAll(rest.onMouseUp, onCompleteReorder),\n      onTouchEnd: handlerAll(rest.onTouchEnd, onCompleteReorder),\n      children: cloneChildren\n    })\n  });\n});\nReorder.displayName = \"Reorder\";\nexport { ReorderProvider, useReorderContext, Reorder };","map":{"version":3,"names":["ui","useMultiComponentStyle","omitThemeProps","MotionReorder","createContext","cx","getValidChildren","handlerAll","useUpdateEffect","forwardRef","useCallback","useMemo","useRef","useState","jsx","ReorderProvider","useReorderContext","name","errorMessage","omitDuplicated","values","Array","from","Set","pickDuplicated","filter","value","index","self","indexOf","lastIndexOf","Reorder","props","ref","styles","mergedProps","className","orientation","gap","onChange","onCompleteChange","children","rest","axis","validChildren","defaultValues","values2","map","props2","label","duplicatedValues","length","console","warn","join","prevDefaultValues","setValues","prevValues","onReorder","newValues","onCompleteReorder","isEqual","JSON","stringify","current","cloneChildren","find","css","display","flexDirection","container","ul","as","Group","__css","onMouseUp","onTouchEnd","displayName"],"sources":["C:\\チーム開発\\Food_searchApp\\food_searchapp_react\\node_modules\\@yamada-ui\\reorder\\src\\reorder.tsx"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps, ThemeProps } from \"@yamada-ui/core\"\nimport { ui, useMultiComponentStyle, omitThemeProps } from \"@yamada-ui/core\"\nimport type { HTMLMotionProps } from \"@yamada-ui/motion\"\nimport { MotionReorder } from \"@yamada-ui/motion\"\nimport {\n  createContext,\n  cx,\n  getValidChildren,\n  handlerAll,\n  useUpdateEffect,\n} from \"@yamada-ui/utils\"\nimport { forwardRef, useCallback, useMemo, useRef, useState } from \"react\"\n\ntype ReorderContext = {\n  orientation: \"vertical\" | \"horizontal\"\n  styles: Record<string, CSSUIObject>\n}\n\nexport const [ReorderProvider, useReorderContext] =\n  createContext<ReorderContext>({\n    name: \"ReorderContext\",\n    errorMessage: `useReorderContext returned is 'undefined'. Seems you forgot to wrap the components in \"<Reorder />\"`,\n  })\n\ntype ReorderOptions = {\n  /**\n   * The orientation of the reorder.\n   *\n   * @default 'vertical'\n   */\n  orientation?: \"vertical\" | \"horizontal\"\n  /**\n   * The callback invoked when reorder items are moved.\n   */\n  onChange?: (labels: (string | number)[]) => void\n  /**\n   * The callback invoked when the movement of reorder items is completed.\n   */\n  onCompleteChange?: (labels: (string | number)[]) => void\n}\n\nexport type ReorderProps = Omit<HTMLUIProps<\"ul\">, \"as\" | \"onChange\"> &\n  Omit<HTMLMotionProps<\"ul\">, \"as\" | \"onChange\"> &\n  ThemeProps<\"Reorder\"> &\n  ReorderOptions\n\nconst omitDuplicated = (values: (string | number)[]): (string | number)[] =>\n  Array.from(new Set(values))\n\nconst pickDuplicated = (values: (string | number)[]): (string | number)[] =>\n  values.filter(\n    (value, index, self) =>\n      self.indexOf(value) === index && index !== self.lastIndexOf(value),\n  )\n\n/**\n * `Reorder` is a component that allows you to change the order of items using drag and drop.\n *\n * @see Docs https://yamada-ui.com/components/data-display/reorder\n */\nexport const Reorder = forwardRef<HTMLUListElement, ReorderProps>(\n  (props, ref) => {\n    const [styles, mergedProps] = useMultiComponentStyle(\"Reorder\", props)\n    const {\n      className,\n      orientation = \"vertical\",\n      gap = \"fallback(4, 1rem)\",\n      onChange,\n      onCompleteChange,\n      children,\n      ...rest\n    } = omitThemeProps(mergedProps)\n\n    const axis = orientation === \"vertical\" ? \"y\" : \"x\"\n\n    const validChildren = getValidChildren(children)\n\n    const defaultValues = useMemo(() => {\n      const values = validChildren.map(({ props }) => props.label)\n\n      const duplicatedValues = pickDuplicated(values)\n\n      if (duplicatedValues.length)\n        console.warn(\n          `Reorder: 'label' of 'ReorderItem' must not be duplicated. duplicate 'label' is '${duplicatedValues.join(\n            `', '`,\n          )}' `,\n        )\n\n      return omitDuplicated(values)\n    }, [validChildren])\n    const prevDefaultValues = useRef<(string | number)[]>(defaultValues)\n\n    const [values, setValues] = useState<(string | number)[]>(defaultValues)\n    const prevValues = useRef<(string | number)[]>(defaultValues)\n\n    const onReorder = useCallback(\n      (newValues: (string | number)[]) => {\n        setValues(newValues)\n\n        onChange?.(newValues)\n      },\n      [onChange],\n    )\n\n    const onCompleteReorder = useCallback(() => {\n      const isEqual =\n        JSON.stringify(prevValues.current) === JSON.stringify(values)\n\n      if (isEqual) return\n\n      prevValues.current = values\n\n      onCompleteChange?.(values)\n    }, [onCompleteChange, values])\n\n    useUpdateEffect(() => {\n      const isEqual =\n        JSON.stringify(defaultValues) ===\n        JSON.stringify(prevDefaultValues.current)\n\n      if (isEqual) return\n\n      prevValues.current = defaultValues\n      prevDefaultValues.current = defaultValues\n\n      setValues(defaultValues)\n    }, [defaultValues])\n\n    const cloneChildren = useMemo(\n      () =>\n        values.map((value) =>\n          validChildren.find(({ props }) => props.label === value),\n        ),\n      [values, validChildren],\n    )\n\n    const css: CSSUIObject = {\n      display: \"flex\",\n      flexDirection: orientation === \"vertical\" ? \"column\" : \"row\",\n      gap,\n      ...styles.container,\n    }\n\n    return (\n      <ReorderProvider value={{ orientation, styles }}>\n        <ui.ul\n          ref={ref}\n          as={MotionReorder.Group}\n          className={cx(\"ui-reorder\", className)}\n          axis={axis}\n          values={values}\n          onReorder={onReorder}\n          __css={css}\n          {...rest}\n          onMouseUp={handlerAll(rest.onMouseUp, onCompleteReorder)}\n          onTouchEnd={handlerAll(rest.onTouchEnd, onCompleteReorder)}\n        >\n          {cloneChildren}\n        </ui.ul>\n      </ReorderProvider>\n    )\n  },\n)\n\nReorder.displayName = \"Reorder\"\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}